openapi: 3.0.3
info:
  title: MCMA Job Processor
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
  version: '0.13'
paths:
  /jobs:
    get:
      operationId: listJobs
      parameters:
        - name: status
          in: query
          schema:
            type: string
            enum:
              - New
              - Pending
              - Assigned
              - Queued
              - Scheduled
              - Running
              - Completed
              - Failed
              - Canceled
        - name: from
          in: query
          schema:
            type: string
            format: date-time
        - name: to
          in: query
          schema:
            type: string
            format: date-time
        - name: order
          in: query
          schema:
            type: string
            enum:
              - asc
              - desc
        - name: limit
          in: query
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: 200 OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobQueryResults'
        default:
          $ref: '#/components/responses/ApiError'
    post:
      operationId: createJob
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Job'
      responses:
        201:
          description: 201 Created
          headers:
            Location:
              schema:
                type: string
                format: uri
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
        default:
          $ref: '#/components/responses/ApiError'
  /jobs/{jobId}:
    parameters:
      - name: jobId
        in: path
        required: true
        schema:
          type: string
    get:
      operationId: getJob
      responses:
        200:
          description: 200 OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
        default:
          $ref: '#/components/responses/ApiError'
    delete:
      operationId: deleteJob
      responses:
        200:
          description: 200 OK
        default:
          $ref: '#/components/responses/ApiError'
  /jobs/{jobId}/cancel:
    parameters:
      - name: jobId
        in: path
        required: true
        schema:
          type: string
    post:
      operationId: cancelJob
      responses:
        200:
          description: 200 OK
        default:
          $ref: '#/components/responses/ApiError'
  /jobs/{jobId}/restart:
    parameters:
      - name: jobId
        in: path
        required: true
        schema:
          type: string
    post:
      operationId: restartJob
      responses:
        200:
          description: 200 OK
        default:
          $ref: '#/components/responses/ApiError'
  /jobs/{jobId}/executions:
    parameters:
      - name: jobId
        in: path
        required: true
        schema:
          type: string
      - name: status
        in: query
        schema:
          type: string
          enum:
            - New
            - Pending
            - Assigned
            - Queued
            - Scheduled
            - Running
            - Completed
            - Failed
            - Canceled
      - name: from
        in: query
        schema:
          type: string
          format: date-time
      - name: to
        in: query
        schema:
          type: string
          format: date-time
      - name: order
        in: query
        schema:
          type: string
          enum:
            - asc
            - desc
      - name: limit
        in: query
        schema:
          type: integer
          format: int32
    get:
      operationId: listJobExecutions
      responses:
        200:
          description: 200 OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobExecutionQueryResults'
        default:
          $ref: '#/components/responses/ApiError'
  /jobs/{jobId}/executions/{executionId}:
    parameters:
      - name: jobId
        in: path
        required: true
        schema:
          type: string
      - name: executionId
        in: path
        required: true
        schema:
          type: string
    get:
      operationId: getJobExecution
      responses:
        200:
          description: 200 OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobExecution'
        default:
          $ref: '#/components/responses/ApiError'
  /jobs/{jobId}/executions/${executionId}/notifications:
    parameters:
      - name: jobId
        in: path
        required: true
        schema:
          type: string
      - name: executionId
        in: path
        required: true
        schema:
          type: string
    post:
      operationId: postNotification
      responses:
        200:
          description: 200 OK
        default:
          $ref: '#/components/responses/ApiError'
components:
  responses:
    ApiError:
      description: API Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/McmaApiError'
  schemas:
    McmaObject:
      type: object
      properties:
        '@type':
          type: string
    McmaResource:
      allOf:
        - $ref: '#/components/schemas/McmaObject'
        - type: object
          properties:
            id:
              type: string
              format: uri
            dateCreated:
              type: string
              format: date-time
            dateModified:
              type: string
              format: date-time
            custom:
              type: object
              additionalProperties: true
    McmaTracker:
      allOf:
        - $ref: '#/components/schemas/McmaObject'
        - type: object
          properties:
            id:
              type: string
            label:
              type: string
            custom:
              type: object
              additionalProperties: true
          required:
            - id
            - label
    NotificationEndpoint:
      allOf:
        - $ref: '#/components/schemas/McmaObject'
        - type: object
          properties:
            httpEndpoint:
              type: string
              format: uri
          required:
            - httpEndpoint
    ProblemDetail:
      allOf:
        - $ref: '#/components/schemas/McmaObject'
        - type: object
          properties:
            type:
              type: string
              format: uri
            title:
              type: string
            detail:
              type: string
            instance:
              type: string
              format: uri
          required:
            - type
            - title
          additionalProperties: true
    JobParameterBag:
      allOf:
        - $ref: '#/components/schemas/McmaObject'
        - type: object
          additionalProperties: true
    JobBase:
      allOf:
        - $ref: '#/components/schemas/McmaResource'
        - type: object
          properties:
            status:
              type: string
              enum:
                - New
                - Pending
                - Assigned
                - Queued
                - Scheduled
                - Running
                - Completed
                - Failed
                - Canceled
            error:
              $ref: '#/components/schemas/ProblemDetail'
            jobOutput:
              $ref: '#/components/schemas/JobParameterBag'
            progress:
              type: number
    Job:
      allOf:
        - $ref: '#/components/schemas/JobBase'
        - type: object
          properties:
            parentId:
              type: string
              format: uri
            jobProfileId:
              type: string
              format: uri
            jobInput:
              $ref: '#/components/schemas/JobParameterBag'
            timeout:
              type: number
            deadline:
              type: string
              format: date-time
            tracker:
              $ref: '#/components/schemas/McmaTracker'
            notificationEndpoint:
              $ref: '#/components/schemas/NotificationEndpoint'
          required:
            - jobProfileId
    JobQueryResults:
      allOf:
        - $ref: '#/components/schemas/McmaObject'
        - type: object
          properties:
            nextPageStartToken:
              type: string
            results:
              type: array
              items:
                $ref: '#/components/schemas/Job'
    JobExecution:
      allOf:
        - $ref: '#/components/schemas/JobBase'
        - type: object
          properties:
            jobAssignmentId:
              type: string
              format: uri
            actualStartDate:
              type: string
              format: date-time
            actualEndDate:
              type: string
              format: date-time
            actualDuration:
              type: number
              format: int64
    JobExecutionQueryResults:
      allOf:
        - $ref: '#/components/schemas/McmaObject'
        - type: object
          properties:
            nextPageStartToken:
              type: string
            results:
              type: array
              items:
                $ref: '#/components/schemas/JobExecution'
    McmaApiError:
      allOf:
        - $ref: '#/components/schemas/McmaObject'
        - type: object
          properties:
            status:
              type: integer
            error:
              type: string
            message:
              type: string
            timestamp:
              type: string
              format: date-time
            path:
              type: string
          required:
            - status
            - error
            - message
            - timestamp
            - path
