### YamlMime:ManagedReference
items:
- uid: Mcma.Azure.BlobStorage.Proxies.BlobStorageProxyExtensions
  commentId: T:Mcma.Azure.BlobStorage.Proxies.BlobStorageProxyExtensions
  id: BlobStorageProxyExtensions
  parent: Mcma.Azure.BlobStorage.Proxies
  children:
  - Mcma.Azure.BlobStorage.Proxies.BlobStorageProxyExtensions.Proxy(Mcma.Azure.BlobStorage.BlobStorageFileLocator,System.String)
  - Mcma.Azure.BlobStorage.Proxies.BlobStorageProxyExtensions.Proxy(Mcma.Azure.BlobStorage.BlobStorageFolderLocator,System.String)
  langs:
  - csharp
  - vb
  name: BlobStorageProxyExtensions
  nameWithType: BlobStorageProxyExtensions
  fullName: Mcma.Azure.BlobStorage.Proxies.BlobStorageProxyExtensions
  type: Class
  source:
    remote:
      path: Azure/Mcma.Azure.BlobStorage/Proxies/BlobStorageProxyExtensions.cs
      branch: documentation
      repo: https://github.com/ebu/mcma-libraries-dotnet.git
    id: BlobStorageProxyExtensions
    path: ../mcma-libraries-dotnet/Azure/Mcma.Azure.BlobStorage/Proxies/BlobStorageProxyExtensions.cs
    startLine: 2
  assemblies:
  - Mcma.Azure.BlobStorage
  namespace: Mcma.Azure.BlobStorage.Proxies
  syntax:
    content: public static class BlobStorageProxyExtensions
    content.vb: Public Module BlobStorageProxyExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Mcma.Azure.BlobStorage.Proxies.BlobStorageProxyExtensions.Proxy(Mcma.Azure.BlobStorage.BlobStorageFileLocator,System.String)
  commentId: M:Mcma.Azure.BlobStorage.Proxies.BlobStorageProxyExtensions.Proxy(Mcma.Azure.BlobStorage.BlobStorageFileLocator,System.String)
  id: Proxy(Mcma.Azure.BlobStorage.BlobStorageFileLocator,System.String)
  isExtensionMethod: true
  parent: Mcma.Azure.BlobStorage.Proxies.BlobStorageProxyExtensions
  langs:
  - csharp
  - vb
  name: Proxy(BlobStorageFileLocator, String)
  nameWithType: BlobStorageProxyExtensions.Proxy(BlobStorageFileLocator, String)
  fullName: Mcma.Azure.BlobStorage.Proxies.BlobStorageProxyExtensions.Proxy(Mcma.Azure.BlobStorage.BlobStorageFileLocator, System.String)
  type: Method
  source:
    remote:
      path: Azure/Mcma.Azure.BlobStorage/Proxies/BlobStorageProxyExtensions.cs
      branch: documentation
      repo: https://github.com/ebu/mcma-libraries-dotnet.git
    id: Proxy
    path: ../mcma-libraries-dotnet/Azure/Mcma.Azure.BlobStorage/Proxies/BlobStorageProxyExtensions.cs
    startLine: 4
  assemblies:
  - Mcma.Azure.BlobStorage
  namespace: Mcma.Azure.BlobStorage.Proxies
  syntax:
    content: public static BlobStorageFileProxy Proxy(this BlobStorageFileLocator locator, string connectionString)
    parameters:
    - id: locator
      type: Mcma.Azure.BlobStorage.BlobStorageFileLocator
    - id: connectionString
      type: System.String
    return:
      type: Mcma.Azure.BlobStorage.Proxies.BlobStorageFileProxy
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Proxy(locator As BlobStorageFileLocator, connectionString As String) As BlobStorageFileProxy
  overload: Mcma.Azure.BlobStorage.Proxies.BlobStorageProxyExtensions.Proxy*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Mcma.Azure.BlobStorage.Proxies.BlobStorageProxyExtensions.Proxy(Mcma.Azure.BlobStorage.BlobStorageFolderLocator,System.String)
  commentId: M:Mcma.Azure.BlobStorage.Proxies.BlobStorageProxyExtensions.Proxy(Mcma.Azure.BlobStorage.BlobStorageFolderLocator,System.String)
  id: Proxy(Mcma.Azure.BlobStorage.BlobStorageFolderLocator,System.String)
  isExtensionMethod: true
  parent: Mcma.Azure.BlobStorage.Proxies.BlobStorageProxyExtensions
  langs:
  - csharp
  - vb
  name: Proxy(BlobStorageFolderLocator, String)
  nameWithType: BlobStorageProxyExtensions.Proxy(BlobStorageFolderLocator, String)
  fullName: Mcma.Azure.BlobStorage.Proxies.BlobStorageProxyExtensions.Proxy(Mcma.Azure.BlobStorage.BlobStorageFolderLocator, System.String)
  type: Method
  source:
    remote:
      path: Azure/Mcma.Azure.BlobStorage/Proxies/BlobStorageProxyExtensions.cs
      branch: documentation
      repo: https://github.com/ebu/mcma-libraries-dotnet.git
    id: Proxy
    path: ../mcma-libraries-dotnet/Azure/Mcma.Azure.BlobStorage/Proxies/BlobStorageProxyExtensions.cs
    startLine: 7
  assemblies:
  - Mcma.Azure.BlobStorage
  namespace: Mcma.Azure.BlobStorage.Proxies
  syntax:
    content: public static BlobStorageFolderProxy Proxy(this BlobStorageFolderLocator locator, string connectionString)
    parameters:
    - id: locator
      type: Mcma.Azure.BlobStorage.BlobStorageFolderLocator
    - id: connectionString
      type: System.String
    return:
      type: Mcma.Azure.BlobStorage.Proxies.BlobStorageFolderProxy
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Proxy(locator As BlobStorageFolderLocator, connectionString As String) As BlobStorageFolderProxy
  overload: Mcma.Azure.BlobStorage.Proxies.BlobStorageProxyExtensions.Proxy*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Mcma.Azure.BlobStorage.Proxies
  commentId: N:Mcma.Azure.BlobStorage.Proxies
  name: Mcma.Azure.BlobStorage.Proxies
  nameWithType: Mcma.Azure.BlobStorage.Proxies
  fullName: Mcma.Azure.BlobStorage.Proxies
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Mcma.Azure.BlobStorage.Proxies.BlobStorageProxyExtensions.Proxy*
  commentId: Overload:Mcma.Azure.BlobStorage.Proxies.BlobStorageProxyExtensions.Proxy
  name: Proxy
  nameWithType: BlobStorageProxyExtensions.Proxy
  fullName: Mcma.Azure.BlobStorage.Proxies.BlobStorageProxyExtensions.Proxy
- uid: Mcma.Azure.BlobStorage.BlobStorageFileLocator
  commentId: T:Mcma.Azure.BlobStorage.BlobStorageFileLocator
  parent: Mcma.Azure.BlobStorage
  name: BlobStorageFileLocator
  nameWithType: BlobStorageFileLocator
  fullName: Mcma.Azure.BlobStorage.BlobStorageFileLocator
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Mcma.Azure.BlobStorage.Proxies.BlobStorageFileProxy
  commentId: T:Mcma.Azure.BlobStorage.Proxies.BlobStorageFileProxy
  parent: Mcma.Azure.BlobStorage.Proxies
  name: BlobStorageFileProxy
  nameWithType: BlobStorageFileProxy
  fullName: Mcma.Azure.BlobStorage.Proxies.BlobStorageFileProxy
- uid: Mcma.Azure.BlobStorage
  commentId: N:Mcma.Azure.BlobStorage
  name: Mcma.Azure.BlobStorage
  nameWithType: Mcma.Azure.BlobStorage
  fullName: Mcma.Azure.BlobStorage
- uid: Mcma.Azure.BlobStorage.BlobStorageFolderLocator
  commentId: T:Mcma.Azure.BlobStorage.BlobStorageFolderLocator
  parent: Mcma.Azure.BlobStorage
  name: BlobStorageFolderLocator
  nameWithType: BlobStorageFolderLocator
  fullName: Mcma.Azure.BlobStorage.BlobStorageFolderLocator
- uid: Mcma.Azure.BlobStorage.Proxies.BlobStorageFolderProxy
  commentId: T:Mcma.Azure.BlobStorage.Proxies.BlobStorageFolderProxy
  parent: Mcma.Azure.BlobStorage.Proxies
  name: BlobStorageFolderProxy
  nameWithType: BlobStorageFolderProxy
  fullName: Mcma.Azure.BlobStorage.Proxies.BlobStorageFolderProxy
