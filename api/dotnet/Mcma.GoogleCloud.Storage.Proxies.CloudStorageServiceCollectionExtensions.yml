### YamlMime:ManagedReference
items:
- uid: Mcma.GoogleCloud.Storage.Proxies.CloudStorageServiceCollectionExtensions
  commentId: T:Mcma.GoogleCloud.Storage.Proxies.CloudStorageServiceCollectionExtensions
  id: CloudStorageServiceCollectionExtensions
  parent: Mcma.GoogleCloud.Storage.Proxies
  children:
  - Mcma.GoogleCloud.Storage.Proxies.CloudStorageServiceCollectionExtensions.AddMcmaCloudStorage(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Google.Cloud.Storage.V1.StorageClientBuilder})
  langs:
  - csharp
  - vb
  name: CloudStorageServiceCollectionExtensions
  nameWithType: CloudStorageServiceCollectionExtensions
  fullName: Mcma.GoogleCloud.Storage.Proxies.CloudStorageServiceCollectionExtensions
  type: Class
  source:
    remote:
      path: GoogleCloud/Mcma.GoogleCloud.Storage/CloudStorageServiceCollectionExtensions.cs
      branch: documentation
      repo: https://github.com/ebu/mcma-libraries-dotnet.git
    id: CloudStorageServiceCollectionExtensions
    path: ../mcma-libraries-dotnet/GoogleCloud/Mcma.GoogleCloud.Storage/CloudStorageServiceCollectionExtensions.cs
    startLine: 7
  assemblies:
  - Mcma.GoogleCloud.Storage
  namespace: Mcma.GoogleCloud.Storage.Proxies
  syntax:
    content: public static class CloudStorageServiceCollectionExtensions
    content.vb: Public Module CloudStorageServiceCollectionExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Mcma.GoogleCloud.Storage.Proxies.CloudStorageServiceCollectionExtensions.AddMcmaCloudStorage(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Google.Cloud.Storage.V1.StorageClientBuilder})
  commentId: M:Mcma.GoogleCloud.Storage.Proxies.CloudStorageServiceCollectionExtensions.AddMcmaCloudStorage(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Google.Cloud.Storage.V1.StorageClientBuilder})
  id: AddMcmaCloudStorage(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Google.Cloud.Storage.V1.StorageClientBuilder})
  isExtensionMethod: true
  parent: Mcma.GoogleCloud.Storage.Proxies.CloudStorageServiceCollectionExtensions
  langs:
  - csharp
  - vb
  name: AddMcmaCloudStorage(IServiceCollection, Action<StorageClientBuilder>)
  nameWithType: CloudStorageServiceCollectionExtensions.AddMcmaCloudStorage(IServiceCollection, Action<StorageClientBuilder>)
  fullName: Mcma.GoogleCloud.Storage.Proxies.CloudStorageServiceCollectionExtensions.AddMcmaCloudStorage(Microsoft.Extensions.DependencyInjection.IServiceCollection, System.Action<Google.Cloud.Storage.V1.StorageClientBuilder>)
  type: Method
  source:
    remote:
      path: GoogleCloud/Mcma.GoogleCloud.Storage/CloudStorageServiceCollectionExtensions.cs
      branch: documentation
      repo: https://github.com/ebu/mcma-libraries-dotnet.git
    id: AddMcmaCloudStorage
    path: ../mcma-libraries-dotnet/GoogleCloud/Mcma.GoogleCloud.Storage/CloudStorageServiceCollectionExtensions.cs
    startLine: 9
  assemblies:
  - Mcma.GoogleCloud.Storage
  namespace: Mcma.GoogleCloud.Storage.Proxies
  syntax:
    content: public static IServiceCollection AddMcmaCloudStorage(this IServiceCollection services, Action<StorageClientBuilder> build = null)
    parameters:
    - id: services
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
    - id: build
      type: System.Action{Google.Cloud.Storage.V1.StorageClientBuilder}
    return:
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AddMcmaCloudStorage(services As IServiceCollection, build As Action(Of StorageClientBuilder) = Nothing) As IServiceCollection
  overload: Mcma.GoogleCloud.Storage.Proxies.CloudStorageServiceCollectionExtensions.AddMcmaCloudStorage*
  nameWithType.vb: CloudStorageServiceCollectionExtensions.AddMcmaCloudStorage(IServiceCollection, Action(Of StorageClientBuilder))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Mcma.GoogleCloud.Storage.Proxies.CloudStorageServiceCollectionExtensions.AddMcmaCloudStorage(Microsoft.Extensions.DependencyInjection.IServiceCollection, System.Action(Of Google.Cloud.Storage.V1.StorageClientBuilder))
  name.vb: AddMcmaCloudStorage(IServiceCollection, Action(Of StorageClientBuilder))
references:
- uid: Mcma.GoogleCloud.Storage.Proxies
  commentId: N:Mcma.GoogleCloud.Storage.Proxies
  name: Mcma.GoogleCloud.Storage.Proxies
  nameWithType: Mcma.GoogleCloud.Storage.Proxies
  fullName: Mcma.GoogleCloud.Storage.Proxies
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Mcma.GoogleCloud.Storage.Proxies.CloudStorageServiceCollectionExtensions.AddMcmaCloudStorage*
  commentId: Overload:Mcma.GoogleCloud.Storage.Proxies.CloudStorageServiceCollectionExtensions.AddMcmaCloudStorage
  name: AddMcmaCloudStorage
  nameWithType: CloudStorageServiceCollectionExtensions.AddMcmaCloudStorage
  fullName: Mcma.GoogleCloud.Storage.Proxies.CloudStorageServiceCollectionExtensions.AddMcmaCloudStorage
- uid: Microsoft.Extensions.DependencyInjection.IServiceCollection
  commentId: T:Microsoft.Extensions.DependencyInjection.IServiceCollection
  parent: Microsoft.Extensions.DependencyInjection
  isExternal: true
  name: IServiceCollection
  nameWithType: IServiceCollection
  fullName: Microsoft.Extensions.DependencyInjection.IServiceCollection
- uid: System.Action{Google.Cloud.Storage.V1.StorageClientBuilder}
  commentId: T:System.Action{Google.Cloud.Storage.V1.StorageClientBuilder}
  parent: System
  definition: System.Action`1
  name: Action<StorageClientBuilder>
  nameWithType: Action<StorageClientBuilder>
  fullName: System.Action<Google.Cloud.Storage.V1.StorageClientBuilder>
  nameWithType.vb: Action(Of StorageClientBuilder)
  fullName.vb: System.Action(Of Google.Cloud.Storage.V1.StorageClientBuilder)
  name.vb: Action(Of StorageClientBuilder)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Cloud.Storage.V1.StorageClientBuilder
    name: StorageClientBuilder
    nameWithType: StorageClientBuilder
    fullName: Google.Cloud.Storage.V1.StorageClientBuilder
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Cloud.Storage.V1.StorageClientBuilder
    name: StorageClientBuilder
    nameWithType: StorageClientBuilder
    fullName: Google.Cloud.Storage.V1.StorageClientBuilder
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.DependencyInjection
  commentId: N:Microsoft.Extensions.DependencyInjection
  isExternal: true
  name: Microsoft.Extensions.DependencyInjection
  nameWithType: Microsoft.Extensions.DependencyInjection
  fullName: Microsoft.Extensions.DependencyInjection
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
