### YamlMime:ManagedReference
items:
- uid: Mcma.Api.Routes.McmaApiRouteCollection
  commentId: T:Mcma.Api.Routes.McmaApiRouteCollection
  id: McmaApiRouteCollection
  parent: Mcma.Api.Routes
  children:
  - Mcma.Api.Routes.McmaApiRouteCollection.#ctor(Mcma.Api.Routes.IMcmaApiRoute[])
  - Mcma.Api.Routes.McmaApiRouteCollection.#ctor(System.Collections.Generic.IEnumerable{Mcma.Api.Routes.IMcmaApiRoute})
  - Mcma.Api.Routes.McmaApiRouteCollection.AddRoute(Mcma.Api.Routes.IMcmaApiRoute)
  - Mcma.Api.Routes.McmaApiRouteCollection.AddRoute(System.Net.Http.HttpMethod,System.String,System.Func{Mcma.Api.McmaApiRequestContext,System.Threading.Tasks.Task})
  - Mcma.Api.Routes.McmaApiRouteCollection.AddRoutes(Mcma.Api.Routes.IMcmaApiRouteCollection)
  - Mcma.Api.Routes.McmaApiRouteCollection.GetEnumerator
  - Mcma.Api.Routes.McmaApiRouteCollection.System#Collections#IEnumerable#GetEnumerator
  langs:
  - csharp
  - vb
  name: McmaApiRouteCollection
  nameWithType: McmaApiRouteCollection
  fullName: Mcma.Api.Routes.McmaApiRouteCollection
  type: Class
  source:
    remote:
      path: Base/Mcma.Api/Routing/McmaApiRouteCollection.cs
      branch: documentation
      repo: https://github.com/ebu/mcma-libraries-dotnet.git
    id: McmaApiRouteCollection
    path: ../mcma-libraries-dotnet/Base/Mcma.Api/Routing/McmaApiRouteCollection.cs
    startLine: 9
  assemblies:
  - Mcma.Api
  namespace: Mcma.Api.Routes
  syntax:
    content: 'public class McmaApiRouteCollection : IMcmaApiRouteCollection, IEnumerable<IMcmaApiRoute>, IEnumerable'
    content.vb: >-
      Public Class McmaApiRouteCollection
          Implements IMcmaApiRouteCollection, IEnumerable(Of IMcmaApiRoute), IEnumerable
  inheritance:
  - System.Object
  implements:
  - Mcma.Api.Routes.IMcmaApiRouteCollection
  - System.Collections.Generic.IEnumerable{Mcma.Api.Routes.IMcmaApiRoute}
  - System.Collections.IEnumerable
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - System.Object.Mcma.Serialization.McmaJson.ToMcmaJson(System.Boolean)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Mcma.Api.Routes.McmaApiRouteCollection.#ctor(Mcma.Api.Routes.IMcmaApiRoute[])
  commentId: M:Mcma.Api.Routes.McmaApiRouteCollection.#ctor(Mcma.Api.Routes.IMcmaApiRoute[])
  id: '#ctor(Mcma.Api.Routes.IMcmaApiRoute[])'
  parent: Mcma.Api.Routes.McmaApiRouteCollection
  langs:
  - csharp
  - vb
  name: McmaApiRouteCollection(IMcmaApiRoute[])
  nameWithType: McmaApiRouteCollection.McmaApiRouteCollection(IMcmaApiRoute[])
  fullName: Mcma.Api.Routes.McmaApiRouteCollection.McmaApiRouteCollection(Mcma.Api.Routes.IMcmaApiRoute[])
  type: Constructor
  source:
    remote:
      path: Base/Mcma.Api/Routing/McmaApiRouteCollection.cs
      branch: documentation
      repo: https://github.com/ebu/mcma-libraries-dotnet.git
    id: .ctor
    path: ../mcma-libraries-dotnet/Base/Mcma.Api/Routing/McmaApiRouteCollection.cs
    startLine: 11
  assemblies:
  - Mcma.Api
  namespace: Mcma.Api.Routes
  syntax:
    content: public McmaApiRouteCollection(params IMcmaApiRoute[] routes)
    parameters:
    - id: routes
      type: Mcma.Api.Routes.IMcmaApiRoute[]
    content.vb: Public Sub New(ParamArray routes As IMcmaApiRoute())
  overload: Mcma.Api.Routes.McmaApiRouteCollection.#ctor*
  nameWithType.vb: McmaApiRouteCollection.McmaApiRouteCollection(IMcmaApiRoute())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Mcma.Api.Routes.McmaApiRouteCollection.McmaApiRouteCollection(Mcma.Api.Routes.IMcmaApiRoute())
  name.vb: McmaApiRouteCollection(IMcmaApiRoute())
- uid: Mcma.Api.Routes.McmaApiRouteCollection.#ctor(System.Collections.Generic.IEnumerable{Mcma.Api.Routes.IMcmaApiRoute})
  commentId: M:Mcma.Api.Routes.McmaApiRouteCollection.#ctor(System.Collections.Generic.IEnumerable{Mcma.Api.Routes.IMcmaApiRoute})
  id: '#ctor(System.Collections.Generic.IEnumerable{Mcma.Api.Routes.IMcmaApiRoute})'
  parent: Mcma.Api.Routes.McmaApiRouteCollection
  langs:
  - csharp
  - vb
  name: McmaApiRouteCollection(IEnumerable<IMcmaApiRoute>)
  nameWithType: McmaApiRouteCollection.McmaApiRouteCollection(IEnumerable<IMcmaApiRoute>)
  fullName: Mcma.Api.Routes.McmaApiRouteCollection.McmaApiRouteCollection(System.Collections.Generic.IEnumerable<Mcma.Api.Routes.IMcmaApiRoute>)
  type: Constructor
  source:
    remote:
      path: Base/Mcma.Api/Routing/McmaApiRouteCollection.cs
      branch: documentation
      repo: https://github.com/ebu/mcma-libraries-dotnet.git
    id: .ctor
    path: ../mcma-libraries-dotnet/Base/Mcma.Api/Routing/McmaApiRouteCollection.cs
    startLine: 16
  assemblies:
  - Mcma.Api
  namespace: Mcma.Api.Routes
  syntax:
    content: public McmaApiRouteCollection(IEnumerable<IMcmaApiRoute> routes)
    parameters:
    - id: routes
      type: System.Collections.Generic.IEnumerable{Mcma.Api.Routes.IMcmaApiRoute}
    content.vb: Public Sub New(routes As IEnumerable(Of IMcmaApiRoute))
  overload: Mcma.Api.Routes.McmaApiRouteCollection.#ctor*
  nameWithType.vb: McmaApiRouteCollection.McmaApiRouteCollection(IEnumerable(Of IMcmaApiRoute))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Mcma.Api.Routes.McmaApiRouteCollection.McmaApiRouteCollection(System.Collections.Generic.IEnumerable(Of Mcma.Api.Routes.IMcmaApiRoute))
  name.vb: McmaApiRouteCollection(IEnumerable(Of IMcmaApiRoute))
- uid: Mcma.Api.Routes.McmaApiRouteCollection.AddRoute(System.Net.Http.HttpMethod,System.String,System.Func{Mcma.Api.McmaApiRequestContext,System.Threading.Tasks.Task})
  commentId: M:Mcma.Api.Routes.McmaApiRouteCollection.AddRoute(System.Net.Http.HttpMethod,System.String,System.Func{Mcma.Api.McmaApiRequestContext,System.Threading.Tasks.Task})
  id: AddRoute(System.Net.Http.HttpMethod,System.String,System.Func{Mcma.Api.McmaApiRequestContext,System.Threading.Tasks.Task})
  parent: Mcma.Api.Routes.McmaApiRouteCollection
  langs:
  - csharp
  - vb
  name: AddRoute(HttpMethod, String, Func<McmaApiRequestContext, Task>)
  nameWithType: McmaApiRouteCollection.AddRoute(HttpMethod, String, Func<McmaApiRequestContext, Task>)
  fullName: Mcma.Api.Routes.McmaApiRouteCollection.AddRoute(System.Net.Http.HttpMethod, System.String, System.Func<Mcma.Api.McmaApiRequestContext, System.Threading.Tasks.Task>)
  type: Method
  source:
    remote:
      path: Base/Mcma.Api/Routing/McmaApiRouteCollection.cs
      branch: documentation
      repo: https://github.com/ebu/mcma-libraries-dotnet.git
    id: AddRoute
    path: ../mcma-libraries-dotnet/Base/Mcma.Api/Routing/McmaApiRouteCollection.cs
    startLine: 23
  assemblies:
  - Mcma.Api
  namespace: Mcma.Api.Routes
  syntax:
    content: public McmaApiRouteCollection AddRoute(HttpMethod method, string path, Func<McmaApiRequestContext, Task> handler)
    parameters:
    - id: method
      type: System.Net.Http.HttpMethod
    - id: path
      type: System.String
    - id: handler
      type: System.Func{Mcma.Api.McmaApiRequestContext,System.Threading.Tasks.Task}
    return:
      type: Mcma.Api.Routes.McmaApiRouteCollection
    content.vb: Public Function AddRoute(method As HttpMethod, path As String, handler As Func(Of McmaApiRequestContext, Task)) As McmaApiRouteCollection
  overload: Mcma.Api.Routes.McmaApiRouteCollection.AddRoute*
  nameWithType.vb: McmaApiRouteCollection.AddRoute(HttpMethod, String, Func(Of McmaApiRequestContext, Task))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Mcma.Api.Routes.McmaApiRouteCollection.AddRoute(System.Net.Http.HttpMethod, System.String, System.Func(Of Mcma.Api.McmaApiRequestContext, System.Threading.Tasks.Task))
  name.vb: AddRoute(HttpMethod, String, Func(Of McmaApiRequestContext, Task))
- uid: Mcma.Api.Routes.McmaApiRouteCollection.AddRoute(Mcma.Api.Routes.IMcmaApiRoute)
  commentId: M:Mcma.Api.Routes.McmaApiRouteCollection.AddRoute(Mcma.Api.Routes.IMcmaApiRoute)
  id: AddRoute(Mcma.Api.Routes.IMcmaApiRoute)
  parent: Mcma.Api.Routes.McmaApiRouteCollection
  langs:
  - csharp
  - vb
  name: AddRoute(IMcmaApiRoute)
  nameWithType: McmaApiRouteCollection.AddRoute(IMcmaApiRoute)
  fullName: Mcma.Api.Routes.McmaApiRouteCollection.AddRoute(Mcma.Api.Routes.IMcmaApiRoute)
  type: Method
  source:
    remote:
      path: Base/Mcma.Api/Routing/McmaApiRouteCollection.cs
      branch: documentation
      repo: https://github.com/ebu/mcma-libraries-dotnet.git
    id: AddRoute
    path: ../mcma-libraries-dotnet/Base/Mcma.Api/Routing/McmaApiRouteCollection.cs
    startLine: 29
  assemblies:
  - Mcma.Api
  namespace: Mcma.Api.Routes
  syntax:
    content: public McmaApiRouteCollection AddRoute(IMcmaApiRoute route)
    parameters:
    - id: route
      type: Mcma.Api.Routes.IMcmaApiRoute
    return:
      type: Mcma.Api.Routes.McmaApiRouteCollection
    content.vb: Public Function AddRoute(route As IMcmaApiRoute) As McmaApiRouteCollection
  overload: Mcma.Api.Routes.McmaApiRouteCollection.AddRoute*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mcma.Api.Routes.McmaApiRouteCollection.AddRoutes(Mcma.Api.Routes.IMcmaApiRouteCollection)
  commentId: M:Mcma.Api.Routes.McmaApiRouteCollection.AddRoutes(Mcma.Api.Routes.IMcmaApiRouteCollection)
  id: AddRoutes(Mcma.Api.Routes.IMcmaApiRouteCollection)
  parent: Mcma.Api.Routes.McmaApiRouteCollection
  langs:
  - csharp
  - vb
  name: AddRoutes(IMcmaApiRouteCollection)
  nameWithType: McmaApiRouteCollection.AddRoutes(IMcmaApiRouteCollection)
  fullName: Mcma.Api.Routes.McmaApiRouteCollection.AddRoutes(Mcma.Api.Routes.IMcmaApiRouteCollection)
  type: Method
  source:
    remote:
      path: Base/Mcma.Api/Routing/McmaApiRouteCollection.cs
      branch: documentation
      repo: https://github.com/ebu/mcma-libraries-dotnet.git
    id: AddRoutes
    path: ../mcma-libraries-dotnet/Base/Mcma.Api/Routing/McmaApiRouteCollection.cs
    startLine: 35
  assemblies:
  - Mcma.Api
  namespace: Mcma.Api.Routes
  syntax:
    content: public McmaApiRouteCollection AddRoutes(IMcmaApiRouteCollection routes)
    parameters:
    - id: routes
      type: Mcma.Api.Routes.IMcmaApiRouteCollection
    return:
      type: Mcma.Api.Routes.McmaApiRouteCollection
    content.vb: Public Function AddRoutes(routes As IMcmaApiRouteCollection) As McmaApiRouteCollection
  overload: Mcma.Api.Routes.McmaApiRouteCollection.AddRoutes*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mcma.Api.Routes.McmaApiRouteCollection.GetEnumerator
  commentId: M:Mcma.Api.Routes.McmaApiRouteCollection.GetEnumerator
  id: GetEnumerator
  parent: Mcma.Api.Routes.McmaApiRouteCollection
  langs:
  - csharp
  - vb
  name: GetEnumerator()
  nameWithType: McmaApiRouteCollection.GetEnumerator()
  fullName: Mcma.Api.Routes.McmaApiRouteCollection.GetEnumerator()
  type: Method
  source:
    remote:
      path: Base/Mcma.Api/Routing/McmaApiRouteCollection.cs
      branch: documentation
      repo: https://github.com/ebu/mcma-libraries-dotnet.git
    id: GetEnumerator
    path: ../mcma-libraries-dotnet/Base/Mcma.Api/Routing/McmaApiRouteCollection.cs
    startLine: 42
  assemblies:
  - Mcma.Api
  namespace: Mcma.Api.Routes
  syntax:
    content: public IEnumerator<IMcmaApiRoute> GetEnumerator()
    return:
      type: System.Collections.Generic.IEnumerator{Mcma.Api.Routes.IMcmaApiRoute}
    content.vb: Public Function GetEnumerator As IEnumerator(Of IMcmaApiRoute)
  overload: Mcma.Api.Routes.McmaApiRouteCollection.GetEnumerator*
  implements:
  - System.Collections.Generic.IEnumerable{Mcma.Api.Routes.IMcmaApiRoute}.GetEnumerator
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mcma.Api.Routes.McmaApiRouteCollection.System#Collections#IEnumerable#GetEnumerator
  commentId: M:Mcma.Api.Routes.McmaApiRouteCollection.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: Mcma.Api.Routes.McmaApiRouteCollection
  langs:
  - csharp
  - vb
  name: IEnumerable.GetEnumerator()
  nameWithType: McmaApiRouteCollection.IEnumerable.GetEnumerator()
  fullName: Mcma.Api.Routes.McmaApiRouteCollection.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  source:
    remote:
      path: Base/Mcma.Api/Routing/McmaApiRouteCollection.cs
      branch: documentation
      repo: https://github.com/ebu/mcma-libraries-dotnet.git
    id: System.Collections.IEnumerable.GetEnumerator
    path: ../mcma-libraries-dotnet/Base/Mcma.Api/Routing/McmaApiRouteCollection.cs
    startLine: 44
  assemblies:
  - Mcma.Api
  namespace: Mcma.Api.Routes
  syntax:
    content: IEnumerator IEnumerable.GetEnumerator()
    return:
      type: System.Collections.IEnumerator
    content.vb: Function System.Collections.IEnumerable.GetEnumerator As IEnumerator Implements IEnumerable.GetEnumerator
  overload: Mcma.Api.Routes.McmaApiRouteCollection.System#Collections#IEnumerable#GetEnumerator*
  implements:
  - System.Collections.IEnumerable.GetEnumerator
  nameWithType.vb: McmaApiRouteCollection.System.Collections.IEnumerable.GetEnumerator()
  name.vb: System.Collections.IEnumerable.GetEnumerator()
references:
- uid: Mcma.Api.Routes
  commentId: N:Mcma.Api.Routes
  name: Mcma.Api.Routes
  nameWithType: Mcma.Api.Routes
  fullName: Mcma.Api.Routes
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Mcma.Api.Routes.IMcmaApiRouteCollection
  commentId: T:Mcma.Api.Routes.IMcmaApiRouteCollection
  parent: Mcma.Api.Routes
  name: IMcmaApiRouteCollection
  nameWithType: IMcmaApiRouteCollection
  fullName: Mcma.Api.Routes.IMcmaApiRouteCollection
- uid: System.Collections.Generic.IEnumerable{Mcma.Api.Routes.IMcmaApiRoute}
  commentId: T:System.Collections.Generic.IEnumerable{Mcma.Api.Routes.IMcmaApiRoute}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<IMcmaApiRoute>
  nameWithType: IEnumerable<IMcmaApiRoute>
  fullName: System.Collections.Generic.IEnumerable<Mcma.Api.Routes.IMcmaApiRoute>
  nameWithType.vb: IEnumerable(Of IMcmaApiRoute)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Mcma.Api.Routes.IMcmaApiRoute)
  name.vb: IEnumerable(Of IMcmaApiRoute)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mcma.Api.Routes.IMcmaApiRoute
    name: IMcmaApiRoute
    nameWithType: IMcmaApiRoute
    fullName: Mcma.Api.Routes.IMcmaApiRoute
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mcma.Api.Routes.IMcmaApiRoute
    name: IMcmaApiRoute
    nameWithType: IMcmaApiRoute
    fullName: Mcma.Api.Routes.IMcmaApiRoute
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Mcma.Serialization.McmaJson.ToMcmaJson(System.Boolean)
  commentId: M:Mcma.Serialization.McmaJson.ToMcmaJson(System.Object,System.Boolean)
  parent: Mcma.Serialization.McmaJson
  definition: Mcma.Serialization.McmaJson.ToMcmaJson(System.Object,System.Boolean)
  name: ToMcmaJson(Boolean)
  nameWithType: McmaJson.ToMcmaJson(Boolean)
  fullName: Mcma.Serialization.McmaJson.ToMcmaJson(System.Boolean)
  spec.csharp:
  - uid: Mcma.Serialization.McmaJson.ToMcmaJson(System.Boolean)
    name: ToMcmaJson
    nameWithType: McmaJson.ToMcmaJson
    fullName: Mcma.Serialization.McmaJson.ToMcmaJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mcma.Serialization.McmaJson.ToMcmaJson(System.Boolean)
    name: ToMcmaJson
    nameWithType: McmaJson.ToMcmaJson
    fullName: Mcma.Serialization.McmaJson.ToMcmaJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: Mcma.Serialization.McmaJson.ToMcmaJson(System.Object,System.Boolean)
  commentId: M:Mcma.Serialization.McmaJson.ToMcmaJson(System.Object,System.Boolean)
  isExternal: true
  name: ToMcmaJson(Object, Boolean)
  nameWithType: McmaJson.ToMcmaJson(Object, Boolean)
  fullName: Mcma.Serialization.McmaJson.ToMcmaJson(System.Object, System.Boolean)
  spec.csharp:
  - uid: Mcma.Serialization.McmaJson.ToMcmaJson(System.Object,System.Boolean)
    name: ToMcmaJson
    nameWithType: McmaJson.ToMcmaJson
    fullName: Mcma.Serialization.McmaJson.ToMcmaJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mcma.Serialization.McmaJson.ToMcmaJson(System.Object,System.Boolean)
    name: ToMcmaJson
    nameWithType: McmaJson.ToMcmaJson
    fullName: Mcma.Serialization.McmaJson.ToMcmaJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mcma.Serialization.McmaJson
  commentId: T:Mcma.Serialization.McmaJson
  parent: Mcma.Serialization
  name: McmaJson
  nameWithType: McmaJson
  fullName: Mcma.Serialization.McmaJson
- uid: Mcma.Serialization
  commentId: N:Mcma.Serialization
  name: Mcma.Serialization
  nameWithType: Mcma.Serialization
  fullName: Mcma.Serialization
- uid: Mcma.Api.Routes.McmaApiRouteCollection.#ctor*
  commentId: Overload:Mcma.Api.Routes.McmaApiRouteCollection.#ctor
  name: McmaApiRouteCollection
  nameWithType: McmaApiRouteCollection.McmaApiRouteCollection
  fullName: Mcma.Api.Routes.McmaApiRouteCollection.McmaApiRouteCollection
- uid: Mcma.Api.Routes.IMcmaApiRoute[]
  isExternal: true
  name: IMcmaApiRoute[]
  nameWithType: IMcmaApiRoute[]
  fullName: Mcma.Api.Routes.IMcmaApiRoute[]
  nameWithType.vb: IMcmaApiRoute()
  fullName.vb: Mcma.Api.Routes.IMcmaApiRoute()
  name.vb: IMcmaApiRoute()
  spec.csharp:
  - uid: Mcma.Api.Routes.IMcmaApiRoute
    name: IMcmaApiRoute
    nameWithType: IMcmaApiRoute
    fullName: Mcma.Api.Routes.IMcmaApiRoute
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: Mcma.Api.Routes.IMcmaApiRoute
    name: IMcmaApiRoute
    nameWithType: IMcmaApiRoute
    fullName: Mcma.Api.Routes.IMcmaApiRoute
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Mcma.Api.Routes.McmaApiRouteCollection.AddRoute*
  commentId: Overload:Mcma.Api.Routes.McmaApiRouteCollection.AddRoute
  name: AddRoute
  nameWithType: McmaApiRouteCollection.AddRoute
  fullName: Mcma.Api.Routes.McmaApiRouteCollection.AddRoute
- uid: System.Net.Http.HttpMethod
  commentId: T:System.Net.Http.HttpMethod
  parent: System.Net.Http
  isExternal: true
  name: HttpMethod
  nameWithType: HttpMethod
  fullName: System.Net.Http.HttpMethod
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Func{Mcma.Api.McmaApiRequestContext,System.Threading.Tasks.Task}
  commentId: T:System.Func{Mcma.Api.McmaApiRequestContext,System.Threading.Tasks.Task}
  parent: System
  definition: System.Func`2
  name: Func<McmaApiRequestContext, Task>
  nameWithType: Func<McmaApiRequestContext, Task>
  fullName: System.Func<Mcma.Api.McmaApiRequestContext, System.Threading.Tasks.Task>
  nameWithType.vb: Func(Of McmaApiRequestContext, Task)
  fullName.vb: System.Func(Of Mcma.Api.McmaApiRequestContext, System.Threading.Tasks.Task)
  name.vb: Func(Of McmaApiRequestContext, Task)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mcma.Api.McmaApiRequestContext
    name: McmaApiRequestContext
    nameWithType: McmaApiRequestContext
    fullName: Mcma.Api.McmaApiRequestContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mcma.Api.McmaApiRequestContext
    name: McmaApiRequestContext
    nameWithType: McmaApiRequestContext
    fullName: Mcma.Api.McmaApiRequestContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mcma.Api.Routes.McmaApiRouteCollection
  commentId: T:Mcma.Api.Routes.McmaApiRouteCollection
  parent: Mcma.Api.Routes
  name: McmaApiRouteCollection
  nameWithType: McmaApiRouteCollection
  fullName: Mcma.Api.Routes.McmaApiRouteCollection
- uid: System.Net.Http
  commentId: N:System.Net.Http
  isExternal: true
  name: System.Net.Http
  nameWithType: System.Net.Http
  fullName: System.Net.Http
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullName.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Mcma.Api.Routes.IMcmaApiRoute
  commentId: T:Mcma.Api.Routes.IMcmaApiRoute
  parent: Mcma.Api.Routes
  name: IMcmaApiRoute
  nameWithType: IMcmaApiRoute
  fullName: Mcma.Api.Routes.IMcmaApiRoute
- uid: Mcma.Api.Routes.McmaApiRouteCollection.AddRoutes*
  commentId: Overload:Mcma.Api.Routes.McmaApiRouteCollection.AddRoutes
  name: AddRoutes
  nameWithType: McmaApiRouteCollection.AddRoutes
  fullName: Mcma.Api.Routes.McmaApiRouteCollection.AddRoutes
- uid: Mcma.Api.Routes.McmaApiRouteCollection.GetEnumerator*
  commentId: Overload:Mcma.Api.Routes.McmaApiRouteCollection.GetEnumerator
  name: GetEnumerator
  nameWithType: McmaApiRouteCollection.GetEnumerator
  fullName: Mcma.Api.Routes.McmaApiRouteCollection.GetEnumerator
- uid: System.Collections.Generic.IEnumerable{Mcma.Api.Routes.IMcmaApiRoute}.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable{Mcma.Api.Routes.IMcmaApiRoute}.GetEnumerator
  parent: System.Collections.Generic.IEnumerable{Mcma.Api.Routes.IMcmaApiRoute}
  definition: System.Collections.Generic.IEnumerable`1.GetEnumerator
  name: GetEnumerator()
  nameWithType: IEnumerable<IMcmaApiRoute>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<Mcma.Api.Routes.IMcmaApiRoute>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of IMcmaApiRoute).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of Mcma.Api.Routes.IMcmaApiRoute).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable<IMcmaApiRoute>.GetEnumerator
    fullName: System.Collections.Generic.IEnumerable<Mcma.Api.Routes.IMcmaApiRoute>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable(Of IMcmaApiRoute).GetEnumerator
    fullName: System.Collections.Generic.IEnumerable(Of Mcma.Api.Routes.IMcmaApiRoute).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerator{Mcma.Api.Routes.IMcmaApiRoute}
  commentId: T:System.Collections.Generic.IEnumerator{Mcma.Api.Routes.IMcmaApiRoute}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerator`1
  name: IEnumerator<IMcmaApiRoute>
  nameWithType: IEnumerator<IMcmaApiRoute>
  fullName: System.Collections.Generic.IEnumerator<Mcma.Api.Routes.IMcmaApiRoute>
  nameWithType.vb: IEnumerator(Of IMcmaApiRoute)
  fullName.vb: System.Collections.Generic.IEnumerator(Of Mcma.Api.Routes.IMcmaApiRoute)
  name.vb: IEnumerator(Of IMcmaApiRoute)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mcma.Api.Routes.IMcmaApiRoute
    name: IMcmaApiRoute
    nameWithType: IMcmaApiRoute
    fullName: Mcma.Api.Routes.IMcmaApiRoute
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mcma.Api.Routes.IMcmaApiRoute
    name: IMcmaApiRoute
    nameWithType: IMcmaApiRoute
    fullName: Mcma.Api.Routes.IMcmaApiRoute
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable`1.GetEnumerator
  isExternal: true
  name: GetEnumerator()
  nameWithType: IEnumerable<T>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of T).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of T).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable<T>.GetEnumerator
    fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable(Of T).GetEnumerator
    fullName: System.Collections.Generic.IEnumerable(Of T).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerator`1
  commentId: T:System.Collections.Generic.IEnumerator`1
  isExternal: true
  name: IEnumerator<T>
  nameWithType: IEnumerator<T>
  fullName: System.Collections.Generic.IEnumerator<T>
  nameWithType.vb: IEnumerator(Of T)
  fullName.vb: System.Collections.Generic.IEnumerator(Of T)
  name.vb: IEnumerator(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Mcma.Api.Routes.McmaApiRouteCollection.System#Collections#IEnumerable#GetEnumerator*
  commentId: Overload:Mcma.Api.Routes.McmaApiRouteCollection.System#Collections#IEnumerable#GetEnumerator
  name: IEnumerable.GetEnumerator
  nameWithType: McmaApiRouteCollection.IEnumerable.GetEnumerator
  fullName: Mcma.Api.Routes.McmaApiRouteCollection.System.Collections.IEnumerable.GetEnumerator
  nameWithType.vb: McmaApiRouteCollection.System.Collections.IEnumerable.GetEnumerator
  name.vb: System.Collections.IEnumerable.GetEnumerator
- uid: System.Collections.IEnumerable.GetEnumerator
  commentId: M:System.Collections.IEnumerable.GetEnumerator
  parent: System.Collections.IEnumerable
  isExternal: true
  name: GetEnumerator()
  nameWithType: IEnumerable.GetEnumerator()
  fullName: System.Collections.IEnumerable.GetEnumerator()
  spec.csharp:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable.GetEnumerator
    fullName: System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable.GetEnumerator
    fullName: System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEnumerator
  commentId: T:System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
