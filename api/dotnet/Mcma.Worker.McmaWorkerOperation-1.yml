### YamlMime:ManagedReference
items:
- uid: Mcma.Worker.McmaWorkerOperation`1
  commentId: T:Mcma.Worker.McmaWorkerOperation`1
  id: McmaWorkerOperation`1
  parent: Mcma.Worker
  children:
  - Mcma.Worker.McmaWorkerOperation`1.Accepts(Mcma.Worker.McmaWorkerRequestContext)
  - Mcma.Worker.McmaWorkerOperation`1.ExecuteAsync(Mcma.Worker.McmaWorkerRequestContext,`0)
  - Mcma.Worker.McmaWorkerOperation`1.InputType
  - Mcma.Worker.McmaWorkerOperation`1.Mcma#Worker#IMcmaWorkerOperation#Accepts(Mcma.Worker.McmaWorkerRequestContext)
  - Mcma.Worker.McmaWorkerOperation`1.Mcma#Worker#IMcmaWorkerOperation#ExecuteAsync(Mcma.Worker.McmaWorkerRequestContext)
  - Mcma.Worker.McmaWorkerOperation`1.Name
  langs:
  - csharp
  - vb
  name: McmaWorkerOperation<T>
  nameWithType: McmaWorkerOperation<T>
  fullName: Mcma.Worker.McmaWorkerOperation<T>
  type: Class
  source:
    remote:
      path: Base/Mcma.Worker/McmaWorkerOperation.cs
      branch: documentation
      repo: https://github.com/ebu/mcma-libraries-dotnet.git
    id: McmaWorkerOperation
    path: ../mcma-libraries-dotnet/Base/Mcma.Worker/McmaWorkerOperation.cs
    startLine: 6
  assemblies:
  - Mcma.Worker
  namespace: Mcma.Worker
  syntax:
    content: 'public abstract class McmaWorkerOperation<T> : IMcmaWorkerOperation'
    typeParameters:
    - id: T
    content.vb: >-
      Public MustInherit Class McmaWorkerOperation(Of T)

          Implements IMcmaWorkerOperation
  inheritance:
  - System.Object
  derivedClasses:
  - Mcma.Worker.ProcessJobAssignmentOperation`1
  implements:
  - Mcma.Worker.IMcmaWorkerOperation
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - System.Object.Mcma.Serialization.McmaJson.ToMcmaJson(System.Boolean)
  nameWithType.vb: McmaWorkerOperation(Of T)
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
  fullName.vb: Mcma.Worker.McmaWorkerOperation(Of T)
  name.vb: McmaWorkerOperation(Of T)
- uid: Mcma.Worker.McmaWorkerOperation`1.Name
  commentId: P:Mcma.Worker.McmaWorkerOperation`1.Name
  id: Name
  parent: Mcma.Worker.McmaWorkerOperation`1
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: McmaWorkerOperation<T>.Name
  fullName: Mcma.Worker.McmaWorkerOperation<T>.Name
  type: Property
  source:
    remote:
      path: Base/Mcma.Worker/McmaWorkerOperation.cs
      branch: documentation
      repo: https://github.com/ebu/mcma-libraries-dotnet.git
    id: Name
    path: ../mcma-libraries-dotnet/Base/Mcma.Worker/McmaWorkerOperation.cs
    startLine: 8
  assemblies:
  - Mcma.Worker
  namespace: Mcma.Worker
  syntax:
    content: public abstract string Name { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public MustOverride ReadOnly Property Name As String
  overload: Mcma.Worker.McmaWorkerOperation`1.Name*
  implements:
  - Mcma.Worker.IMcmaWorkerOperation.Name
  nameWithType.vb: McmaWorkerOperation(Of T).Name
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
  fullName.vb: Mcma.Worker.McmaWorkerOperation(Of T).Name
- uid: Mcma.Worker.McmaWorkerOperation`1.InputType
  commentId: P:Mcma.Worker.McmaWorkerOperation`1.InputType
  id: InputType
  parent: Mcma.Worker.McmaWorkerOperation`1
  langs:
  - csharp
  - vb
  name: InputType
  nameWithType: McmaWorkerOperation<T>.InputType
  fullName: Mcma.Worker.McmaWorkerOperation<T>.InputType
  type: Property
  source:
    remote:
      path: Base/Mcma.Worker/McmaWorkerOperation.cs
      branch: documentation
      repo: https://github.com/ebu/mcma-libraries-dotnet.git
    id: InputType
    path: ../mcma-libraries-dotnet/Base/Mcma.Worker/McmaWorkerOperation.cs
    startLine: 10
  assemblies:
  - Mcma.Worker
  namespace: Mcma.Worker
  syntax:
    content: public Type InputType { get; }
    parameters: []
    return:
      type: System.Type
    content.vb: Public ReadOnly Property InputType As Type
  overload: Mcma.Worker.McmaWorkerOperation`1.InputType*
  nameWithType.vb: McmaWorkerOperation(Of T).InputType
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Mcma.Worker.McmaWorkerOperation(Of T).InputType
- uid: Mcma.Worker.McmaWorkerOperation`1.Mcma#Worker#IMcmaWorkerOperation#Accepts(Mcma.Worker.McmaWorkerRequestContext)
  commentId: M:Mcma.Worker.McmaWorkerOperation`1.Mcma#Worker#IMcmaWorkerOperation#Accepts(Mcma.Worker.McmaWorkerRequestContext)
  id: Mcma#Worker#IMcmaWorkerOperation#Accepts(Mcma.Worker.McmaWorkerRequestContext)
  isEii: true
  parent: Mcma.Worker.McmaWorkerOperation`1
  langs:
  - csharp
  - vb
  name: IMcmaWorkerOperation.Accepts(McmaWorkerRequestContext)
  nameWithType: McmaWorkerOperation<T>.IMcmaWorkerOperation.Accepts(McmaWorkerRequestContext)
  fullName: Mcma.Worker.McmaWorkerOperation<T>.Mcma.Worker.IMcmaWorkerOperation.Accepts(Mcma.Worker.McmaWorkerRequestContext)
  type: Method
  source:
    remote:
      path: Base/Mcma.Worker/McmaWorkerOperation.cs
      branch: documentation
      repo: https://github.com/ebu/mcma-libraries-dotnet.git
    id: Mcma.Worker.IMcmaWorkerOperation.Accepts
    path: ../mcma-libraries-dotnet/Base/Mcma.Worker/McmaWorkerOperation.cs
    startLine: 15
  assemblies:
  - Mcma.Worker
  namespace: Mcma.Worker
  syntax:
    content: bool IMcmaWorkerOperation.Accepts(McmaWorkerRequestContext reqCtx)
    parameters:
    - id: reqCtx
      type: Mcma.Worker.McmaWorkerRequestContext
    return:
      type: System.Boolean
    content.vb: Function Mcma.Worker.IMcmaWorkerOperation.Accepts(reqCtx As McmaWorkerRequestContext) As Boolean Implements IMcmaWorkerOperation.Accepts
  overload: Mcma.Worker.McmaWorkerOperation`1.Mcma#Worker#IMcmaWorkerOperation#Accepts*
  implements:
  - Mcma.Worker.IMcmaWorkerOperation.Accepts(Mcma.Worker.McmaWorkerRequestContext)
  nameWithType.vb: McmaWorkerOperation(Of T).Mcma.Worker.IMcmaWorkerOperation.Accepts(McmaWorkerRequestContext)
  fullName.vb: Mcma.Worker.McmaWorkerOperation(Of T).Mcma.Worker.IMcmaWorkerOperation.Accepts(Mcma.Worker.McmaWorkerRequestContext)
  name.vb: Mcma.Worker.IMcmaWorkerOperation.Accepts(McmaWorkerRequestContext)
- uid: Mcma.Worker.McmaWorkerOperation`1.Accepts(Mcma.Worker.McmaWorkerRequestContext)
  commentId: M:Mcma.Worker.McmaWorkerOperation`1.Accepts(Mcma.Worker.McmaWorkerRequestContext)
  id: Accepts(Mcma.Worker.McmaWorkerRequestContext)
  parent: Mcma.Worker.McmaWorkerOperation`1
  langs:
  - csharp
  - vb
  name: Accepts(McmaWorkerRequestContext)
  nameWithType: McmaWorkerOperation<T>.Accepts(McmaWorkerRequestContext)
  fullName: Mcma.Worker.McmaWorkerOperation<T>.Accepts(Mcma.Worker.McmaWorkerRequestContext)
  type: Method
  source:
    remote:
      path: Base/Mcma.Worker/McmaWorkerOperation.cs
      branch: documentation
      repo: https://github.com/ebu/mcma-libraries-dotnet.git
    id: Accepts
    path: ../mcma-libraries-dotnet/Base/Mcma.Worker/McmaWorkerOperation.cs
    startLine: 17
  assemblies:
  - Mcma.Worker
  namespace: Mcma.Worker
  syntax:
    content: protected virtual bool Accepts(McmaWorkerRequestContext reqCtx)
    parameters:
    - id: reqCtx
      type: Mcma.Worker.McmaWorkerRequestContext
    return:
      type: System.Boolean
    content.vb: Protected Overridable Function Accepts(reqCtx As McmaWorkerRequestContext) As Boolean
  overload: Mcma.Worker.McmaWorkerOperation`1.Accepts*
  nameWithType.vb: McmaWorkerOperation(Of T).Accepts(McmaWorkerRequestContext)
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: Mcma.Worker.McmaWorkerOperation(Of T).Accepts(Mcma.Worker.McmaWorkerRequestContext)
- uid: Mcma.Worker.McmaWorkerOperation`1.Mcma#Worker#IMcmaWorkerOperation#ExecuteAsync(Mcma.Worker.McmaWorkerRequestContext)
  commentId: M:Mcma.Worker.McmaWorkerOperation`1.Mcma#Worker#IMcmaWorkerOperation#ExecuteAsync(Mcma.Worker.McmaWorkerRequestContext)
  id: Mcma#Worker#IMcmaWorkerOperation#ExecuteAsync(Mcma.Worker.McmaWorkerRequestContext)
  isEii: true
  parent: Mcma.Worker.McmaWorkerOperation`1
  langs:
  - csharp
  - vb
  name: IMcmaWorkerOperation.ExecuteAsync(McmaWorkerRequestContext)
  nameWithType: McmaWorkerOperation<T>.IMcmaWorkerOperation.ExecuteAsync(McmaWorkerRequestContext)
  fullName: Mcma.Worker.McmaWorkerOperation<T>.Mcma.Worker.IMcmaWorkerOperation.ExecuteAsync(Mcma.Worker.McmaWorkerRequestContext)
  type: Method
  source:
    remote:
      path: Base/Mcma.Worker/McmaWorkerOperation.cs
      branch: documentation
      repo: https://github.com/ebu/mcma-libraries-dotnet.git
    id: Mcma.Worker.IMcmaWorkerOperation.ExecuteAsync
    path: ../mcma-libraries-dotnet/Base/Mcma.Worker/McmaWorkerOperation.cs
    startLine: 19
  assemblies:
  - Mcma.Worker
  namespace: Mcma.Worker
  syntax:
    content: Task IMcmaWorkerOperation.ExecuteAsync(McmaWorkerRequestContext requestContext)
    parameters:
    - id: requestContext
      type: Mcma.Worker.McmaWorkerRequestContext
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function Mcma.Worker.IMcmaWorkerOperation.ExecuteAsync(requestContext As McmaWorkerRequestContext) As Task Implements IMcmaWorkerOperation.ExecuteAsync
  overload: Mcma.Worker.McmaWorkerOperation`1.Mcma#Worker#IMcmaWorkerOperation#ExecuteAsync*
  implements:
  - Mcma.Worker.IMcmaWorkerOperation.ExecuteAsync(Mcma.Worker.McmaWorkerRequestContext)
  nameWithType.vb: McmaWorkerOperation(Of T).Mcma.Worker.IMcmaWorkerOperation.ExecuteAsync(McmaWorkerRequestContext)
  fullName.vb: Mcma.Worker.McmaWorkerOperation(Of T).Mcma.Worker.IMcmaWorkerOperation.ExecuteAsync(Mcma.Worker.McmaWorkerRequestContext)
  name.vb: Mcma.Worker.IMcmaWorkerOperation.ExecuteAsync(McmaWorkerRequestContext)
- uid: Mcma.Worker.McmaWorkerOperation`1.ExecuteAsync(Mcma.Worker.McmaWorkerRequestContext,`0)
  commentId: M:Mcma.Worker.McmaWorkerOperation`1.ExecuteAsync(Mcma.Worker.McmaWorkerRequestContext,`0)
  id: ExecuteAsync(Mcma.Worker.McmaWorkerRequestContext,`0)
  parent: Mcma.Worker.McmaWorkerOperation`1
  langs:
  - csharp
  - vb
  name: ExecuteAsync(McmaWorkerRequestContext, T)
  nameWithType: McmaWorkerOperation<T>.ExecuteAsync(McmaWorkerRequestContext, T)
  fullName: Mcma.Worker.McmaWorkerOperation<T>.ExecuteAsync(Mcma.Worker.McmaWorkerRequestContext, T)
  type: Method
  source:
    remote:
      path: Base/Mcma.Worker/McmaWorkerOperation.cs
      branch: documentation
      repo: https://github.com/ebu/mcma-libraries-dotnet.git
    id: ExecuteAsync
    path: ../mcma-libraries-dotnet/Base/Mcma.Worker/McmaWorkerOperation.cs
    startLine: 31
  assemblies:
  - Mcma.Worker
  namespace: Mcma.Worker
  syntax:
    content: protected abstract Task ExecuteAsync(McmaWorkerRequestContext requestContext, T requestInput)
    parameters:
    - id: requestContext
      type: Mcma.Worker.McmaWorkerRequestContext
    - id: requestInput
      type: '{T}'
    return:
      type: System.Threading.Tasks.Task
    content.vb: Protected MustOverride Function ExecuteAsync(requestContext As McmaWorkerRequestContext, requestInput As T) As Task
  overload: Mcma.Worker.McmaWorkerOperation`1.ExecuteAsync*
  nameWithType.vb: McmaWorkerOperation(Of T).ExecuteAsync(McmaWorkerRequestContext, T)
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
  fullName.vb: Mcma.Worker.McmaWorkerOperation(Of T).ExecuteAsync(Mcma.Worker.McmaWorkerRequestContext, T)
references:
- uid: Mcma.Worker
  commentId: N:Mcma.Worker
  name: Mcma.Worker
  nameWithType: Mcma.Worker
  fullName: Mcma.Worker
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Mcma.Worker.IMcmaWorkerOperation
  commentId: T:Mcma.Worker.IMcmaWorkerOperation
  parent: Mcma.Worker
  name: IMcmaWorkerOperation
  nameWithType: IMcmaWorkerOperation
  fullName: Mcma.Worker.IMcmaWorkerOperation
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Mcma.Serialization.McmaJson.ToMcmaJson(System.Boolean)
  commentId: M:Mcma.Serialization.McmaJson.ToMcmaJson(System.Object,System.Boolean)
  parent: Mcma.Serialization.McmaJson
  definition: Mcma.Serialization.McmaJson.ToMcmaJson(System.Object,System.Boolean)
  name: ToMcmaJson(Boolean)
  nameWithType: McmaJson.ToMcmaJson(Boolean)
  fullName: Mcma.Serialization.McmaJson.ToMcmaJson(System.Boolean)
  spec.csharp:
  - uid: Mcma.Serialization.McmaJson.ToMcmaJson(System.Boolean)
    name: ToMcmaJson
    nameWithType: McmaJson.ToMcmaJson
    fullName: Mcma.Serialization.McmaJson.ToMcmaJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mcma.Serialization.McmaJson.ToMcmaJson(System.Boolean)
    name: ToMcmaJson
    nameWithType: McmaJson.ToMcmaJson
    fullName: Mcma.Serialization.McmaJson.ToMcmaJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Mcma.Serialization.McmaJson.ToMcmaJson(System.Object,System.Boolean)
  commentId: M:Mcma.Serialization.McmaJson.ToMcmaJson(System.Object,System.Boolean)
  isExternal: true
  name: ToMcmaJson(Object, Boolean)
  nameWithType: McmaJson.ToMcmaJson(Object, Boolean)
  fullName: Mcma.Serialization.McmaJson.ToMcmaJson(System.Object, System.Boolean)
  spec.csharp:
  - uid: Mcma.Serialization.McmaJson.ToMcmaJson(System.Object,System.Boolean)
    name: ToMcmaJson
    nameWithType: McmaJson.ToMcmaJson
    fullName: Mcma.Serialization.McmaJson.ToMcmaJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mcma.Serialization.McmaJson.ToMcmaJson(System.Object,System.Boolean)
    name: ToMcmaJson
    nameWithType: McmaJson.ToMcmaJson
    fullName: Mcma.Serialization.McmaJson.ToMcmaJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mcma.Serialization.McmaJson
  commentId: T:Mcma.Serialization.McmaJson
  parent: Mcma.Serialization
  name: McmaJson
  nameWithType: McmaJson
  fullName: Mcma.Serialization.McmaJson
- uid: Mcma.Serialization
  commentId: N:Mcma.Serialization
  name: Mcma.Serialization
  nameWithType: Mcma.Serialization
  fullName: Mcma.Serialization
- uid: Mcma.Worker.McmaWorkerOperation`1.Name*
  commentId: Overload:Mcma.Worker.McmaWorkerOperation`1.Name
  name: Name
  nameWithType: McmaWorkerOperation<T>.Name
  fullName: Mcma.Worker.McmaWorkerOperation<T>.Name
  nameWithType.vb: McmaWorkerOperation(Of T).Name
  fullName.vb: Mcma.Worker.McmaWorkerOperation(Of T).Name
- uid: Mcma.Worker.IMcmaWorkerOperation.Name
  commentId: P:Mcma.Worker.IMcmaWorkerOperation.Name
  parent: Mcma.Worker.IMcmaWorkerOperation
  name: Name
  nameWithType: IMcmaWorkerOperation.Name
  fullName: Mcma.Worker.IMcmaWorkerOperation.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Mcma.Worker.McmaWorkerOperation`1.InputType*
  commentId: Overload:Mcma.Worker.McmaWorkerOperation`1.InputType
  name: InputType
  nameWithType: McmaWorkerOperation<T>.InputType
  fullName: Mcma.Worker.McmaWorkerOperation<T>.InputType
  nameWithType.vb: McmaWorkerOperation(Of T).InputType
  fullName.vb: Mcma.Worker.McmaWorkerOperation(Of T).InputType
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: Mcma.Worker.McmaWorkerOperation`1.Mcma#Worker#IMcmaWorkerOperation#Accepts*
  commentId: Overload:Mcma.Worker.McmaWorkerOperation`1.Mcma#Worker#IMcmaWorkerOperation#Accepts
  name: IMcmaWorkerOperation.Accepts
  nameWithType: McmaWorkerOperation<T>.IMcmaWorkerOperation.Accepts
  fullName: Mcma.Worker.McmaWorkerOperation<T>.Mcma.Worker.IMcmaWorkerOperation.Accepts
  nameWithType.vb: McmaWorkerOperation(Of T).Mcma.Worker.IMcmaWorkerOperation.Accepts
  fullName.vb: Mcma.Worker.McmaWorkerOperation(Of T).Mcma.Worker.IMcmaWorkerOperation.Accepts
  name.vb: Mcma.Worker.IMcmaWorkerOperation.Accepts
- uid: Mcma.Worker.IMcmaWorkerOperation.Accepts(Mcma.Worker.McmaWorkerRequestContext)
  commentId: M:Mcma.Worker.IMcmaWorkerOperation.Accepts(Mcma.Worker.McmaWorkerRequestContext)
  parent: Mcma.Worker.IMcmaWorkerOperation
  name: Accepts(McmaWorkerRequestContext)
  nameWithType: IMcmaWorkerOperation.Accepts(McmaWorkerRequestContext)
  fullName: Mcma.Worker.IMcmaWorkerOperation.Accepts(Mcma.Worker.McmaWorkerRequestContext)
  spec.csharp:
  - uid: Mcma.Worker.IMcmaWorkerOperation.Accepts(Mcma.Worker.McmaWorkerRequestContext)
    name: Accepts
    nameWithType: IMcmaWorkerOperation.Accepts
    fullName: Mcma.Worker.IMcmaWorkerOperation.Accepts
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mcma.Worker.McmaWorkerRequestContext
    name: McmaWorkerRequestContext
    nameWithType: McmaWorkerRequestContext
    fullName: Mcma.Worker.McmaWorkerRequestContext
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mcma.Worker.IMcmaWorkerOperation.Accepts(Mcma.Worker.McmaWorkerRequestContext)
    name: Accepts
    nameWithType: IMcmaWorkerOperation.Accepts
    fullName: Mcma.Worker.IMcmaWorkerOperation.Accepts
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mcma.Worker.McmaWorkerRequestContext
    name: McmaWorkerRequestContext
    nameWithType: McmaWorkerRequestContext
    fullName: Mcma.Worker.McmaWorkerRequestContext
  - name: )
    nameWithType: )
    fullName: )
- uid: Mcma.Worker.McmaWorkerRequestContext
  commentId: T:Mcma.Worker.McmaWorkerRequestContext
  parent: Mcma.Worker
  name: McmaWorkerRequestContext
  nameWithType: McmaWorkerRequestContext
  fullName: Mcma.Worker.McmaWorkerRequestContext
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Mcma.Worker.McmaWorkerOperation`1.Accepts*
  commentId: Overload:Mcma.Worker.McmaWorkerOperation`1.Accepts
  name: Accepts
  nameWithType: McmaWorkerOperation<T>.Accepts
  fullName: Mcma.Worker.McmaWorkerOperation<T>.Accepts
  nameWithType.vb: McmaWorkerOperation(Of T).Accepts
  fullName.vb: Mcma.Worker.McmaWorkerOperation(Of T).Accepts
- uid: Mcma.Worker.McmaWorkerOperation`1.Mcma#Worker#IMcmaWorkerOperation#ExecuteAsync*
  commentId: Overload:Mcma.Worker.McmaWorkerOperation`1.Mcma#Worker#IMcmaWorkerOperation#ExecuteAsync
  name: IMcmaWorkerOperation.ExecuteAsync
  nameWithType: McmaWorkerOperation<T>.IMcmaWorkerOperation.ExecuteAsync
  fullName: Mcma.Worker.McmaWorkerOperation<T>.Mcma.Worker.IMcmaWorkerOperation.ExecuteAsync
  nameWithType.vb: McmaWorkerOperation(Of T).Mcma.Worker.IMcmaWorkerOperation.ExecuteAsync
  fullName.vb: Mcma.Worker.McmaWorkerOperation(Of T).Mcma.Worker.IMcmaWorkerOperation.ExecuteAsync
  name.vb: Mcma.Worker.IMcmaWorkerOperation.ExecuteAsync
- uid: Mcma.Worker.IMcmaWorkerOperation.ExecuteAsync(Mcma.Worker.McmaWorkerRequestContext)
  commentId: M:Mcma.Worker.IMcmaWorkerOperation.ExecuteAsync(Mcma.Worker.McmaWorkerRequestContext)
  parent: Mcma.Worker.IMcmaWorkerOperation
  name: ExecuteAsync(McmaWorkerRequestContext)
  nameWithType: IMcmaWorkerOperation.ExecuteAsync(McmaWorkerRequestContext)
  fullName: Mcma.Worker.IMcmaWorkerOperation.ExecuteAsync(Mcma.Worker.McmaWorkerRequestContext)
  spec.csharp:
  - uid: Mcma.Worker.IMcmaWorkerOperation.ExecuteAsync(Mcma.Worker.McmaWorkerRequestContext)
    name: ExecuteAsync
    nameWithType: IMcmaWorkerOperation.ExecuteAsync
    fullName: Mcma.Worker.IMcmaWorkerOperation.ExecuteAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mcma.Worker.McmaWorkerRequestContext
    name: McmaWorkerRequestContext
    nameWithType: McmaWorkerRequestContext
    fullName: Mcma.Worker.McmaWorkerRequestContext
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mcma.Worker.IMcmaWorkerOperation.ExecuteAsync(Mcma.Worker.McmaWorkerRequestContext)
    name: ExecuteAsync
    nameWithType: IMcmaWorkerOperation.ExecuteAsync
    fullName: Mcma.Worker.IMcmaWorkerOperation.ExecuteAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mcma.Worker.McmaWorkerRequestContext
    name: McmaWorkerRequestContext
    nameWithType: McmaWorkerRequestContext
    fullName: Mcma.Worker.McmaWorkerRequestContext
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Mcma.Worker.McmaWorkerOperation`1.ExecuteAsync*
  commentId: Overload:Mcma.Worker.McmaWorkerOperation`1.ExecuteAsync
  name: ExecuteAsync
  nameWithType: McmaWorkerOperation<T>.ExecuteAsync
  fullName: Mcma.Worker.McmaWorkerOperation<T>.ExecuteAsync
  nameWithType.vb: McmaWorkerOperation(Of T).ExecuteAsync
  fullName.vb: Mcma.Worker.McmaWorkerOperation(Of T).ExecuteAsync
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
