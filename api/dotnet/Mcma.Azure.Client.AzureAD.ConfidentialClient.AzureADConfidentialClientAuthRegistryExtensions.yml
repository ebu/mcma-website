### YamlMime:ManagedReference
items:
- uid: Mcma.Azure.Client.AzureAD.ConfidentialClient.AzureADConfidentialClientAuthRegistryExtensions
  commentId: T:Mcma.Azure.Client.AzureAD.ConfidentialClient.AzureADConfidentialClientAuthRegistryExtensions
  id: AzureADConfidentialClientAuthRegistryExtensions
  parent: Mcma.Azure.Client.AzureAD.ConfidentialClient
  children:
  - Mcma.Azure.Client.AzureAD.ConfidentialClient.AzureADConfidentialClientAuthRegistryExtensions.AddAzureADConfidentialClientAuth(Mcma.Client.AuthenticatorRegistry,System.Action{Microsoft.Identity.Client.ConfidentialClientApplicationOptions})
  - Mcma.Azure.Client.AzureAD.ConfidentialClient.AzureADConfidentialClientAuthRegistryExtensions.TryAddAzureADConfidentialClientAuth(Mcma.Client.AuthenticatorRegistry,System.Action{Microsoft.Identity.Client.ConfidentialClientApplicationOptions})
  langs:
  - csharp
  - vb
  name: AzureADConfidentialClientAuthRegistryExtensions
  nameWithType: AzureADConfidentialClientAuthRegistryExtensions
  fullName: Mcma.Azure.Client.AzureAD.ConfidentialClient.AzureADConfidentialClientAuthRegistryExtensions
  type: Class
  source:
    remote:
      path: Azure/Mcma.Azure.Client/AzureAD/ConfidentialClient/AzureADConfidentialClientAuthRegistryExtensions.cs
      branch: documentation
      repo: https://github.com/ebu/mcma-libraries-dotnet.git
    id: AzureADConfidentialClientAuthRegistryExtensions
    path: ../mcma-libraries-dotnet/Azure/Mcma.Azure.Client/AzureAD/ConfidentialClient/AzureADConfidentialClientAuthRegistryExtensions.cs
    startLine: 8
  assemblies:
  - Mcma.Azure.Client
  namespace: Mcma.Azure.Client.AzureAD.ConfidentialClient
  syntax:
    content: 'public static class AzureADConfidentialClientAuthRegistryExtensions : object'
    content.vb: >-
      Public Module AzureADConfidentialClientAuthRegistryExtensions

          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Mcma.Azure.Client.AzureAD.ConfidentialClient.AzureADConfidentialClientAuthRegistryExtensions.AddAzureADConfidentialClientAuth(Mcma.Client.AuthenticatorRegistry,System.Action{Microsoft.Identity.Client.ConfidentialClientApplicationOptions})
  commentId: M:Mcma.Azure.Client.AzureAD.ConfidentialClient.AzureADConfidentialClientAuthRegistryExtensions.AddAzureADConfidentialClientAuth(Mcma.Client.AuthenticatorRegistry,System.Action{Microsoft.Identity.Client.ConfidentialClientApplicationOptions})
  id: AddAzureADConfidentialClientAuth(Mcma.Client.AuthenticatorRegistry,System.Action{Microsoft.Identity.Client.ConfidentialClientApplicationOptions})
  isExtensionMethod: true
  parent: Mcma.Azure.Client.AzureAD.ConfidentialClient.AzureADConfidentialClientAuthRegistryExtensions
  langs:
  - csharp
  - vb
  name: AddAzureADConfidentialClientAuth(AuthenticatorRegistry, Action<ConfidentialClientApplicationOptions>)
  nameWithType: AzureADConfidentialClientAuthRegistryExtensions.AddAzureADConfidentialClientAuth(AuthenticatorRegistry, Action<ConfidentialClientApplicationOptions>)
  fullName: Mcma.Azure.Client.AzureAD.ConfidentialClient.AzureADConfidentialClientAuthRegistryExtensions.AddAzureADConfidentialClientAuth(Mcma.Client.AuthenticatorRegistry, System.Action<Microsoft.Identity.Client.ConfidentialClientApplicationOptions>)
  type: Method
  source:
    remote:
      path: Azure/Mcma.Azure.Client/AzureAD/ConfidentialClient/AzureADConfidentialClientAuthRegistryExtensions.cs
      branch: documentation
      repo: https://github.com/ebu/mcma-libraries-dotnet.git
    id: AddAzureADConfidentialClientAuth
    path: ../mcma-libraries-dotnet/Azure/Mcma.Azure.Client/AzureAD/ConfidentialClient/AzureADConfidentialClientAuthRegistryExtensions.cs
    startLine: 10
  assemblies:
  - Mcma.Azure.Client
  namespace: Mcma.Azure.Client.AzureAD.ConfidentialClient
  syntax:
    content: public static AuthenticatorRegistry AddAzureADConfidentialClientAuth(this AuthenticatorRegistry authenticatorRegistry, Action<ConfidentialClientApplicationOptions> configureOptions = null)
    parameters:
    - id: authenticatorRegistry
      type: Mcma.Client.AuthenticatorRegistry
    - id: configureOptions
      type: System.Action{Microsoft.Identity.Client.ConfidentialClientApplicationOptions}
    return:
      type: Mcma.Client.AuthenticatorRegistry
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AddAzureADConfidentialClientAuth(authenticatorRegistry As AuthenticatorRegistry, configureOptions As Action(Of ConfidentialClientApplicationOptions) = Nothing) As AuthenticatorRegistry
  overload: Mcma.Azure.Client.AzureAD.ConfidentialClient.AzureADConfidentialClientAuthRegistryExtensions.AddAzureADConfidentialClientAuth*
  nameWithType.vb: AzureADConfidentialClientAuthRegistryExtensions.AddAzureADConfidentialClientAuth(AuthenticatorRegistry, Action(Of ConfidentialClientApplicationOptions))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Mcma.Azure.Client.AzureAD.ConfidentialClient.AzureADConfidentialClientAuthRegistryExtensions.AddAzureADConfidentialClientAuth(Mcma.Client.AuthenticatorRegistry, System.Action(Of Microsoft.Identity.Client.ConfidentialClientApplicationOptions))
  name.vb: AddAzureADConfidentialClientAuth(AuthenticatorRegistry, Action(Of ConfidentialClientApplicationOptions))
- uid: Mcma.Azure.Client.AzureAD.ConfidentialClient.AzureADConfidentialClientAuthRegistryExtensions.TryAddAzureADConfidentialClientAuth(Mcma.Client.AuthenticatorRegistry,System.Action{Microsoft.Identity.Client.ConfidentialClientApplicationOptions})
  commentId: M:Mcma.Azure.Client.AzureAD.ConfidentialClient.AzureADConfidentialClientAuthRegistryExtensions.TryAddAzureADConfidentialClientAuth(Mcma.Client.AuthenticatorRegistry,System.Action{Microsoft.Identity.Client.ConfidentialClientApplicationOptions})
  id: TryAddAzureADConfidentialClientAuth(Mcma.Client.AuthenticatorRegistry,System.Action{Microsoft.Identity.Client.ConfidentialClientApplicationOptions})
  isExtensionMethod: true
  parent: Mcma.Azure.Client.AzureAD.ConfidentialClient.AzureADConfidentialClientAuthRegistryExtensions
  langs:
  - csharp
  - vb
  name: TryAddAzureADConfidentialClientAuth(AuthenticatorRegistry, Action<ConfidentialClientApplicationOptions>)
  nameWithType: AzureADConfidentialClientAuthRegistryExtensions.TryAddAzureADConfidentialClientAuth(AuthenticatorRegistry, Action<ConfidentialClientApplicationOptions>)
  fullName: Mcma.Azure.Client.AzureAD.ConfidentialClient.AzureADConfidentialClientAuthRegistryExtensions.TryAddAzureADConfidentialClientAuth(Mcma.Client.AuthenticatorRegistry, System.Action<Microsoft.Identity.Client.ConfidentialClientApplicationOptions>)
  type: Method
  source:
    remote:
      path: Azure/Mcma.Azure.Client/AzureAD/ConfidentialClient/AzureADConfidentialClientAuthRegistryExtensions.cs
      branch: documentation
      repo: https://github.com/ebu/mcma-libraries-dotnet.git
    id: TryAddAzureADConfidentialClientAuth
    path: ../mcma-libraries-dotnet/Azure/Mcma.Azure.Client/AzureAD/ConfidentialClient/AzureADConfidentialClientAuthRegistryExtensions.cs
    startLine: 19
  assemblies:
  - Mcma.Azure.Client
  namespace: Mcma.Azure.Client.AzureAD.ConfidentialClient
  syntax:
    content: public static AuthenticatorRegistry TryAddAzureADConfidentialClientAuth(this AuthenticatorRegistry authenticatorRegistry, Action<ConfidentialClientApplicationOptions> configureOptions = null)
    parameters:
    - id: authenticatorRegistry
      type: Mcma.Client.AuthenticatorRegistry
    - id: configureOptions
      type: System.Action{Microsoft.Identity.Client.ConfidentialClientApplicationOptions}
    return:
      type: Mcma.Client.AuthenticatorRegistry
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function TryAddAzureADConfidentialClientAuth(authenticatorRegistry As AuthenticatorRegistry, configureOptions As Action(Of ConfidentialClientApplicationOptions) = Nothing) As AuthenticatorRegistry
  overload: Mcma.Azure.Client.AzureAD.ConfidentialClient.AzureADConfidentialClientAuthRegistryExtensions.TryAddAzureADConfidentialClientAuth*
  nameWithType.vb: AzureADConfidentialClientAuthRegistryExtensions.TryAddAzureADConfidentialClientAuth(AuthenticatorRegistry, Action(Of ConfidentialClientApplicationOptions))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Mcma.Azure.Client.AzureAD.ConfidentialClient.AzureADConfidentialClientAuthRegistryExtensions.TryAddAzureADConfidentialClientAuth(Mcma.Client.AuthenticatorRegistry, System.Action(Of Microsoft.Identity.Client.ConfidentialClientApplicationOptions))
  name.vb: TryAddAzureADConfidentialClientAuth(AuthenticatorRegistry, Action(Of ConfidentialClientApplicationOptions))
references:
- uid: Mcma.Azure.Client.AzureAD.ConfidentialClient
  commentId: N:Mcma.Azure.Client.AzureAD.ConfidentialClient
  name: Mcma.Azure.Client.AzureAD.ConfidentialClient
  nameWithType: Mcma.Azure.Client.AzureAD.ConfidentialClient
  fullName: Mcma.Azure.Client.AzureAD.ConfidentialClient
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Mcma.Azure.Client.AzureAD.ConfidentialClient.AzureADConfidentialClientAuthRegistryExtensions.AddAzureADConfidentialClientAuth*
  commentId: Overload:Mcma.Azure.Client.AzureAD.ConfidentialClient.AzureADConfidentialClientAuthRegistryExtensions.AddAzureADConfidentialClientAuth
  name: AddAzureADConfidentialClientAuth
  nameWithType: AzureADConfidentialClientAuthRegistryExtensions.AddAzureADConfidentialClientAuth
  fullName: Mcma.Azure.Client.AzureAD.ConfidentialClient.AzureADConfidentialClientAuthRegistryExtensions.AddAzureADConfidentialClientAuth
- uid: Mcma.Client.AuthenticatorRegistry
  commentId: T:Mcma.Client.AuthenticatorRegistry
  parent: Mcma.Client
  name: AuthenticatorRegistry
  nameWithType: AuthenticatorRegistry
  fullName: Mcma.Client.AuthenticatorRegistry
- uid: System.Action{Microsoft.Identity.Client.ConfidentialClientApplicationOptions}
  commentId: '!:System.Action{Microsoft.Identity.Client.ConfidentialClientApplicationOptions}'
  definition: System.Action`1
  name: Action<ConfidentialClientApplicationOptions>
  nameWithType: Action<ConfidentialClientApplicationOptions>
  fullName: System.Action<Microsoft.Identity.Client.ConfidentialClientApplicationOptions>
  nameWithType.vb: Action(Of ConfidentialClientApplicationOptions)
  fullName.vb: System.Action(Of Microsoft.Identity.Client.ConfidentialClientApplicationOptions)
  name.vb: Action(Of ConfidentialClientApplicationOptions)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Identity.Client.ConfidentialClientApplicationOptions
    name: ConfidentialClientApplicationOptions
    nameWithType: ConfidentialClientApplicationOptions
    fullName: Microsoft.Identity.Client.ConfidentialClientApplicationOptions
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Identity.Client.ConfidentialClientApplicationOptions
    name: ConfidentialClientApplicationOptions
    nameWithType: ConfidentialClientApplicationOptions
    fullName: Microsoft.Identity.Client.ConfidentialClientApplicationOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mcma.Client
  commentId: N:Mcma.Client
  name: Mcma.Client
  nameWithType: Mcma.Client
  fullName: Mcma.Client
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Mcma.Azure.Client.AzureAD.ConfidentialClient.AzureADConfidentialClientAuthRegistryExtensions.TryAddAzureADConfidentialClientAuth*
  commentId: Overload:Mcma.Azure.Client.AzureAD.ConfidentialClient.AzureADConfidentialClientAuthRegistryExtensions.TryAddAzureADConfidentialClientAuth
  name: TryAddAzureADConfidentialClientAuth
  nameWithType: AzureADConfidentialClientAuthRegistryExtensions.TryAddAzureADConfidentialClientAuth
  fullName: Mcma.Azure.Client.AzureAD.ConfidentialClient.AzureADConfidentialClientAuthRegistryExtensions.TryAddAzureADConfidentialClientAuth
