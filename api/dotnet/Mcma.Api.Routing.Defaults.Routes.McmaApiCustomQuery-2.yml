### YamlMime:ManagedReference
items:
- uid: Mcma.Api.Routing.Defaults.Routes.McmaApiCustomQuery`2
  commentId: T:Mcma.Api.Routing.Defaults.Routes.McmaApiCustomQuery`2
  id: McmaApiCustomQuery`2
  parent: Mcma.Api.Routing.Defaults.Routes
  children:
  - Mcma.Api.Routing.Defaults.Routes.McmaApiCustomQuery`2.#ctor(System.Func{Mcma.Api.McmaApiRequestContext,System.Boolean},System.Func{Mcma.Api.McmaApiRequestContext,Mcma.Data.DocumentDatabase.Queries.CustomQuery{`1}})
  - Mcma.Api.Routing.Defaults.Routes.McmaApiCustomQuery`2.ExecuteAsync(Mcma.Api.McmaApiRequestContext,Mcma.Data.IDocumentDatabaseTable)
  langs:
  - csharp
  - vb
  name: McmaApiCustomQuery<TResource, TParameters>
  nameWithType: McmaApiCustomQuery<TResource, TParameters>
  fullName: Mcma.Api.Routing.Defaults.Routes.McmaApiCustomQuery<TResource, TParameters>
  type: Class
  source:
    remote:
      path: Base/Mcma.Api/Routing/Defaults/Query/McmaApiCustomQuery.cs
      branch: documentation
      repo: https://github.com/ebu/mcma-libraries-dotnet.git
    id: McmaApiCustomQuery
    path: ../mcma-libraries-dotnet/Base/Mcma.Api/Routing/Defaults/Query/McmaApiCustomQuery.cs
    startLine: 7
  assemblies:
  - Mcma.Api
  namespace: Mcma.Api.Routing.Defaults.Routes
  syntax:
    content: 'public class McmaApiCustomQuery<TResource, TParameters> : IMcmaApiCustomQuery<TResource> where TResource : class'
    typeParameters:
    - id: TResource
    - id: TParameters
    content.vb: >-
      Public Class McmaApiCustomQuery(Of TResource As Class, TParameters)
          Implements IMcmaApiCustomQuery(Of TResource)
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - System.Object.Mcma.Serialization.McmaJson.ToMcmaJson(System.Boolean)
  nameWithType.vb: McmaApiCustomQuery(Of TResource, TParameters)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: Mcma.Api.Routing.Defaults.Routes.McmaApiCustomQuery(Of TResource, TParameters)
  name.vb: McmaApiCustomQuery(Of TResource, TParameters)
- uid: Mcma.Api.Routing.Defaults.Routes.McmaApiCustomQuery`2.#ctor(System.Func{Mcma.Api.McmaApiRequestContext,System.Boolean},System.Func{Mcma.Api.McmaApiRequestContext,Mcma.Data.DocumentDatabase.Queries.CustomQuery{`1}})
  commentId: M:Mcma.Api.Routing.Defaults.Routes.McmaApiCustomQuery`2.#ctor(System.Func{Mcma.Api.McmaApiRequestContext,System.Boolean},System.Func{Mcma.Api.McmaApiRequestContext,Mcma.Data.DocumentDatabase.Queries.CustomQuery{`1}})
  id: '#ctor(System.Func{Mcma.Api.McmaApiRequestContext,System.Boolean},System.Func{Mcma.Api.McmaApiRequestContext,Mcma.Data.DocumentDatabase.Queries.CustomQuery{`1}})'
  parent: Mcma.Api.Routing.Defaults.Routes.McmaApiCustomQuery`2
  langs:
  - csharp
  - vb
  name: McmaApiCustomQuery(Func<McmaApiRequestContext, Boolean>, Func<McmaApiRequestContext, CustomQuery<TParameters>>)
  nameWithType: McmaApiCustomQuery<TResource, TParameters>.McmaApiCustomQuery(Func<McmaApiRequestContext, Boolean>, Func<McmaApiRequestContext, CustomQuery<TParameters>>)
  fullName: Mcma.Api.Routing.Defaults.Routes.McmaApiCustomQuery<TResource, TParameters>.McmaApiCustomQuery(System.Func<Mcma.Api.McmaApiRequestContext, System.Boolean>, System.Func<Mcma.Api.McmaApiRequestContext, Mcma.Data.DocumentDatabase.Queries.CustomQuery<TParameters>>)
  type: Constructor
  source:
    remote:
      path: Base/Mcma.Api/Routing/Defaults/Query/McmaApiCustomQuery.cs
      branch: documentation
      repo: https://github.com/ebu/mcma-libraries-dotnet.git
    id: .ctor
    path: ../mcma-libraries-dotnet/Base/Mcma.Api/Routing/Defaults/Query/McmaApiCustomQuery.cs
    startLine: 10
  assemblies:
  - Mcma.Api
  namespace: Mcma.Api.Routing.Defaults.Routes
  syntax:
    content: public McmaApiCustomQuery(Func<McmaApiRequestContext, bool> isMatch, Func<McmaApiRequestContext, CustomQuery<TParameters>> createQuery)
    parameters:
    - id: isMatch
      type: System.Func{Mcma.Api.McmaApiRequestContext,System.Boolean}
    - id: createQuery
      type: System.Func{Mcma.Api.McmaApiRequestContext,Mcma.Data.DocumentDatabase.Queries.CustomQuery{{TParameters}}}
    content.vb: Public Sub New(isMatch As Func(Of McmaApiRequestContext, Boolean), createQuery As Func(Of McmaApiRequestContext, CustomQuery(Of TParameters)))
  overload: Mcma.Api.Routing.Defaults.Routes.McmaApiCustomQuery`2.#ctor*
  nameWithType.vb: McmaApiCustomQuery(Of TResource, TParameters).McmaApiCustomQuery(Func(Of McmaApiRequestContext, Boolean), Func(Of McmaApiRequestContext, CustomQuery(Of TParameters)))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Mcma.Api.Routing.Defaults.Routes.McmaApiCustomQuery(Of TResource, TParameters).McmaApiCustomQuery(System.Func(Of Mcma.Api.McmaApiRequestContext, System.Boolean), System.Func(Of Mcma.Api.McmaApiRequestContext, Mcma.Data.DocumentDatabase.Queries.CustomQuery(Of TParameters)))
  name.vb: McmaApiCustomQuery(Func(Of McmaApiRequestContext, Boolean), Func(Of McmaApiRequestContext, CustomQuery(Of TParameters)))
- uid: Mcma.Api.Routing.Defaults.Routes.McmaApiCustomQuery`2.ExecuteAsync(Mcma.Api.McmaApiRequestContext,Mcma.Data.IDocumentDatabaseTable)
  commentId: M:Mcma.Api.Routing.Defaults.Routes.McmaApiCustomQuery`2.ExecuteAsync(Mcma.Api.McmaApiRequestContext,Mcma.Data.IDocumentDatabaseTable)
  id: ExecuteAsync(Mcma.Api.McmaApiRequestContext,Mcma.Data.IDocumentDatabaseTable)
  parent: Mcma.Api.Routing.Defaults.Routes.McmaApiCustomQuery`2
  langs:
  - csharp
  - vb
  name: ExecuteAsync(McmaApiRequestContext, IDocumentDatabaseTable)
  nameWithType: McmaApiCustomQuery<TResource, TParameters>.ExecuteAsync(McmaApiRequestContext, IDocumentDatabaseTable)
  fullName: Mcma.Api.Routing.Defaults.Routes.McmaApiCustomQuery<TResource, TParameters>.ExecuteAsync(Mcma.Api.McmaApiRequestContext, Mcma.Data.IDocumentDatabaseTable)
  type: Method
  source:
    remote:
      path: Base/Mcma.Api/Routing/Defaults/Query/McmaApiCustomQuery.cs
      branch: documentation
      repo: https://github.com/ebu/mcma-libraries-dotnet.git
    id: ExecuteAsync
    path: ../mcma-libraries-dotnet/Base/Mcma.Api/Routing/Defaults/Query/McmaApiCustomQuery.cs
    startLine: 22
  assemblies:
  - Mcma.Api
  namespace: Mcma.Api.Routing.Defaults.Routes
  syntax:
    content: public Task<QueryResults<TResource>> ExecuteAsync(McmaApiRequestContext requestContext, IDocumentDatabaseTable table)
    parameters:
    - id: requestContext
      type: Mcma.Api.McmaApiRequestContext
    - id: table
      type: Mcma.Data.IDocumentDatabaseTable
    return:
      type: System.Threading.Tasks.Task{Mcma.QueryResults{{TResource}}}
    content.vb: Public Function ExecuteAsync(requestContext As McmaApiRequestContext, table As IDocumentDatabaseTable) As Task(Of QueryResults(Of TResource))
  overload: Mcma.Api.Routing.Defaults.Routes.McmaApiCustomQuery`2.ExecuteAsync*
  nameWithType.vb: McmaApiCustomQuery(Of TResource, TParameters).ExecuteAsync(McmaApiRequestContext, IDocumentDatabaseTable)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Mcma.Api.Routing.Defaults.Routes.McmaApiCustomQuery(Of TResource, TParameters).ExecuteAsync(Mcma.Api.McmaApiRequestContext, Mcma.Data.IDocumentDatabaseTable)
references:
- uid: Mcma.Api.Routing.Defaults.Routes
  commentId: N:Mcma.Api.Routing.Defaults.Routes
  name: Mcma.Api.Routing.Defaults.Routes
  nameWithType: Mcma.Api.Routing.Defaults.Routes
  fullName: Mcma.Api.Routing.Defaults.Routes
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Mcma.Serialization.McmaJson.ToMcmaJson(System.Boolean)
  commentId: M:Mcma.Serialization.McmaJson.ToMcmaJson(System.Object,System.Boolean)
  parent: Mcma.Serialization.McmaJson
  definition: Mcma.Serialization.McmaJson.ToMcmaJson(System.Object,System.Boolean)
  name: ToMcmaJson(Boolean)
  nameWithType: McmaJson.ToMcmaJson(Boolean)
  fullName: Mcma.Serialization.McmaJson.ToMcmaJson(System.Boolean)
  spec.csharp:
  - uid: Mcma.Serialization.McmaJson.ToMcmaJson(System.Boolean)
    name: ToMcmaJson
    nameWithType: McmaJson.ToMcmaJson
    fullName: Mcma.Serialization.McmaJson.ToMcmaJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mcma.Serialization.McmaJson.ToMcmaJson(System.Boolean)
    name: ToMcmaJson
    nameWithType: McmaJson.ToMcmaJson
    fullName: Mcma.Serialization.McmaJson.ToMcmaJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Mcma.Serialization.McmaJson.ToMcmaJson(System.Object,System.Boolean)
  commentId: M:Mcma.Serialization.McmaJson.ToMcmaJson(System.Object,System.Boolean)
  isExternal: true
  name: ToMcmaJson(Object, Boolean)
  nameWithType: McmaJson.ToMcmaJson(Object, Boolean)
  fullName: Mcma.Serialization.McmaJson.ToMcmaJson(System.Object, System.Boolean)
  spec.csharp:
  - uid: Mcma.Serialization.McmaJson.ToMcmaJson(System.Object,System.Boolean)
    name: ToMcmaJson
    nameWithType: McmaJson.ToMcmaJson
    fullName: Mcma.Serialization.McmaJson.ToMcmaJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mcma.Serialization.McmaJson.ToMcmaJson(System.Object,System.Boolean)
    name: ToMcmaJson
    nameWithType: McmaJson.ToMcmaJson
    fullName: Mcma.Serialization.McmaJson.ToMcmaJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mcma.Serialization.McmaJson
  commentId: T:Mcma.Serialization.McmaJson
  parent: Mcma.Serialization
  name: McmaJson
  nameWithType: McmaJson
  fullName: Mcma.Serialization.McmaJson
- uid: Mcma.Serialization
  commentId: N:Mcma.Serialization
  name: Mcma.Serialization
  nameWithType: Mcma.Serialization
  fullName: Mcma.Serialization
- uid: Mcma.Api.Routing.Defaults.Routes.McmaApiCustomQuery`2.#ctor*
  commentId: Overload:Mcma.Api.Routing.Defaults.Routes.McmaApiCustomQuery`2.#ctor
  name: McmaApiCustomQuery
  nameWithType: McmaApiCustomQuery<TResource, TParameters>.McmaApiCustomQuery
  fullName: Mcma.Api.Routing.Defaults.Routes.McmaApiCustomQuery<TResource, TParameters>.McmaApiCustomQuery
  nameWithType.vb: McmaApiCustomQuery(Of TResource, TParameters).McmaApiCustomQuery
  fullName.vb: Mcma.Api.Routing.Defaults.Routes.McmaApiCustomQuery(Of TResource, TParameters).McmaApiCustomQuery
- uid: System.Func{Mcma.Api.McmaApiRequestContext,System.Boolean}
  commentId: T:System.Func{Mcma.Api.McmaApiRequestContext,System.Boolean}
  parent: System
  definition: System.Func`2
  name: Func<McmaApiRequestContext, Boolean>
  nameWithType: Func<McmaApiRequestContext, Boolean>
  fullName: System.Func<Mcma.Api.McmaApiRequestContext, System.Boolean>
  nameWithType.vb: Func(Of McmaApiRequestContext, Boolean)
  fullName.vb: System.Func(Of Mcma.Api.McmaApiRequestContext, System.Boolean)
  name.vb: Func(Of McmaApiRequestContext, Boolean)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mcma.Api.McmaApiRequestContext
    name: McmaApiRequestContext
    nameWithType: McmaApiRequestContext
    fullName: Mcma.Api.McmaApiRequestContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mcma.Api.McmaApiRequestContext
    name: McmaApiRequestContext
    nameWithType: McmaApiRequestContext
    fullName: Mcma.Api.McmaApiRequestContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func{Mcma.Api.McmaApiRequestContext,Mcma.Data.DocumentDatabase.Queries.CustomQuery{{TParameters}}}
  commentId: T:System.Func{Mcma.Api.McmaApiRequestContext,Mcma.Data.DocumentDatabase.Queries.CustomQuery{`1}}
  parent: System
  definition: System.Func`2
  name: Func<McmaApiRequestContext, CustomQuery<TParameters>>
  nameWithType: Func<McmaApiRequestContext, CustomQuery<TParameters>>
  fullName: System.Func<Mcma.Api.McmaApiRequestContext, Mcma.Data.DocumentDatabase.Queries.CustomQuery<TParameters>>
  nameWithType.vb: Func(Of McmaApiRequestContext, CustomQuery(Of TParameters))
  fullName.vb: System.Func(Of Mcma.Api.McmaApiRequestContext, Mcma.Data.DocumentDatabase.Queries.CustomQuery(Of TParameters))
  name.vb: Func(Of McmaApiRequestContext, CustomQuery(Of TParameters))
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mcma.Api.McmaApiRequestContext
    name: McmaApiRequestContext
    nameWithType: McmaApiRequestContext
    fullName: Mcma.Api.McmaApiRequestContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mcma.Data.DocumentDatabase.Queries.CustomQuery`1
    name: CustomQuery
    nameWithType: CustomQuery
    fullName: Mcma.Data.DocumentDatabase.Queries.CustomQuery
  - name: <
    nameWithType: <
    fullName: <
  - name: TParameters
    nameWithType: TParameters
    fullName: TParameters
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mcma.Api.McmaApiRequestContext
    name: McmaApiRequestContext
    nameWithType: McmaApiRequestContext
    fullName: Mcma.Api.McmaApiRequestContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mcma.Data.DocumentDatabase.Queries.CustomQuery`1
    name: CustomQuery
    nameWithType: CustomQuery
    fullName: Mcma.Data.DocumentDatabase.Queries.CustomQuery
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TParameters
    nameWithType: TParameters
    fullName: TParameters
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullName.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Mcma.Api.Routing.Defaults.Routes.McmaApiCustomQuery`2.ExecuteAsync*
  commentId: Overload:Mcma.Api.Routing.Defaults.Routes.McmaApiCustomQuery`2.ExecuteAsync
  name: ExecuteAsync
  nameWithType: McmaApiCustomQuery<TResource, TParameters>.ExecuteAsync
  fullName: Mcma.Api.Routing.Defaults.Routes.McmaApiCustomQuery<TResource, TParameters>.ExecuteAsync
  nameWithType.vb: McmaApiCustomQuery(Of TResource, TParameters).ExecuteAsync
  fullName.vb: Mcma.Api.Routing.Defaults.Routes.McmaApiCustomQuery(Of TResource, TParameters).ExecuteAsync
- uid: Mcma.Api.McmaApiRequestContext
  commentId: T:Mcma.Api.McmaApiRequestContext
  parent: Mcma.Api
  name: McmaApiRequestContext
  nameWithType: McmaApiRequestContext
  fullName: Mcma.Api.McmaApiRequestContext
- uid: Mcma.Data.IDocumentDatabaseTable
  commentId: T:Mcma.Data.IDocumentDatabaseTable
  parent: Mcma.Data
  name: IDocumentDatabaseTable
  nameWithType: IDocumentDatabaseTable
  fullName: Mcma.Data.IDocumentDatabaseTable
- uid: System.Threading.Tasks.Task{Mcma.QueryResults{{TResource}}}
  commentId: T:System.Threading.Tasks.Task{Mcma.QueryResults{``0}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<QueryResults<TResource>>
  nameWithType: Task<QueryResults<TResource>>
  fullName: System.Threading.Tasks.Task<Mcma.QueryResults<TResource>>
  nameWithType.vb: Task(Of QueryResults(Of TResource))
  fullName.vb: System.Threading.Tasks.Task(Of Mcma.QueryResults(Of TResource))
  name.vb: Task(Of QueryResults(Of TResource))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mcma.QueryResults`1
    name: QueryResults
    nameWithType: QueryResults
    fullName: Mcma.QueryResults
  - name: <
    nameWithType: <
    fullName: <
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mcma.QueryResults`1
    name: QueryResults
    nameWithType: QueryResults
    fullName: Mcma.QueryResults
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResource
    nameWithType: TResource
    fullName: TResource
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Mcma.Api
  commentId: N:Mcma.Api
  name: Mcma.Api
  nameWithType: Mcma.Api
  fullName: Mcma.Api
- uid: Mcma.Data
  commentId: N:Mcma.Data
  name: Mcma.Data
  nameWithType: Mcma.Data
  fullName: Mcma.Data
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
