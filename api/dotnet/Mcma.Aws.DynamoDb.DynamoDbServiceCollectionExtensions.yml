### YamlMime:ManagedReference
items:
- uid: Mcma.Aws.DynamoDb.DynamoDbServiceCollectionExtensions
  commentId: T:Mcma.Aws.DynamoDb.DynamoDbServiceCollectionExtensions
  id: DynamoDbServiceCollectionExtensions
  parent: Mcma.Aws.DynamoDb
  children:
  - Mcma.Aws.DynamoDb.DynamoDbServiceCollectionExtensions.AddMcmaDynamoDb(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Mcma.Aws.DynamoDb.DynamoDbTableOptions},System.Action{Mcma.Aws.DynamoDb.DynamoDbTableBuilder})
  - Mcma.Aws.DynamoDb.DynamoDbServiceCollectionExtensions.AddMcmaDynamoDb(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.String,System.Action{Mcma.Aws.DynamoDb.DynamoDbTableBuilder})
  langs:
  - csharp
  - vb
  name: DynamoDbServiceCollectionExtensions
  nameWithType: DynamoDbServiceCollectionExtensions
  fullName: Mcma.Aws.DynamoDb.DynamoDbServiceCollectionExtensions
  type: Class
  source:
    remote:
      path: AWS/Mcma.Aws.DynamoDb/DynamoDbServiceCollectionExtensions.cs
      branch: documentation
      repo: https://github.com/ebu/mcma-libraries-dotnet.git
    id: DynamoDbServiceCollectionExtensions
    path: ../mcma-libraries-dotnet/AWS/Mcma.Aws.DynamoDb/DynamoDbServiceCollectionExtensions.cs
    startLine: 9
  assemblies:
  - Mcma.Aws.DynamoDb
  namespace: Mcma.Aws.DynamoDb
  syntax:
    content: public static class DynamoDbServiceCollectionExtensions
    content.vb: Public Module DynamoDbServiceCollectionExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Mcma.Aws.DynamoDb.DynamoDbServiceCollectionExtensions.AddMcmaDynamoDb(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Mcma.Aws.DynamoDb.DynamoDbTableOptions},System.Action{Mcma.Aws.DynamoDb.DynamoDbTableBuilder})
  commentId: M:Mcma.Aws.DynamoDb.DynamoDbServiceCollectionExtensions.AddMcmaDynamoDb(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Mcma.Aws.DynamoDb.DynamoDbTableOptions},System.Action{Mcma.Aws.DynamoDb.DynamoDbTableBuilder})
  id: AddMcmaDynamoDb(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Mcma.Aws.DynamoDb.DynamoDbTableOptions},System.Action{Mcma.Aws.DynamoDb.DynamoDbTableBuilder})
  isExtensionMethod: true
  parent: Mcma.Aws.DynamoDb.DynamoDbServiceCollectionExtensions
  langs:
  - csharp
  - vb
  name: AddMcmaDynamoDb(IServiceCollection, Action<DynamoDbTableOptions>, Action<DynamoDbTableBuilder>)
  nameWithType: DynamoDbServiceCollectionExtensions.AddMcmaDynamoDb(IServiceCollection, Action<DynamoDbTableOptions>, Action<DynamoDbTableBuilder>)
  fullName: Mcma.Aws.DynamoDb.DynamoDbServiceCollectionExtensions.AddMcmaDynamoDb(Microsoft.Extensions.DependencyInjection.IServiceCollection, System.Action<Mcma.Aws.DynamoDb.DynamoDbTableOptions>, System.Action<Mcma.Aws.DynamoDb.DynamoDbTableBuilder>)
  type: Method
  source:
    remote:
      path: AWS/Mcma.Aws.DynamoDb/DynamoDbServiceCollectionExtensions.cs
      branch: documentation
      repo: https://github.com/ebu/mcma-libraries-dotnet.git
    id: AddMcmaDynamoDb
    path: ../mcma-libraries-dotnet/AWS/Mcma.Aws.DynamoDb/DynamoDbServiceCollectionExtensions.cs
    startLine: 11
  assemblies:
  - Mcma.Aws.DynamoDb
  namespace: Mcma.Aws.DynamoDb
  syntax:
    content: public static IServiceCollection AddMcmaDynamoDb(this IServiceCollection services, Action<DynamoDbTableOptions> configureOptions = null, Action<DynamoDbTableBuilder> build = null)
    parameters:
    - id: services
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
    - id: configureOptions
      type: System.Action{Mcma.Aws.DynamoDb.DynamoDbTableOptions}
    - id: build
      type: System.Action{Mcma.Aws.DynamoDb.DynamoDbTableBuilder}
    return:
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AddMcmaDynamoDb(services As IServiceCollection, configureOptions As Action(Of DynamoDbTableOptions) = Nothing, build As Action(Of DynamoDbTableBuilder) = Nothing) As IServiceCollection
  overload: Mcma.Aws.DynamoDb.DynamoDbServiceCollectionExtensions.AddMcmaDynamoDb*
  nameWithType.vb: DynamoDbServiceCollectionExtensions.AddMcmaDynamoDb(IServiceCollection, Action(Of DynamoDbTableOptions), Action(Of DynamoDbTableBuilder))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Mcma.Aws.DynamoDb.DynamoDbServiceCollectionExtensions.AddMcmaDynamoDb(Microsoft.Extensions.DependencyInjection.IServiceCollection, System.Action(Of Mcma.Aws.DynamoDb.DynamoDbTableOptions), System.Action(Of Mcma.Aws.DynamoDb.DynamoDbTableBuilder))
  name.vb: AddMcmaDynamoDb(IServiceCollection, Action(Of DynamoDbTableOptions), Action(Of DynamoDbTableBuilder))
- uid: Mcma.Aws.DynamoDb.DynamoDbServiceCollectionExtensions.AddMcmaDynamoDb(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.String,System.Action{Mcma.Aws.DynamoDb.DynamoDbTableBuilder})
  commentId: M:Mcma.Aws.DynamoDb.DynamoDbServiceCollectionExtensions.AddMcmaDynamoDb(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.String,System.Action{Mcma.Aws.DynamoDb.DynamoDbTableBuilder})
  id: AddMcmaDynamoDb(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.String,System.Action{Mcma.Aws.DynamoDb.DynamoDbTableBuilder})
  isExtensionMethod: true
  parent: Mcma.Aws.DynamoDb.DynamoDbServiceCollectionExtensions
  langs:
  - csharp
  - vb
  name: AddMcmaDynamoDb(IServiceCollection, String, Action<DynamoDbTableBuilder>)
  nameWithType: DynamoDbServiceCollectionExtensions.AddMcmaDynamoDb(IServiceCollection, String, Action<DynamoDbTableBuilder>)
  fullName: Mcma.Aws.DynamoDb.DynamoDbServiceCollectionExtensions.AddMcmaDynamoDb(Microsoft.Extensions.DependencyInjection.IServiceCollection, System.String, System.Action<Mcma.Aws.DynamoDb.DynamoDbTableBuilder>)
  type: Method
  source:
    remote:
      path: AWS/Mcma.Aws.DynamoDb/DynamoDbServiceCollectionExtensions.cs
      branch: documentation
      repo: https://github.com/ebu/mcma-libraries-dotnet.git
    id: AddMcmaDynamoDb
    path: ../mcma-libraries-dotnet/AWS/Mcma.Aws.DynamoDb/DynamoDbServiceCollectionExtensions.cs
    startLine: 28
  assemblies:
  - Mcma.Aws.DynamoDb
  namespace: Mcma.Aws.DynamoDb
  syntax:
    content: public static IServiceCollection AddMcmaDynamoDb(this IServiceCollection services, string tableName, Action<DynamoDbTableBuilder> build = null)
    parameters:
    - id: services
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
    - id: tableName
      type: System.String
    - id: build
      type: System.Action{Mcma.Aws.DynamoDb.DynamoDbTableBuilder}
    return:
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AddMcmaDynamoDb(services As IServiceCollection, tableName As String, build As Action(Of DynamoDbTableBuilder) = Nothing) As IServiceCollection
  overload: Mcma.Aws.DynamoDb.DynamoDbServiceCollectionExtensions.AddMcmaDynamoDb*
  nameWithType.vb: DynamoDbServiceCollectionExtensions.AddMcmaDynamoDb(IServiceCollection, String, Action(Of DynamoDbTableBuilder))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Mcma.Aws.DynamoDb.DynamoDbServiceCollectionExtensions.AddMcmaDynamoDb(Microsoft.Extensions.DependencyInjection.IServiceCollection, System.String, System.Action(Of Mcma.Aws.DynamoDb.DynamoDbTableBuilder))
  name.vb: AddMcmaDynamoDb(IServiceCollection, String, Action(Of DynamoDbTableBuilder))
references:
- uid: Mcma.Aws.DynamoDb
  commentId: N:Mcma.Aws.DynamoDb
  name: Mcma.Aws.DynamoDb
  nameWithType: Mcma.Aws.DynamoDb
  fullName: Mcma.Aws.DynamoDb
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Mcma.Aws.DynamoDb.DynamoDbServiceCollectionExtensions.AddMcmaDynamoDb*
  commentId: Overload:Mcma.Aws.DynamoDb.DynamoDbServiceCollectionExtensions.AddMcmaDynamoDb
  name: AddMcmaDynamoDb
  nameWithType: DynamoDbServiceCollectionExtensions.AddMcmaDynamoDb
  fullName: Mcma.Aws.DynamoDb.DynamoDbServiceCollectionExtensions.AddMcmaDynamoDb
- uid: Microsoft.Extensions.DependencyInjection.IServiceCollection
  commentId: T:Microsoft.Extensions.DependencyInjection.IServiceCollection
  parent: Microsoft.Extensions.DependencyInjection
  isExternal: true
  name: IServiceCollection
  nameWithType: IServiceCollection
  fullName: Microsoft.Extensions.DependencyInjection.IServiceCollection
- uid: System.Action{Mcma.Aws.DynamoDb.DynamoDbTableOptions}
  commentId: T:System.Action{Mcma.Aws.DynamoDb.DynamoDbTableOptions}
  parent: System
  definition: System.Action`1
  name: Action<DynamoDbTableOptions>
  nameWithType: Action<DynamoDbTableOptions>
  fullName: System.Action<Mcma.Aws.DynamoDb.DynamoDbTableOptions>
  nameWithType.vb: Action(Of DynamoDbTableOptions)
  fullName.vb: System.Action(Of Mcma.Aws.DynamoDb.DynamoDbTableOptions)
  name.vb: Action(Of DynamoDbTableOptions)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mcma.Aws.DynamoDb.DynamoDbTableOptions
    name: DynamoDbTableOptions
    nameWithType: DynamoDbTableOptions
    fullName: Mcma.Aws.DynamoDb.DynamoDbTableOptions
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mcma.Aws.DynamoDb.DynamoDbTableOptions
    name: DynamoDbTableOptions
    nameWithType: DynamoDbTableOptions
    fullName: Mcma.Aws.DynamoDb.DynamoDbTableOptions
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action{Mcma.Aws.DynamoDb.DynamoDbTableBuilder}
  commentId: T:System.Action{Mcma.Aws.DynamoDb.DynamoDbTableBuilder}
  parent: System
  definition: System.Action`1
  name: Action<DynamoDbTableBuilder>
  nameWithType: Action<DynamoDbTableBuilder>
  fullName: System.Action<Mcma.Aws.DynamoDb.DynamoDbTableBuilder>
  nameWithType.vb: Action(Of DynamoDbTableBuilder)
  fullName.vb: System.Action(Of Mcma.Aws.DynamoDb.DynamoDbTableBuilder)
  name.vb: Action(Of DynamoDbTableBuilder)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mcma.Aws.DynamoDb.DynamoDbTableBuilder
    name: DynamoDbTableBuilder
    nameWithType: DynamoDbTableBuilder
    fullName: Mcma.Aws.DynamoDb.DynamoDbTableBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mcma.Aws.DynamoDb.DynamoDbTableBuilder
    name: DynamoDbTableBuilder
    nameWithType: DynamoDbTableBuilder
    fullName: Mcma.Aws.DynamoDb.DynamoDbTableBuilder
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.DependencyInjection
  commentId: N:Microsoft.Extensions.DependencyInjection
  isExternal: true
  name: Microsoft.Extensions.DependencyInjection
  nameWithType: Microsoft.Extensions.DependencyInjection
  fullName: Microsoft.Extensions.DependencyInjection
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
