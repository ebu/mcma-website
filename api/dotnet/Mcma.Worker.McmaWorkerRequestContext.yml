### YamlMime:ManagedReference
items:
- uid: Mcma.Worker.McmaWorkerRequestContext
  commentId: T:Mcma.Worker.McmaWorkerRequestContext
  id: McmaWorkerRequestContext
  parent: Mcma.Worker
  children:
  - Mcma.Worker.McmaWorkerRequestContext.#ctor(Mcma.Worker.McmaWorkerRequest,System.String)
  - Mcma.Worker.McmaWorkerRequestContext.GetInputAs(System.Type)
  - Mcma.Worker.McmaWorkerRequestContext.GetInputAs``1
  - Mcma.Worker.McmaWorkerRequestContext.Input
  - Mcma.Worker.McmaWorkerRequestContext.Logger
  - Mcma.Worker.McmaWorkerRequestContext.OperationName
  - Mcma.Worker.McmaWorkerRequestContext.RequestId
  - Mcma.Worker.McmaWorkerRequestContext.Tracker
  - Mcma.Worker.McmaWorkerRequestContext.TryGetInputAs(System.Type,System.Object@)
  - Mcma.Worker.McmaWorkerRequestContext.TryGetInputAs``1(``0@)
  langs:
  - csharp
  - vb
  name: McmaWorkerRequestContext
  nameWithType: McmaWorkerRequestContext
  fullName: Mcma.Worker.McmaWorkerRequestContext
  type: Class
  source:
    remote:
      path: Base/Mcma.Worker/McmaWorkerRequestContext.cs
      branch: documentation
      repo: https://github.com/ebu/mcma-libraries-dotnet.git
    id: McmaWorkerRequestContext
    path: ../mcma-libraries-dotnet/Base/Mcma.Worker/McmaWorkerRequestContext.cs
    startLine: 7
  assemblies:
  - Mcma.Worker
  namespace: Mcma.Worker
  syntax:
    content: public class McmaWorkerRequestContext
    content.vb: Public Class McmaWorkerRequestContext
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - System.Object.Mcma.Serialization.McmaJson.ToMcmaJson(System.Boolean)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Mcma.Worker.McmaWorkerRequestContext.#ctor(Mcma.Worker.McmaWorkerRequest,System.String)
  commentId: M:Mcma.Worker.McmaWorkerRequestContext.#ctor(Mcma.Worker.McmaWorkerRequest,System.String)
  id: '#ctor(Mcma.Worker.McmaWorkerRequest,System.String)'
  parent: Mcma.Worker.McmaWorkerRequestContext
  langs:
  - csharp
  - vb
  name: McmaWorkerRequestContext(McmaWorkerRequest, String)
  nameWithType: McmaWorkerRequestContext.McmaWorkerRequestContext(McmaWorkerRequest, String)
  fullName: Mcma.Worker.McmaWorkerRequestContext.McmaWorkerRequestContext(Mcma.Worker.McmaWorkerRequest, System.String)
  type: Constructor
  source:
    remote:
      path: Base/Mcma.Worker/McmaWorkerRequestContext.cs
      branch: documentation
      repo: https://github.com/ebu/mcma-libraries-dotnet.git
    id: .ctor
    path: ../mcma-libraries-dotnet/Base/Mcma.Worker/McmaWorkerRequestContext.cs
    startLine: 9
  assemblies:
  - Mcma.Worker
  namespace: Mcma.Worker
  syntax:
    content: public McmaWorkerRequestContext(McmaWorkerRequest request, string requestId)
    parameters:
    - id: request
      type: Mcma.Worker.McmaWorkerRequest
    - id: requestId
      type: System.String
    content.vb: Public Sub New(request As McmaWorkerRequest, requestId As String)
  overload: Mcma.Worker.McmaWorkerRequestContext.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mcma.Worker.McmaWorkerRequestContext.OperationName
  commentId: P:Mcma.Worker.McmaWorkerRequestContext.OperationName
  id: OperationName
  parent: Mcma.Worker.McmaWorkerRequestContext
  langs:
  - csharp
  - vb
  name: OperationName
  nameWithType: McmaWorkerRequestContext.OperationName
  fullName: Mcma.Worker.McmaWorkerRequestContext.OperationName
  type: Property
  source:
    remote:
      path: Base/Mcma.Worker/McmaWorkerRequestContext.cs
      branch: documentation
      repo: https://github.com/ebu/mcma-libraries-dotnet.git
    id: OperationName
    path: ../mcma-libraries-dotnet/Base/Mcma.Worker/McmaWorkerRequestContext.cs
    startLine: 22
  assemblies:
  - Mcma.Worker
  namespace: Mcma.Worker
  syntax:
    content: public string OperationName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property OperationName As String
  overload: Mcma.Worker.McmaWorkerRequestContext.OperationName*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Mcma.Worker.McmaWorkerRequestContext.Input
  commentId: P:Mcma.Worker.McmaWorkerRequestContext.Input
  id: Input
  parent: Mcma.Worker.McmaWorkerRequestContext
  langs:
  - csharp
  - vb
  name: Input
  nameWithType: McmaWorkerRequestContext.Input
  fullName: Mcma.Worker.McmaWorkerRequestContext.Input
  type: Property
  source:
    remote:
      path: Base/Mcma.Worker/McmaWorkerRequestContext.cs
      branch: documentation
      repo: https://github.com/ebu/mcma-libraries-dotnet.git
    id: Input
    path: ../mcma-libraries-dotnet/Base/Mcma.Worker/McmaWorkerRequestContext.cs
    startLine: 24
  assemblies:
  - Mcma.Worker
  namespace: Mcma.Worker
  syntax:
    content: public JObject Input { get; }
    parameters: []
    return:
      type: Newtonsoft.Json.Linq.JObject
    content.vb: Public ReadOnly Property Input As JObject
  overload: Mcma.Worker.McmaWorkerRequestContext.Input*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Mcma.Worker.McmaWorkerRequestContext.Tracker
  commentId: P:Mcma.Worker.McmaWorkerRequestContext.Tracker
  id: Tracker
  parent: Mcma.Worker.McmaWorkerRequestContext
  langs:
  - csharp
  - vb
  name: Tracker
  nameWithType: McmaWorkerRequestContext.Tracker
  fullName: Mcma.Worker.McmaWorkerRequestContext.Tracker
  type: Property
  source:
    remote:
      path: Base/Mcma.Worker/McmaWorkerRequestContext.cs
      branch: documentation
      repo: https://github.com/ebu/mcma-libraries-dotnet.git
    id: Tracker
    path: ../mcma-libraries-dotnet/Base/Mcma.Worker/McmaWorkerRequestContext.cs
    startLine: 26
  assemblies:
  - Mcma.Worker
  namespace: Mcma.Worker
  syntax:
    content: public McmaTracker Tracker { get; }
    parameters: []
    return:
      type: Mcma.McmaTracker
    content.vb: Public ReadOnly Property Tracker As McmaTracker
  overload: Mcma.Worker.McmaWorkerRequestContext.Tracker*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Mcma.Worker.McmaWorkerRequestContext.RequestId
  commentId: P:Mcma.Worker.McmaWorkerRequestContext.RequestId
  id: RequestId
  parent: Mcma.Worker.McmaWorkerRequestContext
  langs:
  - csharp
  - vb
  name: RequestId
  nameWithType: McmaWorkerRequestContext.RequestId
  fullName: Mcma.Worker.McmaWorkerRequestContext.RequestId
  type: Property
  source:
    remote:
      path: Base/Mcma.Worker/McmaWorkerRequestContext.cs
      branch: documentation
      repo: https://github.com/ebu/mcma-libraries-dotnet.git
    id: RequestId
    path: ../mcma-libraries-dotnet/Base/Mcma.Worker/McmaWorkerRequestContext.cs
    startLine: 28
  assemblies:
  - Mcma.Worker
  namespace: Mcma.Worker
  syntax:
    content: public string RequestId { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property RequestId As String
  overload: Mcma.Worker.McmaWorkerRequestContext.RequestId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Mcma.Worker.McmaWorkerRequestContext.Logger
  commentId: P:Mcma.Worker.McmaWorkerRequestContext.Logger
  id: Logger
  parent: Mcma.Worker.McmaWorkerRequestContext
  langs:
  - csharp
  - vb
  name: Logger
  nameWithType: McmaWorkerRequestContext.Logger
  fullName: Mcma.Worker.McmaWorkerRequestContext.Logger
  type: Property
  source:
    remote:
      path: Base/Mcma.Worker/McmaWorkerRequestContext.cs
      branch: documentation
      repo: https://github.com/ebu/mcma-libraries-dotnet.git
    id: Logger
    path: ../mcma-libraries-dotnet/Base/Mcma.Worker/McmaWorkerRequestContext.cs
    startLine: 30
  assemblies:
  - Mcma.Worker
  namespace: Mcma.Worker
  syntax:
    content: public ILogger Logger { get; }
    parameters: []
    return:
      type: Mcma.Logging.ILogger
    content.vb: Public ReadOnly Property Logger As ILogger
  overload: Mcma.Worker.McmaWorkerRequestContext.Logger*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Mcma.Worker.McmaWorkerRequestContext.GetInputAs(System.Type)
  commentId: M:Mcma.Worker.McmaWorkerRequestContext.GetInputAs(System.Type)
  id: GetInputAs(System.Type)
  parent: Mcma.Worker.McmaWorkerRequestContext
  langs:
  - csharp
  - vb
  name: GetInputAs(Type)
  nameWithType: McmaWorkerRequestContext.GetInputAs(Type)
  fullName: Mcma.Worker.McmaWorkerRequestContext.GetInputAs(System.Type)
  type: Method
  source:
    remote:
      path: Base/Mcma.Worker/McmaWorkerRequestContext.cs
      branch: documentation
      repo: https://github.com/ebu/mcma-libraries-dotnet.git
    id: GetInputAs
    path: ../mcma-libraries-dotnet/Base/Mcma.Worker/McmaWorkerRequestContext.cs
    startLine: 34
  assemblies:
  - Mcma.Worker
  namespace: Mcma.Worker
  syntax:
    content: public object GetInputAs(Type type)
    parameters:
    - id: type
      type: System.Type
    return:
      type: System.Object
    content.vb: Public Function GetInputAs(type As Type) As Object
  overload: Mcma.Worker.McmaWorkerRequestContext.GetInputAs*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mcma.Worker.McmaWorkerRequestContext.GetInputAs``1
  commentId: M:Mcma.Worker.McmaWorkerRequestContext.GetInputAs``1
  id: GetInputAs``1
  parent: Mcma.Worker.McmaWorkerRequestContext
  langs:
  - csharp
  - vb
  name: GetInputAs<T>()
  nameWithType: McmaWorkerRequestContext.GetInputAs<T>()
  fullName: Mcma.Worker.McmaWorkerRequestContext.GetInputAs<T>()
  type: Method
  source:
    remote:
      path: Base/Mcma.Worker/McmaWorkerRequestContext.cs
      branch: documentation
      repo: https://github.com/ebu/mcma-libraries-dotnet.git
    id: GetInputAs
    path: ../mcma-libraries-dotnet/Base/Mcma.Worker/McmaWorkerRequestContext.cs
    startLine: 47
  assemblies:
  - Mcma.Worker
  namespace: Mcma.Worker
  syntax:
    content: public T GetInputAs<T>()
    typeParameters:
    - id: T
    return:
      type: '{T}'
    content.vb: Public Function GetInputAs(Of T) As T
  overload: Mcma.Worker.McmaWorkerRequestContext.GetInputAs*
  nameWithType.vb: McmaWorkerRequestContext.GetInputAs(Of T)()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Mcma.Worker.McmaWorkerRequestContext.GetInputAs(Of T)()
  name.vb: GetInputAs(Of T)()
- uid: Mcma.Worker.McmaWorkerRequestContext.TryGetInputAs(System.Type,System.Object@)
  commentId: M:Mcma.Worker.McmaWorkerRequestContext.TryGetInputAs(System.Type,System.Object@)
  id: TryGetInputAs(System.Type,System.Object@)
  parent: Mcma.Worker.McmaWorkerRequestContext
  langs:
  - csharp
  - vb
  name: TryGetInputAs(Type, out Object)
  nameWithType: McmaWorkerRequestContext.TryGetInputAs(Type, out Object)
  fullName: Mcma.Worker.McmaWorkerRequestContext.TryGetInputAs(System.Type, out System.Object)
  type: Method
  source:
    remote:
      path: Base/Mcma.Worker/McmaWorkerRequestContext.cs
      branch: documentation
      repo: https://github.com/ebu/mcma-libraries-dotnet.git
    id: TryGetInputAs
    path: ../mcma-libraries-dotnet/Base/Mcma.Worker/McmaWorkerRequestContext.cs
    startLine: 49
  assemblies:
  - Mcma.Worker
  namespace: Mcma.Worker
  syntax:
    content: public bool TryGetInputAs(Type type, out object dataObject)
    parameters:
    - id: type
      type: System.Type
    - id: dataObject
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Public Function TryGetInputAs(type As Type, ByRef dataObject As Object) As Boolean
  overload: Mcma.Worker.McmaWorkerRequestContext.TryGetInputAs*
  nameWithType.vb: McmaWorkerRequestContext.TryGetInputAs(Type, ByRef Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Mcma.Worker.McmaWorkerRequestContext.TryGetInputAs(System.Type, ByRef System.Object)
  name.vb: TryGetInputAs(Type, ByRef Object)
- uid: Mcma.Worker.McmaWorkerRequestContext.TryGetInputAs``1(``0@)
  commentId: M:Mcma.Worker.McmaWorkerRequestContext.TryGetInputAs``1(``0@)
  id: TryGetInputAs``1(``0@)
  parent: Mcma.Worker.McmaWorkerRequestContext
  langs:
  - csharp
  - vb
  name: TryGetInputAs<T>(out T)
  nameWithType: McmaWorkerRequestContext.TryGetInputAs<T>(out T)
  fullName: Mcma.Worker.McmaWorkerRequestContext.TryGetInputAs<T>(out T)
  type: Method
  source:
    remote:
      path: Base/Mcma.Worker/McmaWorkerRequestContext.cs
      branch: documentation
      repo: https://github.com/ebu/mcma-libraries-dotnet.git
    id: TryGetInputAs
    path: ../mcma-libraries-dotnet/Base/Mcma.Worker/McmaWorkerRequestContext.cs
    startLine: 64
  assemblies:
  - Mcma.Worker
  namespace: Mcma.Worker
  syntax:
    content: public bool TryGetInputAs<T>(out T dataObject)
    parameters:
    - id: dataObject
      type: '{T}'
    typeParameters:
    - id: T
    return:
      type: System.Boolean
    content.vb: Public Function TryGetInputAs(Of T)(ByRef dataObject As T) As Boolean
  overload: Mcma.Worker.McmaWorkerRequestContext.TryGetInputAs*
  nameWithType.vb: McmaWorkerRequestContext.TryGetInputAs(Of T)(ByRef T)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Mcma.Worker.McmaWorkerRequestContext.TryGetInputAs(Of T)(ByRef T)
  name.vb: TryGetInputAs(Of T)(ByRef T)
references:
- uid: Mcma.Worker
  commentId: N:Mcma.Worker
  name: Mcma.Worker
  nameWithType: Mcma.Worker
  fullName: Mcma.Worker
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Mcma.Serialization.McmaJson.ToMcmaJson(System.Boolean)
  commentId: M:Mcma.Serialization.McmaJson.ToMcmaJson(System.Object,System.Boolean)
  parent: Mcma.Serialization.McmaJson
  definition: Mcma.Serialization.McmaJson.ToMcmaJson(System.Object,System.Boolean)
  name: ToMcmaJson(Boolean)
  nameWithType: McmaJson.ToMcmaJson(Boolean)
  fullName: Mcma.Serialization.McmaJson.ToMcmaJson(System.Boolean)
  spec.csharp:
  - uid: Mcma.Serialization.McmaJson.ToMcmaJson(System.Boolean)
    name: ToMcmaJson
    nameWithType: McmaJson.ToMcmaJson
    fullName: Mcma.Serialization.McmaJson.ToMcmaJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mcma.Serialization.McmaJson.ToMcmaJson(System.Boolean)
    name: ToMcmaJson
    nameWithType: McmaJson.ToMcmaJson
    fullName: Mcma.Serialization.McmaJson.ToMcmaJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Mcma.Serialization.McmaJson.ToMcmaJson(System.Object,System.Boolean)
  commentId: M:Mcma.Serialization.McmaJson.ToMcmaJson(System.Object,System.Boolean)
  isExternal: true
  name: ToMcmaJson(Object, Boolean)
  nameWithType: McmaJson.ToMcmaJson(Object, Boolean)
  fullName: Mcma.Serialization.McmaJson.ToMcmaJson(System.Object, System.Boolean)
  spec.csharp:
  - uid: Mcma.Serialization.McmaJson.ToMcmaJson(System.Object,System.Boolean)
    name: ToMcmaJson
    nameWithType: McmaJson.ToMcmaJson
    fullName: Mcma.Serialization.McmaJson.ToMcmaJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mcma.Serialization.McmaJson.ToMcmaJson(System.Object,System.Boolean)
    name: ToMcmaJson
    nameWithType: McmaJson.ToMcmaJson
    fullName: Mcma.Serialization.McmaJson.ToMcmaJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mcma.Serialization.McmaJson
  commentId: T:Mcma.Serialization.McmaJson
  parent: Mcma.Serialization
  name: McmaJson
  nameWithType: McmaJson
  fullName: Mcma.Serialization.McmaJson
- uid: Mcma.Serialization
  commentId: N:Mcma.Serialization
  name: Mcma.Serialization
  nameWithType: Mcma.Serialization
  fullName: Mcma.Serialization
- uid: Mcma.Worker.McmaWorkerRequestContext.#ctor*
  commentId: Overload:Mcma.Worker.McmaWorkerRequestContext.#ctor
  name: McmaWorkerRequestContext
  nameWithType: McmaWorkerRequestContext.McmaWorkerRequestContext
  fullName: Mcma.Worker.McmaWorkerRequestContext.McmaWorkerRequestContext
- uid: Mcma.Worker.McmaWorkerRequest
  commentId: T:Mcma.Worker.McmaWorkerRequest
  parent: Mcma.Worker
  name: McmaWorkerRequest
  nameWithType: McmaWorkerRequest
  fullName: Mcma.Worker.McmaWorkerRequest
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Mcma.Worker.McmaWorkerRequestContext.OperationName*
  commentId: Overload:Mcma.Worker.McmaWorkerRequestContext.OperationName
  name: OperationName
  nameWithType: McmaWorkerRequestContext.OperationName
  fullName: Mcma.Worker.McmaWorkerRequestContext.OperationName
- uid: Mcma.Worker.McmaWorkerRequestContext.Input*
  commentId: Overload:Mcma.Worker.McmaWorkerRequestContext.Input
  name: Input
  nameWithType: McmaWorkerRequestContext.Input
  fullName: Mcma.Worker.McmaWorkerRequestContext.Input
- uid: Newtonsoft.Json.Linq.JObject
  commentId: T:Newtonsoft.Json.Linq.JObject
  parent: Newtonsoft.Json.Linq
  isExternal: true
  name: JObject
  nameWithType: JObject
  fullName: Newtonsoft.Json.Linq.JObject
- uid: Newtonsoft.Json.Linq
  commentId: N:Newtonsoft.Json.Linq
  isExternal: true
  name: Newtonsoft.Json.Linq
  nameWithType: Newtonsoft.Json.Linq
  fullName: Newtonsoft.Json.Linq
- uid: Mcma.Worker.McmaWorkerRequestContext.Tracker*
  commentId: Overload:Mcma.Worker.McmaWorkerRequestContext.Tracker
  name: Tracker
  nameWithType: McmaWorkerRequestContext.Tracker
  fullName: Mcma.Worker.McmaWorkerRequestContext.Tracker
- uid: Mcma.McmaTracker
  commentId: T:Mcma.McmaTracker
  parent: Mcma
  name: McmaTracker
  nameWithType: McmaTracker
  fullName: Mcma.McmaTracker
- uid: Mcma
  commentId: N:Mcma
  name: Mcma
  nameWithType: Mcma
  fullName: Mcma
- uid: Mcma.Worker.McmaWorkerRequestContext.RequestId*
  commentId: Overload:Mcma.Worker.McmaWorkerRequestContext.RequestId
  name: RequestId
  nameWithType: McmaWorkerRequestContext.RequestId
  fullName: Mcma.Worker.McmaWorkerRequestContext.RequestId
- uid: Mcma.Worker.McmaWorkerRequestContext.Logger*
  commentId: Overload:Mcma.Worker.McmaWorkerRequestContext.Logger
  name: Logger
  nameWithType: McmaWorkerRequestContext.Logger
  fullName: Mcma.Worker.McmaWorkerRequestContext.Logger
- uid: Mcma.Logging.ILogger
  commentId: T:Mcma.Logging.ILogger
  parent: Mcma.Logging
  name: ILogger
  nameWithType: ILogger
  fullName: Mcma.Logging.ILogger
- uid: Mcma.Logging
  commentId: N:Mcma.Logging
  name: Mcma.Logging
  nameWithType: Mcma.Logging
  fullName: Mcma.Logging
- uid: Mcma.Worker.McmaWorkerRequestContext.GetInputAs*
  commentId: Overload:Mcma.Worker.McmaWorkerRequestContext.GetInputAs
  name: GetInputAs
  nameWithType: McmaWorkerRequestContext.GetInputAs
  fullName: Mcma.Worker.McmaWorkerRequestContext.GetInputAs
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: Mcma.Worker.McmaWorkerRequestContext.TryGetInputAs*
  commentId: Overload:Mcma.Worker.McmaWorkerRequestContext.TryGetInputAs
  name: TryGetInputAs
  nameWithType: McmaWorkerRequestContext.TryGetInputAs
  fullName: Mcma.Worker.McmaWorkerRequestContext.TryGetInputAs
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
