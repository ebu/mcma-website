### YamlMime:ManagedReference
items:
- uid: Mcma.Azure.Functions.Worker.McmaAzureFunctionWorkerServiceCollectionExtensions
  commentId: T:Mcma.Azure.Functions.Worker.McmaAzureFunctionWorkerServiceCollectionExtensions
  id: McmaAzureFunctionWorkerServiceCollectionExtensions
  parent: Mcma.Azure.Functions.Worker
  children:
  - Mcma.Azure.Functions.Worker.McmaAzureFunctionWorkerServiceCollectionExtensions.AddMcmaAzureFunctionJobAssignmentWorker``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.String,System.Action{Mcma.Worker.ProcessJobAssignmentOperationBuilder{``0}},System.Action{Mcma.Azure.CosmosDb.CosmosDbTableOptions},System.Action{Mcma.Worker.McmaWorkerBuilder})
  - Mcma.Azure.Functions.Worker.McmaAzureFunctionWorkerServiceCollectionExtensions.AddMcmaAzureFunctionWorker(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.String,System.Action{Mcma.Worker.McmaWorkerBuilder},System.Action{Mcma.Azure.CosmosDb.CosmosDbTableOptions})
  langs:
  - csharp
  - vb
  name: McmaAzureFunctionWorkerServiceCollectionExtensions
  nameWithType: McmaAzureFunctionWorkerServiceCollectionExtensions
  fullName: Mcma.Azure.Functions.Worker.McmaAzureFunctionWorkerServiceCollectionExtensions
  type: Class
  source:
    remote:
      path: Azure/Mcma.Azure.Functions.Worker/McmaAzureFunctionWorkerServiceCollectionExtensions.cs
      branch: documentation
      repo: https://github.com/ebu/mcma-libraries-dotnet.git
    id: McmaAzureFunctionWorkerServiceCollectionExtensions
    path: ../mcma-libraries-dotnet/Azure/Mcma.Azure.Functions.Worker/McmaAzureFunctionWorkerServiceCollectionExtensions.cs
    startLine: 12
  assemblies:
  - Mcma.Azure.Functions.Worker
  namespace: Mcma.Azure.Functions.Worker
  syntax:
    content: public static class McmaAzureFunctionWorkerServiceCollectionExtensions
    content.vb: Public Module McmaAzureFunctionWorkerServiceCollectionExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Mcma.Azure.Functions.Worker.McmaAzureFunctionWorkerServiceCollectionExtensions.AddMcmaAzureFunctionWorker(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.String,System.Action{Mcma.Worker.McmaWorkerBuilder},System.Action{Mcma.Azure.CosmosDb.CosmosDbTableOptions})
  commentId: M:Mcma.Azure.Functions.Worker.McmaAzureFunctionWorkerServiceCollectionExtensions.AddMcmaAzureFunctionWorker(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.String,System.Action{Mcma.Worker.McmaWorkerBuilder},System.Action{Mcma.Azure.CosmosDb.CosmosDbTableOptions})
  id: AddMcmaAzureFunctionWorker(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.String,System.Action{Mcma.Worker.McmaWorkerBuilder},System.Action{Mcma.Azure.CosmosDb.CosmosDbTableOptions})
  isExtensionMethod: true
  parent: Mcma.Azure.Functions.Worker.McmaAzureFunctionWorkerServiceCollectionExtensions
  langs:
  - csharp
  - vb
  name: AddMcmaAzureFunctionWorker(IServiceCollection, String, Action<McmaWorkerBuilder>, Action<CosmosDbTableOptions>)
  nameWithType: McmaAzureFunctionWorkerServiceCollectionExtensions.AddMcmaAzureFunctionWorker(IServiceCollection, String, Action<McmaWorkerBuilder>, Action<CosmosDbTableOptions>)
  fullName: Mcma.Azure.Functions.Worker.McmaAzureFunctionWorkerServiceCollectionExtensions.AddMcmaAzureFunctionWorker(Microsoft.Extensions.DependencyInjection.IServiceCollection, System.String, System.Action<Mcma.Worker.McmaWorkerBuilder>, System.Action<Mcma.Azure.CosmosDb.CosmosDbTableOptions>)
  type: Method
  source:
    remote:
      path: Azure/Mcma.Azure.Functions.Worker/McmaAzureFunctionWorkerServiceCollectionExtensions.cs
      branch: documentation
      repo: https://github.com/ebu/mcma-libraries-dotnet.git
    id: AddMcmaAzureFunctionWorker
    path: ../mcma-libraries-dotnet/Azure/Mcma.Azure.Functions.Worker/McmaAzureFunctionWorkerServiceCollectionExtensions.cs
    startLine: 16
  assemblies:
  - Mcma.Azure.Functions.Worker
  namespace: Mcma.Azure.Functions.Worker
  syntax:
    content: public static IServiceCollection AddMcmaAzureFunctionWorker(this IServiceCollection services, string applicationName, Action<McmaWorkerBuilder> buildWorker, Action<CosmosDbTableOptions> configureCosmosDb = null)
    parameters:
    - id: services
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
    - id: applicationName
      type: System.String
    - id: buildWorker
      type: System.Action{Mcma.Worker.McmaWorkerBuilder}
    - id: configureCosmosDb
      type: System.Action{Mcma.Azure.CosmosDb.CosmosDbTableOptions}
    return:
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AddMcmaAzureFunctionWorker(services As IServiceCollection, applicationName As String, buildWorker As Action(Of McmaWorkerBuilder), configureCosmosDb As Action(Of CosmosDbTableOptions) = Nothing) As IServiceCollection
  overload: Mcma.Azure.Functions.Worker.McmaAzureFunctionWorkerServiceCollectionExtensions.AddMcmaAzureFunctionWorker*
  nameWithType.vb: McmaAzureFunctionWorkerServiceCollectionExtensions.AddMcmaAzureFunctionWorker(IServiceCollection, String, Action(Of McmaWorkerBuilder), Action(Of CosmosDbTableOptions))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Mcma.Azure.Functions.Worker.McmaAzureFunctionWorkerServiceCollectionExtensions.AddMcmaAzureFunctionWorker(Microsoft.Extensions.DependencyInjection.IServiceCollection, System.String, System.Action(Of Mcma.Worker.McmaWorkerBuilder), System.Action(Of Mcma.Azure.CosmosDb.CosmosDbTableOptions))
  name.vb: AddMcmaAzureFunctionWorker(IServiceCollection, String, Action(Of McmaWorkerBuilder), Action(Of CosmosDbTableOptions))
- uid: Mcma.Azure.Functions.Worker.McmaAzureFunctionWorkerServiceCollectionExtensions.AddMcmaAzureFunctionJobAssignmentWorker``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.String,System.Action{Mcma.Worker.ProcessJobAssignmentOperationBuilder{``0}},System.Action{Mcma.Azure.CosmosDb.CosmosDbTableOptions},System.Action{Mcma.Worker.McmaWorkerBuilder})
  commentId: M:Mcma.Azure.Functions.Worker.McmaAzureFunctionWorkerServiceCollectionExtensions.AddMcmaAzureFunctionJobAssignmentWorker``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.String,System.Action{Mcma.Worker.ProcessJobAssignmentOperationBuilder{``0}},System.Action{Mcma.Azure.CosmosDb.CosmosDbTableOptions},System.Action{Mcma.Worker.McmaWorkerBuilder})
  id: AddMcmaAzureFunctionJobAssignmentWorker``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.String,System.Action{Mcma.Worker.ProcessJobAssignmentOperationBuilder{``0}},System.Action{Mcma.Azure.CosmosDb.CosmosDbTableOptions},System.Action{Mcma.Worker.McmaWorkerBuilder})
  isExtensionMethod: true
  parent: Mcma.Azure.Functions.Worker.McmaAzureFunctionWorkerServiceCollectionExtensions
  langs:
  - csharp
  - vb
  name: AddMcmaAzureFunctionJobAssignmentWorker<TJob>(IServiceCollection, String, Action<ProcessJobAssignmentOperationBuilder<TJob>>, Action<CosmosDbTableOptions>, Action<McmaWorkerBuilder>)
  nameWithType: McmaAzureFunctionWorkerServiceCollectionExtensions.AddMcmaAzureFunctionJobAssignmentWorker<TJob>(IServiceCollection, String, Action<ProcessJobAssignmentOperationBuilder<TJob>>, Action<CosmosDbTableOptions>, Action<McmaWorkerBuilder>)
  fullName: Mcma.Azure.Functions.Worker.McmaAzureFunctionWorkerServiceCollectionExtensions.AddMcmaAzureFunctionJobAssignmentWorker<TJob>(Microsoft.Extensions.DependencyInjection.IServiceCollection, System.String, System.Action<Mcma.Worker.ProcessJobAssignmentOperationBuilder<TJob>>, System.Action<Mcma.Azure.CosmosDb.CosmosDbTableOptions>, System.Action<Mcma.Worker.McmaWorkerBuilder>)
  type: Method
  source:
    remote:
      path: Azure/Mcma.Azure.Functions.Worker/McmaAzureFunctionWorkerServiceCollectionExtensions.cs
      branch: documentation
      repo: https://github.com/ebu/mcma-libraries-dotnet.git
    id: AddMcmaAzureFunctionJobAssignmentWorker
    path: ../mcma-libraries-dotnet/Azure/Mcma.Azure.Functions.Worker/McmaAzureFunctionWorkerServiceCollectionExtensions.cs
    startLine: 26
  assemblies:
  - Mcma.Azure.Functions.Worker
  namespace: Mcma.Azure.Functions.Worker
  syntax:
    content: >-
      public static IServiceCollection AddMcmaAzureFunctionJobAssignmentWorker<TJob>(this IServiceCollection services, string applicationName, Action<ProcessJobAssignmentOperationBuilder<TJob>> addProfiles, Action<CosmosDbTableOptions> configureCosmosDb = null, Action<McmaWorkerBuilder> addAdditionalOperations = null)

          where TJob : Job
    parameters:
    - id: services
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
    - id: applicationName
      type: System.String
    - id: addProfiles
      type: System.Action{Mcma.Worker.ProcessJobAssignmentOperationBuilder{{TJob}}}
    - id: configureCosmosDb
      type: System.Action{Mcma.Azure.CosmosDb.CosmosDbTableOptions}
    - id: addAdditionalOperations
      type: System.Action{Mcma.Worker.McmaWorkerBuilder}
    typeParameters:
    - id: TJob
    return:
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AddMcmaAzureFunctionJobAssignmentWorker(Of TJob As Job)(services As IServiceCollection, applicationName As String, addProfiles As Action(Of ProcessJobAssignmentOperationBuilder(Of TJob)), configureCosmosDb As Action(Of CosmosDbTableOptions) = Nothing, addAdditionalOperations As Action(Of McmaWorkerBuilder) = Nothing) As IServiceCollection
  overload: Mcma.Azure.Functions.Worker.McmaAzureFunctionWorkerServiceCollectionExtensions.AddMcmaAzureFunctionJobAssignmentWorker*
  nameWithType.vb: McmaAzureFunctionWorkerServiceCollectionExtensions.AddMcmaAzureFunctionJobAssignmentWorker(Of TJob)(IServiceCollection, String, Action(Of ProcessJobAssignmentOperationBuilder(Of TJob)), Action(Of CosmosDbTableOptions), Action(Of McmaWorkerBuilder))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Mcma.Azure.Functions.Worker.McmaAzureFunctionWorkerServiceCollectionExtensions.AddMcmaAzureFunctionJobAssignmentWorker(Of TJob)(Microsoft.Extensions.DependencyInjection.IServiceCollection, System.String, System.Action(Of Mcma.Worker.ProcessJobAssignmentOperationBuilder(Of TJob)), System.Action(Of Mcma.Azure.CosmosDb.CosmosDbTableOptions), System.Action(Of Mcma.Worker.McmaWorkerBuilder))
  name.vb: AddMcmaAzureFunctionJobAssignmentWorker(Of TJob)(IServiceCollection, String, Action(Of ProcessJobAssignmentOperationBuilder(Of TJob)), Action(Of CosmosDbTableOptions), Action(Of McmaWorkerBuilder))
references:
- uid: Mcma.Azure.Functions.Worker
  commentId: N:Mcma.Azure.Functions.Worker
  name: Mcma.Azure.Functions.Worker
  nameWithType: Mcma.Azure.Functions.Worker
  fullName: Mcma.Azure.Functions.Worker
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Mcma.Azure.Functions.Worker.McmaAzureFunctionWorkerServiceCollectionExtensions.AddMcmaAzureFunctionWorker*
  commentId: Overload:Mcma.Azure.Functions.Worker.McmaAzureFunctionWorkerServiceCollectionExtensions.AddMcmaAzureFunctionWorker
  name: AddMcmaAzureFunctionWorker
  nameWithType: McmaAzureFunctionWorkerServiceCollectionExtensions.AddMcmaAzureFunctionWorker
  fullName: Mcma.Azure.Functions.Worker.McmaAzureFunctionWorkerServiceCollectionExtensions.AddMcmaAzureFunctionWorker
- uid: Microsoft.Extensions.DependencyInjection.IServiceCollection
  commentId: T:Microsoft.Extensions.DependencyInjection.IServiceCollection
  parent: Microsoft.Extensions.DependencyInjection
  isExternal: true
  name: IServiceCollection
  nameWithType: IServiceCollection
  fullName: Microsoft.Extensions.DependencyInjection.IServiceCollection
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Action{Mcma.Worker.McmaWorkerBuilder}
  commentId: T:System.Action{Mcma.Worker.McmaWorkerBuilder}
  parent: System
  definition: System.Action`1
  name: Action<McmaWorkerBuilder>
  nameWithType: Action<McmaWorkerBuilder>
  fullName: System.Action<Mcma.Worker.McmaWorkerBuilder>
  nameWithType.vb: Action(Of McmaWorkerBuilder)
  fullName.vb: System.Action(Of Mcma.Worker.McmaWorkerBuilder)
  name.vb: Action(Of McmaWorkerBuilder)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mcma.Worker.McmaWorkerBuilder
    name: McmaWorkerBuilder
    nameWithType: McmaWorkerBuilder
    fullName: Mcma.Worker.McmaWorkerBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mcma.Worker.McmaWorkerBuilder
    name: McmaWorkerBuilder
    nameWithType: McmaWorkerBuilder
    fullName: Mcma.Worker.McmaWorkerBuilder
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action{Mcma.Azure.CosmosDb.CosmosDbTableOptions}
  commentId: T:System.Action{Mcma.Azure.CosmosDb.CosmosDbTableOptions}
  parent: System
  definition: System.Action`1
  name: Action<CosmosDbTableOptions>
  nameWithType: Action<CosmosDbTableOptions>
  fullName: System.Action<Mcma.Azure.CosmosDb.CosmosDbTableOptions>
  nameWithType.vb: Action(Of CosmosDbTableOptions)
  fullName.vb: System.Action(Of Mcma.Azure.CosmosDb.CosmosDbTableOptions)
  name.vb: Action(Of CosmosDbTableOptions)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mcma.Azure.CosmosDb.CosmosDbTableOptions
    name: CosmosDbTableOptions
    nameWithType: CosmosDbTableOptions
    fullName: Mcma.Azure.CosmosDb.CosmosDbTableOptions
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mcma.Azure.CosmosDb.CosmosDbTableOptions
    name: CosmosDbTableOptions
    nameWithType: CosmosDbTableOptions
    fullName: Mcma.Azure.CosmosDb.CosmosDbTableOptions
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.DependencyInjection
  commentId: N:Microsoft.Extensions.DependencyInjection
  isExternal: true
  name: Microsoft.Extensions.DependencyInjection
  nameWithType: Microsoft.Extensions.DependencyInjection
  fullName: Microsoft.Extensions.DependencyInjection
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Mcma.Azure.Functions.Worker.McmaAzureFunctionWorkerServiceCollectionExtensions.AddMcmaAzureFunctionJobAssignmentWorker*
  commentId: Overload:Mcma.Azure.Functions.Worker.McmaAzureFunctionWorkerServiceCollectionExtensions.AddMcmaAzureFunctionJobAssignmentWorker
  name: AddMcmaAzureFunctionJobAssignmentWorker
  nameWithType: McmaAzureFunctionWorkerServiceCollectionExtensions.AddMcmaAzureFunctionJobAssignmentWorker
  fullName: Mcma.Azure.Functions.Worker.McmaAzureFunctionWorkerServiceCollectionExtensions.AddMcmaAzureFunctionJobAssignmentWorker
- uid: System.Action{Mcma.Worker.ProcessJobAssignmentOperationBuilder{{TJob}}}
  commentId: T:System.Action{Mcma.Worker.ProcessJobAssignmentOperationBuilder{``0}}
  parent: System
  definition: System.Action`1
  name: Action<ProcessJobAssignmentOperationBuilder<TJob>>
  nameWithType: Action<ProcessJobAssignmentOperationBuilder<TJob>>
  fullName: System.Action<Mcma.Worker.ProcessJobAssignmentOperationBuilder<TJob>>
  nameWithType.vb: Action(Of ProcessJobAssignmentOperationBuilder(Of TJob))
  fullName.vb: System.Action(Of Mcma.Worker.ProcessJobAssignmentOperationBuilder(Of TJob))
  name.vb: Action(Of ProcessJobAssignmentOperationBuilder(Of TJob))
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mcma.Worker.ProcessJobAssignmentOperationBuilder`1
    name: ProcessJobAssignmentOperationBuilder
    nameWithType: ProcessJobAssignmentOperationBuilder
    fullName: Mcma.Worker.ProcessJobAssignmentOperationBuilder
  - name: <
    nameWithType: <
    fullName: <
  - name: TJob
    nameWithType: TJob
    fullName: TJob
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mcma.Worker.ProcessJobAssignmentOperationBuilder`1
    name: ProcessJobAssignmentOperationBuilder
    nameWithType: ProcessJobAssignmentOperationBuilder
    fullName: Mcma.Worker.ProcessJobAssignmentOperationBuilder
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TJob
    nameWithType: TJob
    fullName: TJob
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
