### YamlMime:ManagedReference
items:
- uid: Mcma.Aws.Functions.ApiHandler.McmaLambdaWorkerCollectionExtensions
  commentId: T:Mcma.Aws.Functions.ApiHandler.McmaLambdaWorkerCollectionExtensions
  id: McmaLambdaWorkerCollectionExtensions
  parent: Mcma.Aws.Functions.ApiHandler
  children:
  - Mcma.Aws.Functions.ApiHandler.McmaLambdaWorkerCollectionExtensions.AddMcmaAwsLambdaJobAssignmentWorker``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.String,System.Action{Mcma.Worker.ProcessJobAssignmentOperationBuilder{``0}},System.String,System.Action{Mcma.Aws.DynamoDb.DynamoDbTableOptions},System.Action{Mcma.Worker.McmaWorkerBuilder})
  - Mcma.Aws.Functions.ApiHandler.McmaLambdaWorkerCollectionExtensions.AddMcmaAwsLambdaWorker(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.String,System.Action{Mcma.Worker.McmaWorkerBuilder},System.String,System.Action{Mcma.Aws.DynamoDb.DynamoDbTableOptions})
  langs:
  - csharp
  - vb
  name: McmaLambdaWorkerCollectionExtensions
  nameWithType: McmaLambdaWorkerCollectionExtensions
  fullName: Mcma.Aws.Functions.ApiHandler.McmaLambdaWorkerCollectionExtensions
  type: Class
  source:
    remote:
      path: AWS/Mcma.Aws.Functions.Worker/McmaLambdaWorkerCollectionExtensions.cs
      branch: documentation
      repo: https://github.com/ebu/mcma-libraries-dotnet.git
    id: McmaLambdaWorkerCollectionExtensions
    path: ../mcma-libraries-dotnet/AWS/Mcma.Aws.Functions.Worker/McmaLambdaWorkerCollectionExtensions.cs
    startLine: 12
  assemblies:
  - Mcma.Aws.Functions.Worker
  namespace: Mcma.Aws.Functions.ApiHandler
  syntax:
    content: public static class McmaLambdaWorkerCollectionExtensions
    content.vb: Public Module McmaLambdaWorkerCollectionExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Mcma.Aws.Functions.ApiHandler.McmaLambdaWorkerCollectionExtensions.AddMcmaAwsLambdaWorker(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.String,System.Action{Mcma.Worker.McmaWorkerBuilder},System.String,System.Action{Mcma.Aws.DynamoDb.DynamoDbTableOptions})
  commentId: M:Mcma.Aws.Functions.ApiHandler.McmaLambdaWorkerCollectionExtensions.AddMcmaAwsLambdaWorker(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.String,System.Action{Mcma.Worker.McmaWorkerBuilder},System.String,System.Action{Mcma.Aws.DynamoDb.DynamoDbTableOptions})
  id: AddMcmaAwsLambdaWorker(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.String,System.Action{Mcma.Worker.McmaWorkerBuilder},System.String,System.Action{Mcma.Aws.DynamoDb.DynamoDbTableOptions})
  isExtensionMethod: true
  parent: Mcma.Aws.Functions.ApiHandler.McmaLambdaWorkerCollectionExtensions
  langs:
  - csharp
  - vb
  name: AddMcmaAwsLambdaWorker(IServiceCollection, String, Action<McmaWorkerBuilder>, String, Action<DynamoDbTableOptions>)
  nameWithType: McmaLambdaWorkerCollectionExtensions.AddMcmaAwsLambdaWorker(IServiceCollection, String, Action<McmaWorkerBuilder>, String, Action<DynamoDbTableOptions>)
  fullName: Mcma.Aws.Functions.ApiHandler.McmaLambdaWorkerCollectionExtensions.AddMcmaAwsLambdaWorker(Microsoft.Extensions.DependencyInjection.IServiceCollection, System.String, System.Action<Mcma.Worker.McmaWorkerBuilder>, System.String, System.Action<Mcma.Aws.DynamoDb.DynamoDbTableOptions>)
  type: Method
  source:
    remote:
      path: AWS/Mcma.Aws.Functions.Worker/McmaLambdaWorkerCollectionExtensions.cs
      branch: documentation
      repo: https://github.com/ebu/mcma-libraries-dotnet.git
    id: AddMcmaAwsLambdaWorker
    path: ../mcma-libraries-dotnet/AWS/Mcma.Aws.Functions.Worker/McmaLambdaWorkerCollectionExtensions.cs
    startLine: 16
  assemblies:
  - Mcma.Aws.Functions.Worker
  namespace: Mcma.Aws.Functions.ApiHandler
  syntax:
    content: public static IServiceCollection AddMcmaAwsLambdaWorker(this IServiceCollection services, string applicationName, Action<McmaWorkerBuilder> buildWorker, string logGroupName = null, Action<DynamoDbTableOptions> configureDynamoDb = null)
    parameters:
    - id: services
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
    - id: applicationName
      type: System.String
    - id: buildWorker
      type: System.Action{Mcma.Worker.McmaWorkerBuilder}
    - id: logGroupName
      type: System.String
    - id: configureDynamoDb
      type: System.Action{Mcma.Aws.DynamoDb.DynamoDbTableOptions}
    return:
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AddMcmaAwsLambdaWorker(services As IServiceCollection, applicationName As String, buildWorker As Action(Of McmaWorkerBuilder), logGroupName As String = Nothing, configureDynamoDb As Action(Of DynamoDbTableOptions) = Nothing) As IServiceCollection
  overload: Mcma.Aws.Functions.ApiHandler.McmaLambdaWorkerCollectionExtensions.AddMcmaAwsLambdaWorker*
  nameWithType.vb: McmaLambdaWorkerCollectionExtensions.AddMcmaAwsLambdaWorker(IServiceCollection, String, Action(Of McmaWorkerBuilder), String, Action(Of DynamoDbTableOptions))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Mcma.Aws.Functions.ApiHandler.McmaLambdaWorkerCollectionExtensions.AddMcmaAwsLambdaWorker(Microsoft.Extensions.DependencyInjection.IServiceCollection, System.String, System.Action(Of Mcma.Worker.McmaWorkerBuilder), System.String, System.Action(Of Mcma.Aws.DynamoDb.DynamoDbTableOptions))
  name.vb: AddMcmaAwsLambdaWorker(IServiceCollection, String, Action(Of McmaWorkerBuilder), String, Action(Of DynamoDbTableOptions))
- uid: Mcma.Aws.Functions.ApiHandler.McmaLambdaWorkerCollectionExtensions.AddMcmaAwsLambdaJobAssignmentWorker``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.String,System.Action{Mcma.Worker.ProcessJobAssignmentOperationBuilder{``0}},System.String,System.Action{Mcma.Aws.DynamoDb.DynamoDbTableOptions},System.Action{Mcma.Worker.McmaWorkerBuilder})
  commentId: M:Mcma.Aws.Functions.ApiHandler.McmaLambdaWorkerCollectionExtensions.AddMcmaAwsLambdaJobAssignmentWorker``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.String,System.Action{Mcma.Worker.ProcessJobAssignmentOperationBuilder{``0}},System.String,System.Action{Mcma.Aws.DynamoDb.DynamoDbTableOptions},System.Action{Mcma.Worker.McmaWorkerBuilder})
  id: AddMcmaAwsLambdaJobAssignmentWorker``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.String,System.Action{Mcma.Worker.ProcessJobAssignmentOperationBuilder{``0}},System.String,System.Action{Mcma.Aws.DynamoDb.DynamoDbTableOptions},System.Action{Mcma.Worker.McmaWorkerBuilder})
  isExtensionMethod: true
  parent: Mcma.Aws.Functions.ApiHandler.McmaLambdaWorkerCollectionExtensions
  langs:
  - csharp
  - vb
  name: AddMcmaAwsLambdaJobAssignmentWorker<TJob>(IServiceCollection, String, Action<ProcessJobAssignmentOperationBuilder<TJob>>, String, Action<DynamoDbTableOptions>, Action<McmaWorkerBuilder>)
  nameWithType: McmaLambdaWorkerCollectionExtensions.AddMcmaAwsLambdaJobAssignmentWorker<TJob>(IServiceCollection, String, Action<ProcessJobAssignmentOperationBuilder<TJob>>, String, Action<DynamoDbTableOptions>, Action<McmaWorkerBuilder>)
  fullName: Mcma.Aws.Functions.ApiHandler.McmaLambdaWorkerCollectionExtensions.AddMcmaAwsLambdaJobAssignmentWorker<TJob>(Microsoft.Extensions.DependencyInjection.IServiceCollection, System.String, System.Action<Mcma.Worker.ProcessJobAssignmentOperationBuilder<TJob>>, System.String, System.Action<Mcma.Aws.DynamoDb.DynamoDbTableOptions>, System.Action<Mcma.Worker.McmaWorkerBuilder>)
  type: Method
  source:
    remote:
      path: AWS/Mcma.Aws.Functions.Worker/McmaLambdaWorkerCollectionExtensions.cs
      branch: documentation
      repo: https://github.com/ebu/mcma-libraries-dotnet.git
    id: AddMcmaAwsLambdaJobAssignmentWorker
    path: ../mcma-libraries-dotnet/AWS/Mcma.Aws.Functions.Worker/McmaLambdaWorkerCollectionExtensions.cs
    startLine: 26
  assemblies:
  - Mcma.Aws.Functions.Worker
  namespace: Mcma.Aws.Functions.ApiHandler
  syntax:
    content: >-
      public static IServiceCollection AddMcmaAwsLambdaJobAssignmentWorker<TJob>(this IServiceCollection services, string applicationName, Action<ProcessJobAssignmentOperationBuilder<TJob>> addProfiles, string logGroupName = null, Action<DynamoDbTableOptions> configureDynamoDb = null, Action<McmaWorkerBuilder> addAdditionalOperations = null)
          where TJob : Job
    parameters:
    - id: services
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
    - id: applicationName
      type: System.String
    - id: addProfiles
      type: System.Action{Mcma.Worker.ProcessJobAssignmentOperationBuilder{{TJob}}}
    - id: logGroupName
      type: System.String
    - id: configureDynamoDb
      type: System.Action{Mcma.Aws.DynamoDb.DynamoDbTableOptions}
    - id: addAdditionalOperations
      type: System.Action{Mcma.Worker.McmaWorkerBuilder}
    typeParameters:
    - id: TJob
    return:
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AddMcmaAwsLambdaJobAssignmentWorker(Of TJob As Job)(services As IServiceCollection, applicationName As String, addProfiles As Action(Of ProcessJobAssignmentOperationBuilder(Of TJob)), logGroupName As String = Nothing, configureDynamoDb As Action(Of DynamoDbTableOptions) = Nothing, addAdditionalOperations As Action(Of McmaWorkerBuilder) = Nothing) As IServiceCollection
  overload: Mcma.Aws.Functions.ApiHandler.McmaLambdaWorkerCollectionExtensions.AddMcmaAwsLambdaJobAssignmentWorker*
  nameWithType.vb: McmaLambdaWorkerCollectionExtensions.AddMcmaAwsLambdaJobAssignmentWorker(Of TJob)(IServiceCollection, String, Action(Of ProcessJobAssignmentOperationBuilder(Of TJob)), String, Action(Of DynamoDbTableOptions), Action(Of McmaWorkerBuilder))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Mcma.Aws.Functions.ApiHandler.McmaLambdaWorkerCollectionExtensions.AddMcmaAwsLambdaJobAssignmentWorker(Of TJob)(Microsoft.Extensions.DependencyInjection.IServiceCollection, System.String, System.Action(Of Mcma.Worker.ProcessJobAssignmentOperationBuilder(Of TJob)), System.String, System.Action(Of Mcma.Aws.DynamoDb.DynamoDbTableOptions), System.Action(Of Mcma.Worker.McmaWorkerBuilder))
  name.vb: AddMcmaAwsLambdaJobAssignmentWorker(Of TJob)(IServiceCollection, String, Action(Of ProcessJobAssignmentOperationBuilder(Of TJob)), String, Action(Of DynamoDbTableOptions), Action(Of McmaWorkerBuilder))
references:
- uid: Mcma.Aws.Functions.ApiHandler
  commentId: N:Mcma.Aws.Functions.ApiHandler
  name: Mcma.Aws.Functions.ApiHandler
  nameWithType: Mcma.Aws.Functions.ApiHandler
  fullName: Mcma.Aws.Functions.ApiHandler
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Mcma.Aws.Functions.ApiHandler.McmaLambdaWorkerCollectionExtensions.AddMcmaAwsLambdaWorker*
  commentId: Overload:Mcma.Aws.Functions.ApiHandler.McmaLambdaWorkerCollectionExtensions.AddMcmaAwsLambdaWorker
  name: AddMcmaAwsLambdaWorker
  nameWithType: McmaLambdaWorkerCollectionExtensions.AddMcmaAwsLambdaWorker
  fullName: Mcma.Aws.Functions.ApiHandler.McmaLambdaWorkerCollectionExtensions.AddMcmaAwsLambdaWorker
- uid: Microsoft.Extensions.DependencyInjection.IServiceCollection
  commentId: T:Microsoft.Extensions.DependencyInjection.IServiceCollection
  parent: Microsoft.Extensions.DependencyInjection
  isExternal: true
  name: IServiceCollection
  nameWithType: IServiceCollection
  fullName: Microsoft.Extensions.DependencyInjection.IServiceCollection
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Action{Mcma.Worker.McmaWorkerBuilder}
  commentId: T:System.Action{Mcma.Worker.McmaWorkerBuilder}
  parent: System
  definition: System.Action`1
  name: Action<McmaWorkerBuilder>
  nameWithType: Action<McmaWorkerBuilder>
  fullName: System.Action<Mcma.Worker.McmaWorkerBuilder>
  nameWithType.vb: Action(Of McmaWorkerBuilder)
  fullName.vb: System.Action(Of Mcma.Worker.McmaWorkerBuilder)
  name.vb: Action(Of McmaWorkerBuilder)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mcma.Worker.McmaWorkerBuilder
    name: McmaWorkerBuilder
    nameWithType: McmaWorkerBuilder
    fullName: Mcma.Worker.McmaWorkerBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mcma.Worker.McmaWorkerBuilder
    name: McmaWorkerBuilder
    nameWithType: McmaWorkerBuilder
    fullName: Mcma.Worker.McmaWorkerBuilder
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action{Mcma.Aws.DynamoDb.DynamoDbTableOptions}
  commentId: T:System.Action{Mcma.Aws.DynamoDb.DynamoDbTableOptions}
  parent: System
  definition: System.Action`1
  name: Action<DynamoDbTableOptions>
  nameWithType: Action<DynamoDbTableOptions>
  fullName: System.Action<Mcma.Aws.DynamoDb.DynamoDbTableOptions>
  nameWithType.vb: Action(Of DynamoDbTableOptions)
  fullName.vb: System.Action(Of Mcma.Aws.DynamoDb.DynamoDbTableOptions)
  name.vb: Action(Of DynamoDbTableOptions)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mcma.Aws.DynamoDb.DynamoDbTableOptions
    name: DynamoDbTableOptions
    nameWithType: DynamoDbTableOptions
    fullName: Mcma.Aws.DynamoDb.DynamoDbTableOptions
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mcma.Aws.DynamoDb.DynamoDbTableOptions
    name: DynamoDbTableOptions
    nameWithType: DynamoDbTableOptions
    fullName: Mcma.Aws.DynamoDb.DynamoDbTableOptions
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.DependencyInjection
  commentId: N:Microsoft.Extensions.DependencyInjection
  isExternal: true
  name: Microsoft.Extensions.DependencyInjection
  nameWithType: Microsoft.Extensions.DependencyInjection
  fullName: Microsoft.Extensions.DependencyInjection
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Mcma.Aws.Functions.ApiHandler.McmaLambdaWorkerCollectionExtensions.AddMcmaAwsLambdaJobAssignmentWorker*
  commentId: Overload:Mcma.Aws.Functions.ApiHandler.McmaLambdaWorkerCollectionExtensions.AddMcmaAwsLambdaJobAssignmentWorker
  name: AddMcmaAwsLambdaJobAssignmentWorker
  nameWithType: McmaLambdaWorkerCollectionExtensions.AddMcmaAwsLambdaJobAssignmentWorker
  fullName: Mcma.Aws.Functions.ApiHandler.McmaLambdaWorkerCollectionExtensions.AddMcmaAwsLambdaJobAssignmentWorker
- uid: System.Action{Mcma.Worker.ProcessJobAssignmentOperationBuilder{{TJob}}}
  commentId: T:System.Action{Mcma.Worker.ProcessJobAssignmentOperationBuilder{``0}}
  parent: System
  definition: System.Action`1
  name: Action<ProcessJobAssignmentOperationBuilder<TJob>>
  nameWithType: Action<ProcessJobAssignmentOperationBuilder<TJob>>
  fullName: System.Action<Mcma.Worker.ProcessJobAssignmentOperationBuilder<TJob>>
  nameWithType.vb: Action(Of ProcessJobAssignmentOperationBuilder(Of TJob))
  fullName.vb: System.Action(Of Mcma.Worker.ProcessJobAssignmentOperationBuilder(Of TJob))
  name.vb: Action(Of ProcessJobAssignmentOperationBuilder(Of TJob))
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mcma.Worker.ProcessJobAssignmentOperationBuilder`1
    name: ProcessJobAssignmentOperationBuilder
    nameWithType: ProcessJobAssignmentOperationBuilder
    fullName: Mcma.Worker.ProcessJobAssignmentOperationBuilder
  - name: <
    nameWithType: <
    fullName: <
  - name: TJob
    nameWithType: TJob
    fullName: TJob
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mcma.Worker.ProcessJobAssignmentOperationBuilder`1
    name: ProcessJobAssignmentOperationBuilder
    nameWithType: ProcessJobAssignmentOperationBuilder
    fullName: Mcma.Worker.ProcessJobAssignmentOperationBuilder
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TJob
    nameWithType: TJob
    fullName: TJob
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
