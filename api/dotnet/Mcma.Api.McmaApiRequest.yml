### YamlMime:ManagedReference
items:
- uid: Mcma.Api.McmaApiRequest
  commentId: T:Mcma.Api.McmaApiRequest
  id: McmaApiRequest
  parent: Mcma.Api
  children:
  - Mcma.Api.McmaApiRequest.Body
  - Mcma.Api.McmaApiRequest.Headers
  - Mcma.Api.McmaApiRequest.HttpMethod
  - Mcma.Api.McmaApiRequest.Id
  - Mcma.Api.McmaApiRequest.JsonBody
  - Mcma.Api.McmaApiRequest.Path
  - Mcma.Api.McmaApiRequest.PathVariables
  - Mcma.Api.McmaApiRequest.QueryStringParameters
  langs:
  - csharp
  - vb
  name: McmaApiRequest
  nameWithType: McmaApiRequest
  fullName: Mcma.Api.McmaApiRequest
  type: Class
  source:
    remote:
      path: Base/Mcma.Api/Http/McmaApiRequest.cs
      branch: documentation
      repo: https://github.com/ebu/mcma-libraries-dotnet.git
    id: McmaApiRequest
    path: ../mcma-libraries-dotnet/Base/Mcma.Api/Http/McmaApiRequest.cs
    startLine: 8
  assemblies:
  - Mcma.Api
  namespace: Mcma.Api
  syntax:
    content: public class McmaApiRequest
    content.vb: Public Class McmaApiRequest
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - System.Object.Mcma.Serialization.McmaJson.ToMcmaJson(System.Boolean)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Mcma.Api.McmaApiRequest.Id
  commentId: P:Mcma.Api.McmaApiRequest.Id
  id: Id
  parent: Mcma.Api.McmaApiRequest
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: McmaApiRequest.Id
  fullName: Mcma.Api.McmaApiRequest.Id
  type: Property
  source:
    remote:
      path: Base/Mcma.Api/Http/McmaApiRequest.cs
      branch: documentation
      repo: https://github.com/ebu/mcma-libraries-dotnet.git
    id: Id
    path: ../mcma-libraries-dotnet/Base/Mcma.Api/Http/McmaApiRequest.cs
    startLine: 10
  assemblies:
  - Mcma.Api
  namespace: Mcma.Api
  syntax:
    content: public string Id { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Id As String
  overload: Mcma.Api.McmaApiRequest.Id*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mcma.Api.McmaApiRequest.Path
  commentId: P:Mcma.Api.McmaApiRequest.Path
  id: Path
  parent: Mcma.Api.McmaApiRequest
  langs:
  - csharp
  - vb
  name: Path
  nameWithType: McmaApiRequest.Path
  fullName: Mcma.Api.McmaApiRequest.Path
  type: Property
  source:
    remote:
      path: Base/Mcma.Api/Http/McmaApiRequest.cs
      branch: documentation
      repo: https://github.com/ebu/mcma-libraries-dotnet.git
    id: Path
    path: ../mcma-libraries-dotnet/Base/Mcma.Api/Http/McmaApiRequest.cs
    startLine: 12
  assemblies:
  - Mcma.Api
  namespace: Mcma.Api
  syntax:
    content: public string Path { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Path As String
  overload: Mcma.Api.McmaApiRequest.Path*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mcma.Api.McmaApiRequest.HttpMethod
  commentId: P:Mcma.Api.McmaApiRequest.HttpMethod
  id: HttpMethod
  parent: Mcma.Api.McmaApiRequest
  langs:
  - csharp
  - vb
  name: HttpMethod
  nameWithType: McmaApiRequest.HttpMethod
  fullName: Mcma.Api.McmaApiRequest.HttpMethod
  type: Property
  source:
    remote:
      path: Base/Mcma.Api/Http/McmaApiRequest.cs
      branch: documentation
      repo: https://github.com/ebu/mcma-libraries-dotnet.git
    id: HttpMethod
    path: ../mcma-libraries-dotnet/Base/Mcma.Api/Http/McmaApiRequest.cs
    startLine: 14
  assemblies:
  - Mcma.Api
  namespace: Mcma.Api
  syntax:
    content: public HttpMethod HttpMethod { get; set; }
    parameters: []
    return:
      type: System.Net.Http.HttpMethod
    content.vb: Public Property HttpMethod As HttpMethod
  overload: Mcma.Api.McmaApiRequest.HttpMethod*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mcma.Api.McmaApiRequest.Headers
  commentId: P:Mcma.Api.McmaApiRequest.Headers
  id: Headers
  parent: Mcma.Api.McmaApiRequest
  langs:
  - csharp
  - vb
  name: Headers
  nameWithType: McmaApiRequest.Headers
  fullName: Mcma.Api.McmaApiRequest.Headers
  type: Property
  source:
    remote:
      path: Base/Mcma.Api/Http/McmaApiRequest.cs
      branch: documentation
      repo: https://github.com/ebu/mcma-libraries-dotnet.git
    id: Headers
    path: ../mcma-libraries-dotnet/Base/Mcma.Api/Http/McmaApiRequest.cs
    startLine: 16
  assemblies:
  - Mcma.Api
  namespace: Mcma.Api
  syntax:
    content: public IDictionary<string, string> Headers { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.String}
    content.vb: Public Property Headers As IDictionary(Of String, String)
  overload: Mcma.Api.McmaApiRequest.Headers*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mcma.Api.McmaApiRequest.PathVariables
  commentId: P:Mcma.Api.McmaApiRequest.PathVariables
  id: PathVariables
  parent: Mcma.Api.McmaApiRequest
  langs:
  - csharp
  - vb
  name: PathVariables
  nameWithType: McmaApiRequest.PathVariables
  fullName: Mcma.Api.McmaApiRequest.PathVariables
  type: Property
  source:
    remote:
      path: Base/Mcma.Api/Http/McmaApiRequest.cs
      branch: documentation
      repo: https://github.com/ebu/mcma-libraries-dotnet.git
    id: PathVariables
    path: ../mcma-libraries-dotnet/Base/Mcma.Api/Http/McmaApiRequest.cs
    startLine: 18
  assemblies:
  - Mcma.Api
  namespace: Mcma.Api
  syntax:
    content: public IDictionary<string, object> PathVariables { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.Object}
    content.vb: Public Property PathVariables As IDictionary(Of String, Object)
  overload: Mcma.Api.McmaApiRequest.PathVariables*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mcma.Api.McmaApiRequest.QueryStringParameters
  commentId: P:Mcma.Api.McmaApiRequest.QueryStringParameters
  id: QueryStringParameters
  parent: Mcma.Api.McmaApiRequest
  langs:
  - csharp
  - vb
  name: QueryStringParameters
  nameWithType: McmaApiRequest.QueryStringParameters
  fullName: Mcma.Api.McmaApiRequest.QueryStringParameters
  type: Property
  source:
    remote:
      path: Base/Mcma.Api/Http/McmaApiRequest.cs
      branch: documentation
      repo: https://github.com/ebu/mcma-libraries-dotnet.git
    id: QueryStringParameters
    path: ../mcma-libraries-dotnet/Base/Mcma.Api/Http/McmaApiRequest.cs
    startLine: 20
  assemblies:
  - Mcma.Api
  namespace: Mcma.Api
  syntax:
    content: public IDictionary<string, string> QueryStringParameters { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.String}
    content.vb: Public Property QueryStringParameters As IDictionary(Of String, String)
  overload: Mcma.Api.McmaApiRequest.QueryStringParameters*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mcma.Api.McmaApiRequest.Body
  commentId: P:Mcma.Api.McmaApiRequest.Body
  id: Body
  parent: Mcma.Api.McmaApiRequest
  langs:
  - csharp
  - vb
  name: Body
  nameWithType: McmaApiRequest.Body
  fullName: Mcma.Api.McmaApiRequest.Body
  type: Property
  source:
    remote:
      path: Base/Mcma.Api/Http/McmaApiRequest.cs
      branch: documentation
      repo: https://github.com/ebu/mcma-libraries-dotnet.git
    id: Body
    path: ../mcma-libraries-dotnet/Base/Mcma.Api/Http/McmaApiRequest.cs
    startLine: 22
  assemblies:
  - Mcma.Api
  namespace: Mcma.Api
  syntax:
    content: public byte[] Body { get; set; }
    parameters: []
    return:
      type: System.Byte[]
    content.vb: Public Property Body As Byte()
  overload: Mcma.Api.McmaApiRequest.Body*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mcma.Api.McmaApiRequest.JsonBody
  commentId: P:Mcma.Api.McmaApiRequest.JsonBody
  id: JsonBody
  parent: Mcma.Api.McmaApiRequest
  langs:
  - csharp
  - vb
  name: JsonBody
  nameWithType: McmaApiRequest.JsonBody
  fullName: Mcma.Api.McmaApiRequest.JsonBody
  type: Property
  source:
    remote:
      path: Base/Mcma.Api/Http/McmaApiRequest.cs
      branch: documentation
      repo: https://github.com/ebu/mcma-libraries-dotnet.git
    id: JsonBody
    path: ../mcma-libraries-dotnet/Base/Mcma.Api/Http/McmaApiRequest.cs
    startLine: 24
  assemblies:
  - Mcma.Api
  namespace: Mcma.Api
  syntax:
    content: public JToken JsonBody { get; set; }
    parameters: []
    return:
      type: Newtonsoft.Json.Linq.JToken
    content.vb: Public Property JsonBody As JToken
  overload: Mcma.Api.McmaApiRequest.JsonBody*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Mcma.Api
  commentId: N:Mcma.Api
  name: Mcma.Api
  nameWithType: Mcma.Api
  fullName: Mcma.Api
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Mcma.Serialization.McmaJson.ToMcmaJson(System.Boolean)
  commentId: M:Mcma.Serialization.McmaJson.ToMcmaJson(System.Object,System.Boolean)
  parent: Mcma.Serialization.McmaJson
  definition: Mcma.Serialization.McmaJson.ToMcmaJson(System.Object,System.Boolean)
  name: ToMcmaJson(Boolean)
  nameWithType: McmaJson.ToMcmaJson(Boolean)
  fullName: Mcma.Serialization.McmaJson.ToMcmaJson(System.Boolean)
  spec.csharp:
  - uid: Mcma.Serialization.McmaJson.ToMcmaJson(System.Boolean)
    name: ToMcmaJson
    nameWithType: McmaJson.ToMcmaJson
    fullName: Mcma.Serialization.McmaJson.ToMcmaJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mcma.Serialization.McmaJson.ToMcmaJson(System.Boolean)
    name: ToMcmaJson
    nameWithType: McmaJson.ToMcmaJson
    fullName: Mcma.Serialization.McmaJson.ToMcmaJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Mcma.Serialization.McmaJson.ToMcmaJson(System.Object,System.Boolean)
  commentId: M:Mcma.Serialization.McmaJson.ToMcmaJson(System.Object,System.Boolean)
  isExternal: true
  name: ToMcmaJson(Object, Boolean)
  nameWithType: McmaJson.ToMcmaJson(Object, Boolean)
  fullName: Mcma.Serialization.McmaJson.ToMcmaJson(System.Object, System.Boolean)
  spec.csharp:
  - uid: Mcma.Serialization.McmaJson.ToMcmaJson(System.Object,System.Boolean)
    name: ToMcmaJson
    nameWithType: McmaJson.ToMcmaJson
    fullName: Mcma.Serialization.McmaJson.ToMcmaJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mcma.Serialization.McmaJson.ToMcmaJson(System.Object,System.Boolean)
    name: ToMcmaJson
    nameWithType: McmaJson.ToMcmaJson
    fullName: Mcma.Serialization.McmaJson.ToMcmaJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mcma.Serialization.McmaJson
  commentId: T:Mcma.Serialization.McmaJson
  parent: Mcma.Serialization
  name: McmaJson
  nameWithType: McmaJson
  fullName: Mcma.Serialization.McmaJson
- uid: Mcma.Serialization
  commentId: N:Mcma.Serialization
  name: Mcma.Serialization
  nameWithType: Mcma.Serialization
  fullName: Mcma.Serialization
- uid: Mcma.Api.McmaApiRequest.Id*
  commentId: Overload:Mcma.Api.McmaApiRequest.Id
  name: Id
  nameWithType: McmaApiRequest.Id
  fullName: Mcma.Api.McmaApiRequest.Id
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Mcma.Api.McmaApiRequest.Path*
  commentId: Overload:Mcma.Api.McmaApiRequest.Path
  name: Path
  nameWithType: McmaApiRequest.Path
  fullName: Mcma.Api.McmaApiRequest.Path
- uid: Mcma.Api.McmaApiRequest.HttpMethod*
  commentId: Overload:Mcma.Api.McmaApiRequest.HttpMethod
  name: HttpMethod
  nameWithType: McmaApiRequest.HttpMethod
  fullName: Mcma.Api.McmaApiRequest.HttpMethod
- uid: System.Net.Http.HttpMethod
  commentId: T:System.Net.Http.HttpMethod
  parent: System.Net.Http
  isExternal: true
  name: HttpMethod
  nameWithType: HttpMethod
  fullName: System.Net.Http.HttpMethod
- uid: System.Net.Http
  commentId: N:System.Net.Http
  isExternal: true
  name: System.Net.Http
  nameWithType: System.Net.Http
  fullName: System.Net.Http
- uid: Mcma.Api.McmaApiRequest.Headers*
  commentId: Overload:Mcma.Api.McmaApiRequest.Headers
  name: Headers
  nameWithType: McmaApiRequest.Headers
  fullName: Mcma.Api.McmaApiRequest.Headers
- uid: System.Collections.Generic.IDictionary{System.String,System.String}
  commentId: T:System.Collections.Generic.IDictionary{System.String,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, String>
  nameWithType: IDictionary<String, String>
  fullName: System.Collections.Generic.IDictionary<System.String, System.String>
  nameWithType.vb: IDictionary(Of String, String)
  fullName.vb: System.Collections.Generic.IDictionary(Of System.String, System.String)
  name.vb: IDictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Mcma.Api.McmaApiRequest.PathVariables*
  commentId: Overload:Mcma.Api.McmaApiRequest.PathVariables
  name: PathVariables
  nameWithType: McmaApiRequest.PathVariables
  fullName: Mcma.Api.McmaApiRequest.PathVariables
- uid: System.Collections.Generic.IDictionary{System.String,System.Object}
  commentId: T:System.Collections.Generic.IDictionary{System.String,System.Object}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, Object>
  nameWithType: IDictionary<String, Object>
  fullName: System.Collections.Generic.IDictionary<System.String, System.Object>
  nameWithType.vb: IDictionary(Of String, Object)
  fullName.vb: System.Collections.Generic.IDictionary(Of System.String, System.Object)
  name.vb: IDictionary(Of String, Object)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mcma.Api.McmaApiRequest.QueryStringParameters*
  commentId: Overload:Mcma.Api.McmaApiRequest.QueryStringParameters
  name: QueryStringParameters
  nameWithType: McmaApiRequest.QueryStringParameters
  fullName: Mcma.Api.McmaApiRequest.QueryStringParameters
- uid: Mcma.Api.McmaApiRequest.Body*
  commentId: Overload:Mcma.Api.McmaApiRequest.Body
  name: Body
  nameWithType: McmaApiRequest.Body
  fullName: Mcma.Api.McmaApiRequest.Body
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Mcma.Api.McmaApiRequest.JsonBody*
  commentId: Overload:Mcma.Api.McmaApiRequest.JsonBody
  name: JsonBody
  nameWithType: McmaApiRequest.JsonBody
  fullName: Mcma.Api.McmaApiRequest.JsonBody
- uid: Newtonsoft.Json.Linq.JToken
  commentId: T:Newtonsoft.Json.Linq.JToken
  parent: Newtonsoft.Json.Linq
  isExternal: true
  name: JToken
  nameWithType: JToken
  fullName: Newtonsoft.Json.Linq.JToken
- uid: Newtonsoft.Json.Linq
  commentId: N:Newtonsoft.Json.Linq
  isExternal: true
  name: Newtonsoft.Json.Linq
  nameWithType: Newtonsoft.Json.Linq
  fullName: Newtonsoft.Json.Linq
