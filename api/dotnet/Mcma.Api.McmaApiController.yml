### YamlMime:ManagedReference
items:
- uid: Mcma.Api.McmaApiController
  commentId: T:Mcma.Api.McmaApiController
  id: McmaApiController
  parent: Mcma.Api
  children:
  - Mcma.Api.McmaApiController.#ctor(Mcma.Logging.ILoggerProvider,System.Collections.Generic.IEnumerable{Mcma.Api.Routes.IMcmaApiRouteCollection},System.Collections.Generic.IEnumerable{Mcma.Api.Routes.IMcmaApiRoute})
  - Mcma.Api.McmaApiController.HandleRequestAsync(Mcma.Api.McmaApiRequestContext)
  - Mcma.Api.McmaApiController.Routes
  langs:
  - csharp
  - vb
  name: McmaApiController
  nameWithType: McmaApiController
  fullName: Mcma.Api.McmaApiController
  type: Class
  source:
    remote:
      path: Base/Mcma.Api/Http/McmaApiController.cs
      branch: documentation
      repo: https://github.com/ebu/mcma-libraries-dotnet.git
    id: McmaApiController
    path: ../mcma-libraries-dotnet/Base/Mcma.Api/Http/McmaApiController.cs
    startLine: 14
  assemblies:
  - Mcma.Api
  namespace: Mcma.Api
  syntax:
    content: 'public class McmaApiController : IMcmaApiController'
    content.vb: >-
      Public Class McmaApiController

          Implements IMcmaApiController
  inheritance:
  - System.Object
  implements:
  - Mcma.Api.IMcmaApiController
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - System.Object.Mcma.Serialization.McmaJson.ToMcmaJson(System.Boolean)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Mcma.Api.McmaApiController.#ctor(Mcma.Logging.ILoggerProvider,System.Collections.Generic.IEnumerable{Mcma.Api.Routes.IMcmaApiRouteCollection},System.Collections.Generic.IEnumerable{Mcma.Api.Routes.IMcmaApiRoute})
  commentId: M:Mcma.Api.McmaApiController.#ctor(Mcma.Logging.ILoggerProvider,System.Collections.Generic.IEnumerable{Mcma.Api.Routes.IMcmaApiRouteCollection},System.Collections.Generic.IEnumerable{Mcma.Api.Routes.IMcmaApiRoute})
  id: '#ctor(Mcma.Logging.ILoggerProvider,System.Collections.Generic.IEnumerable{Mcma.Api.Routes.IMcmaApiRouteCollection},System.Collections.Generic.IEnumerable{Mcma.Api.Routes.IMcmaApiRoute})'
  parent: Mcma.Api.McmaApiController
  langs:
  - csharp
  - vb
  name: McmaApiController(ILoggerProvider, IEnumerable<IMcmaApiRouteCollection>, IEnumerable<IMcmaApiRoute>)
  nameWithType: McmaApiController.McmaApiController(ILoggerProvider, IEnumerable<IMcmaApiRouteCollection>, IEnumerable<IMcmaApiRoute>)
  fullName: Mcma.Api.McmaApiController.McmaApiController(Mcma.Logging.ILoggerProvider, System.Collections.Generic.IEnumerable<Mcma.Api.Routes.IMcmaApiRouteCollection>, System.Collections.Generic.IEnumerable<Mcma.Api.Routes.IMcmaApiRoute>)
  type: Constructor
  source:
    remote:
      path: Base/Mcma.Api/Http/McmaApiController.cs
      branch: documentation
      repo: https://github.com/ebu/mcma-libraries-dotnet.git
    id: .ctor
    path: ../mcma-libraries-dotnet/Base/Mcma.Api/Http/McmaApiController.cs
    startLine: 18
  assemblies:
  - Mcma.Api
  namespace: Mcma.Api
  syntax:
    content: public McmaApiController(ILoggerProvider loggerProvider, IEnumerable<IMcmaApiRouteCollection> routeCollections, IEnumerable<IMcmaApiRoute> routes)
    parameters:
    - id: loggerProvider
      type: Mcma.Logging.ILoggerProvider
    - id: routeCollections
      type: System.Collections.Generic.IEnumerable{Mcma.Api.Routes.IMcmaApiRouteCollection}
    - id: routes
      type: System.Collections.Generic.IEnumerable{Mcma.Api.Routes.IMcmaApiRoute}
    content.vb: Public Sub New(loggerProvider As ILoggerProvider, routeCollections As IEnumerable(Of IMcmaApiRouteCollection), routes As IEnumerable(Of IMcmaApiRoute))
  overload: Mcma.Api.McmaApiController.#ctor*
  nameWithType.vb: McmaApiController.McmaApiController(ILoggerProvider, IEnumerable(Of IMcmaApiRouteCollection), IEnumerable(Of IMcmaApiRoute))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Mcma.Api.McmaApiController.McmaApiController(Mcma.Logging.ILoggerProvider, System.Collections.Generic.IEnumerable(Of Mcma.Api.Routes.IMcmaApiRouteCollection), System.Collections.Generic.IEnumerable(Of Mcma.Api.Routes.IMcmaApiRoute))
  name.vb: McmaApiController(ILoggerProvider, IEnumerable(Of IMcmaApiRouteCollection), IEnumerable(Of IMcmaApiRoute))
- uid: Mcma.Api.McmaApiController.Routes
  commentId: P:Mcma.Api.McmaApiController.Routes
  id: Routes
  parent: Mcma.Api.McmaApiController
  langs:
  - csharp
  - vb
  name: Routes
  nameWithType: McmaApiController.Routes
  fullName: Mcma.Api.McmaApiController.Routes
  type: Property
  source:
    remote:
      path: Base/Mcma.Api/Http/McmaApiController.cs
      branch: documentation
      repo: https://github.com/ebu/mcma-libraries-dotnet.git
    id: Routes
    path: ../mcma-libraries-dotnet/Base/Mcma.Api/Http/McmaApiController.cs
    startLine: 41
  assemblies:
  - Mcma.Api
  namespace: Mcma.Api
  syntax:
    content: public McmaApiRouteCollection Routes { get; }
    parameters: []
    return:
      type: Mcma.Api.Routes.McmaApiRouteCollection
    content.vb: Public ReadOnly Property Routes As McmaApiRouteCollection
  overload: Mcma.Api.McmaApiController.Routes*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Mcma.Api.McmaApiController.HandleRequestAsync(Mcma.Api.McmaApiRequestContext)
  commentId: M:Mcma.Api.McmaApiController.HandleRequestAsync(Mcma.Api.McmaApiRequestContext)
  id: HandleRequestAsync(Mcma.Api.McmaApiRequestContext)
  parent: Mcma.Api.McmaApiController
  langs:
  - csharp
  - vb
  name: HandleRequestAsync(McmaApiRequestContext)
  nameWithType: McmaApiController.HandleRequestAsync(McmaApiRequestContext)
  fullName: Mcma.Api.McmaApiController.HandleRequestAsync(Mcma.Api.McmaApiRequestContext)
  type: Method
  source:
    remote:
      path: Base/Mcma.Api/Http/McmaApiController.cs
      branch: documentation
      repo: https://github.com/ebu/mcma-libraries-dotnet.git
    id: HandleRequestAsync
    path: ../mcma-libraries-dotnet/Base/Mcma.Api/Http/McmaApiController.cs
    startLine: 43
  assemblies:
  - Mcma.Api
  namespace: Mcma.Api
  syntax:
    content: public Task HandleRequestAsync(McmaApiRequestContext requestContext)
    parameters:
    - id: requestContext
      type: Mcma.Api.McmaApiRequestContext
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function HandleRequestAsync(requestContext As McmaApiRequestContext) As Task
  overload: Mcma.Api.McmaApiController.HandleRequestAsync*
  implements:
  - Mcma.Api.IMcmaApiController.HandleRequestAsync(Mcma.Api.McmaApiRequestContext)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Mcma.Api
  commentId: N:Mcma.Api
  name: Mcma.Api
  nameWithType: Mcma.Api
  fullName: Mcma.Api
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Mcma.Api.IMcmaApiController
  commentId: T:Mcma.Api.IMcmaApiController
  parent: Mcma.Api
  name: IMcmaApiController
  nameWithType: IMcmaApiController
  fullName: Mcma.Api.IMcmaApiController
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Mcma.Serialization.McmaJson.ToMcmaJson(System.Boolean)
  commentId: M:Mcma.Serialization.McmaJson.ToMcmaJson(System.Object,System.Boolean)
  parent: Mcma.Serialization.McmaJson
  definition: Mcma.Serialization.McmaJson.ToMcmaJson(System.Object,System.Boolean)
  name: ToMcmaJson(Boolean)
  nameWithType: McmaJson.ToMcmaJson(Boolean)
  fullName: Mcma.Serialization.McmaJson.ToMcmaJson(System.Boolean)
  spec.csharp:
  - uid: Mcma.Serialization.McmaJson.ToMcmaJson(System.Boolean)
    name: ToMcmaJson
    nameWithType: McmaJson.ToMcmaJson
    fullName: Mcma.Serialization.McmaJson.ToMcmaJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mcma.Serialization.McmaJson.ToMcmaJson(System.Boolean)
    name: ToMcmaJson
    nameWithType: McmaJson.ToMcmaJson
    fullName: Mcma.Serialization.McmaJson.ToMcmaJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Mcma.Serialization.McmaJson.ToMcmaJson(System.Object,System.Boolean)
  commentId: M:Mcma.Serialization.McmaJson.ToMcmaJson(System.Object,System.Boolean)
  isExternal: true
  name: ToMcmaJson(Object, Boolean)
  nameWithType: McmaJson.ToMcmaJson(Object, Boolean)
  fullName: Mcma.Serialization.McmaJson.ToMcmaJson(System.Object, System.Boolean)
  spec.csharp:
  - uid: Mcma.Serialization.McmaJson.ToMcmaJson(System.Object,System.Boolean)
    name: ToMcmaJson
    nameWithType: McmaJson.ToMcmaJson
    fullName: Mcma.Serialization.McmaJson.ToMcmaJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mcma.Serialization.McmaJson.ToMcmaJson(System.Object,System.Boolean)
    name: ToMcmaJson
    nameWithType: McmaJson.ToMcmaJson
    fullName: Mcma.Serialization.McmaJson.ToMcmaJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mcma.Serialization.McmaJson
  commentId: T:Mcma.Serialization.McmaJson
  parent: Mcma.Serialization
  name: McmaJson
  nameWithType: McmaJson
  fullName: Mcma.Serialization.McmaJson
- uid: Mcma.Serialization
  commentId: N:Mcma.Serialization
  name: Mcma.Serialization
  nameWithType: Mcma.Serialization
  fullName: Mcma.Serialization
- uid: Mcma.Api.McmaApiController.#ctor*
  commentId: Overload:Mcma.Api.McmaApiController.#ctor
  name: McmaApiController
  nameWithType: McmaApiController.McmaApiController
  fullName: Mcma.Api.McmaApiController.McmaApiController
- uid: Mcma.Logging.ILoggerProvider
  commentId: T:Mcma.Logging.ILoggerProvider
  parent: Mcma.Logging
  name: ILoggerProvider
  nameWithType: ILoggerProvider
  fullName: Mcma.Logging.ILoggerProvider
- uid: System.Collections.Generic.IEnumerable{Mcma.Api.Routes.IMcmaApiRouteCollection}
  commentId: T:System.Collections.Generic.IEnumerable{Mcma.Api.Routes.IMcmaApiRouteCollection}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<IMcmaApiRouteCollection>
  nameWithType: IEnumerable<IMcmaApiRouteCollection>
  fullName: System.Collections.Generic.IEnumerable<Mcma.Api.Routes.IMcmaApiRouteCollection>
  nameWithType.vb: IEnumerable(Of IMcmaApiRouteCollection)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Mcma.Api.Routes.IMcmaApiRouteCollection)
  name.vb: IEnumerable(Of IMcmaApiRouteCollection)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mcma.Api.Routes.IMcmaApiRouteCollection
    name: IMcmaApiRouteCollection
    nameWithType: IMcmaApiRouteCollection
    fullName: Mcma.Api.Routes.IMcmaApiRouteCollection
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mcma.Api.Routes.IMcmaApiRouteCollection
    name: IMcmaApiRouteCollection
    nameWithType: IMcmaApiRouteCollection
    fullName: Mcma.Api.Routes.IMcmaApiRouteCollection
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{Mcma.Api.Routes.IMcmaApiRoute}
  commentId: T:System.Collections.Generic.IEnumerable{Mcma.Api.Routes.IMcmaApiRoute}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<IMcmaApiRoute>
  nameWithType: IEnumerable<IMcmaApiRoute>
  fullName: System.Collections.Generic.IEnumerable<Mcma.Api.Routes.IMcmaApiRoute>
  nameWithType.vb: IEnumerable(Of IMcmaApiRoute)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Mcma.Api.Routes.IMcmaApiRoute)
  name.vb: IEnumerable(Of IMcmaApiRoute)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mcma.Api.Routes.IMcmaApiRoute
    name: IMcmaApiRoute
    nameWithType: IMcmaApiRoute
    fullName: Mcma.Api.Routes.IMcmaApiRoute
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mcma.Api.Routes.IMcmaApiRoute
    name: IMcmaApiRoute
    nameWithType: IMcmaApiRoute
    fullName: Mcma.Api.Routes.IMcmaApiRoute
  - name: )
    nameWithType: )
    fullName: )
- uid: Mcma.Logging
  commentId: N:Mcma.Logging
  name: Mcma.Logging
  nameWithType: Mcma.Logging
  fullName: Mcma.Logging
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Mcma.Api.McmaApiController.Routes*
  commentId: Overload:Mcma.Api.McmaApiController.Routes
  name: Routes
  nameWithType: McmaApiController.Routes
  fullName: Mcma.Api.McmaApiController.Routes
- uid: Mcma.Api.Routes.McmaApiRouteCollection
  commentId: T:Mcma.Api.Routes.McmaApiRouteCollection
  parent: Mcma.Api.Routes
  name: McmaApiRouteCollection
  nameWithType: McmaApiRouteCollection
  fullName: Mcma.Api.Routes.McmaApiRouteCollection
- uid: Mcma.Api.Routes
  commentId: N:Mcma.Api.Routes
  name: Mcma.Api.Routes
  nameWithType: Mcma.Api.Routes
  fullName: Mcma.Api.Routes
- uid: Mcma.Api.McmaApiController.HandleRequestAsync*
  commentId: Overload:Mcma.Api.McmaApiController.HandleRequestAsync
  name: HandleRequestAsync
  nameWithType: McmaApiController.HandleRequestAsync
  fullName: Mcma.Api.McmaApiController.HandleRequestAsync
- uid: Mcma.Api.IMcmaApiController.HandleRequestAsync(Mcma.Api.McmaApiRequestContext)
  commentId: M:Mcma.Api.IMcmaApiController.HandleRequestAsync(Mcma.Api.McmaApiRequestContext)
  parent: Mcma.Api.IMcmaApiController
  name: HandleRequestAsync(McmaApiRequestContext)
  nameWithType: IMcmaApiController.HandleRequestAsync(McmaApiRequestContext)
  fullName: Mcma.Api.IMcmaApiController.HandleRequestAsync(Mcma.Api.McmaApiRequestContext)
  spec.csharp:
  - uid: Mcma.Api.IMcmaApiController.HandleRequestAsync(Mcma.Api.McmaApiRequestContext)
    name: HandleRequestAsync
    nameWithType: IMcmaApiController.HandleRequestAsync
    fullName: Mcma.Api.IMcmaApiController.HandleRequestAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mcma.Api.McmaApiRequestContext
    name: McmaApiRequestContext
    nameWithType: McmaApiRequestContext
    fullName: Mcma.Api.McmaApiRequestContext
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mcma.Api.IMcmaApiController.HandleRequestAsync(Mcma.Api.McmaApiRequestContext)
    name: HandleRequestAsync
    nameWithType: IMcmaApiController.HandleRequestAsync
    fullName: Mcma.Api.IMcmaApiController.HandleRequestAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mcma.Api.McmaApiRequestContext
    name: McmaApiRequestContext
    nameWithType: McmaApiRequestContext
    fullName: Mcma.Api.McmaApiRequestContext
  - name: )
    nameWithType: )
    fullName: )
- uid: Mcma.Api.McmaApiRequestContext
  commentId: T:Mcma.Api.McmaApiRequestContext
  parent: Mcma.Api
  name: McmaApiRequestContext
  nameWithType: McmaApiRequestContext
  fullName: Mcma.Api.McmaApiRequestContext
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
