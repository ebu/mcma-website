### YamlMime:ManagedReference
items:
- uid: Mcma.Aws.DynamoDb.ITableDescriptionProvider
  commentId: T:Mcma.Aws.DynamoDb.ITableDescriptionProvider
  id: ITableDescriptionProvider
  parent: Mcma.Aws.DynamoDb
  children:
  - Mcma.Aws.DynamoDb.ITableDescriptionProvider.GetTableDescriptionAsync(Amazon.DynamoDBv2.IAmazonDynamoDB,System.String)
  langs:
  - csharp
  - vb
  name: ITableDescriptionProvider
  nameWithType: ITableDescriptionProvider
  fullName: Mcma.Aws.DynamoDb.ITableDescriptionProvider
  type: Interface
  source:
    remote:
      path: AWS/Mcma.Aws.DynamoDb/TableDescription/ITableDescriptionProvider.cs
      branch: documentation
      repo: https://github.com/ebu/mcma-libraries-dotnet.git
    id: ITableDescriptionProvider
    path: ../mcma-libraries-dotnet/AWS/Mcma.Aws.DynamoDb/TableDescription/ITableDescriptionProvider.cs
    startLine: 5
  assemblies:
  - Mcma.Aws.DynamoDb
  namespace: Mcma.Aws.DynamoDb
  syntax:
    content: public interface ITableDescriptionProvider
    content.vb: Public Interface ITableDescriptionProvider
  extensionMethods:
  - System.Object.Mcma.Serialization.McmaJson.ToMcmaJson(System.Boolean)
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Mcma.Aws.DynamoDb.ITableDescriptionProvider.GetTableDescriptionAsync(Amazon.DynamoDBv2.IAmazonDynamoDB,System.String)
  commentId: M:Mcma.Aws.DynamoDb.ITableDescriptionProvider.GetTableDescriptionAsync(Amazon.DynamoDBv2.IAmazonDynamoDB,System.String)
  id: GetTableDescriptionAsync(Amazon.DynamoDBv2.IAmazonDynamoDB,System.String)
  parent: Mcma.Aws.DynamoDb.ITableDescriptionProvider
  langs:
  - csharp
  - vb
  name: GetTableDescriptionAsync(IAmazonDynamoDB, String)
  nameWithType: ITableDescriptionProvider.GetTableDescriptionAsync(IAmazonDynamoDB, String)
  fullName: Mcma.Aws.DynamoDb.ITableDescriptionProvider.GetTableDescriptionAsync(Amazon.DynamoDBv2.IAmazonDynamoDB, System.String)
  type: Method
  source:
    remote:
      path: AWS/Mcma.Aws.DynamoDb/TableDescription/ITableDescriptionProvider.cs
      branch: documentation
      repo: https://github.com/ebu/mcma-libraries-dotnet.git
    id: GetTableDescriptionAsync
    path: ../mcma-libraries-dotnet/AWS/Mcma.Aws.DynamoDb/TableDescription/ITableDescriptionProvider.cs
    startLine: 7
  assemblies:
  - Mcma.Aws.DynamoDb
  namespace: Mcma.Aws.DynamoDb
  syntax:
    content: Task<DynamoDbTableDescription> GetTableDescriptionAsync(IAmazonDynamoDB dynamoDb, string tableName)
    parameters:
    - id: dynamoDb
      type: Amazon.DynamoDBv2.IAmazonDynamoDB
    - id: tableName
      type: System.String
    return:
      type: System.Threading.Tasks.Task{Mcma.Aws.DynamoDb.DynamoDbTableDescription}
    content.vb: Function GetTableDescriptionAsync(dynamoDb As IAmazonDynamoDB, tableName As String) As Task(Of DynamoDbTableDescription)
  overload: Mcma.Aws.DynamoDb.ITableDescriptionProvider.GetTableDescriptionAsync*
references:
- uid: Mcma.Aws.DynamoDb
  commentId: N:Mcma.Aws.DynamoDb
  name: Mcma.Aws.DynamoDb
  nameWithType: Mcma.Aws.DynamoDb
  fullName: Mcma.Aws.DynamoDb
- uid: System.Object.Mcma.Serialization.McmaJson.ToMcmaJson(System.Boolean)
  commentId: M:Mcma.Serialization.McmaJson.ToMcmaJson(System.Object,System.Boolean)
  parent: Mcma.Serialization.McmaJson
  definition: Mcma.Serialization.McmaJson.ToMcmaJson(System.Object,System.Boolean)
  name: ToMcmaJson(Boolean)
  nameWithType: McmaJson.ToMcmaJson(Boolean)
  fullName: Mcma.Serialization.McmaJson.ToMcmaJson(System.Boolean)
  spec.csharp:
  - uid: Mcma.Serialization.McmaJson.ToMcmaJson(System.Boolean)
    name: ToMcmaJson
    nameWithType: McmaJson.ToMcmaJson
    fullName: Mcma.Serialization.McmaJson.ToMcmaJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mcma.Serialization.McmaJson.ToMcmaJson(System.Boolean)
    name: ToMcmaJson
    nameWithType: McmaJson.ToMcmaJson
    fullName: Mcma.Serialization.McmaJson.ToMcmaJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mcma.Serialization.McmaJson.ToMcmaJson(System.Object,System.Boolean)
  commentId: M:Mcma.Serialization.McmaJson.ToMcmaJson(System.Object,System.Boolean)
  isExternal: true
  name: ToMcmaJson(Object, Boolean)
  nameWithType: McmaJson.ToMcmaJson(Object, Boolean)
  fullName: Mcma.Serialization.McmaJson.ToMcmaJson(System.Object, System.Boolean)
  spec.csharp:
  - uid: Mcma.Serialization.McmaJson.ToMcmaJson(System.Object,System.Boolean)
    name: ToMcmaJson
    nameWithType: McmaJson.ToMcmaJson
    fullName: Mcma.Serialization.McmaJson.ToMcmaJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mcma.Serialization.McmaJson.ToMcmaJson(System.Object,System.Boolean)
    name: ToMcmaJson
    nameWithType: McmaJson.ToMcmaJson
    fullName: Mcma.Serialization.McmaJson.ToMcmaJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mcma.Serialization.McmaJson
  commentId: T:Mcma.Serialization.McmaJson
  parent: Mcma.Serialization
  name: McmaJson
  nameWithType: McmaJson
  fullName: Mcma.Serialization.McmaJson
- uid: Mcma.Serialization
  commentId: N:Mcma.Serialization
  name: Mcma.Serialization
  nameWithType: Mcma.Serialization
  fullName: Mcma.Serialization
- uid: Mcma.Aws.DynamoDb.ITableDescriptionProvider.GetTableDescriptionAsync*
  commentId: Overload:Mcma.Aws.DynamoDb.ITableDescriptionProvider.GetTableDescriptionAsync
  name: GetTableDescriptionAsync
  nameWithType: ITableDescriptionProvider.GetTableDescriptionAsync
  fullName: Mcma.Aws.DynamoDb.ITableDescriptionProvider.GetTableDescriptionAsync
- uid: Amazon.DynamoDBv2.IAmazonDynamoDB
  commentId: T:Amazon.DynamoDBv2.IAmazonDynamoDB
  parent: Amazon.DynamoDBv2
  isExternal: true
  name: IAmazonDynamoDB
  nameWithType: IAmazonDynamoDB
  fullName: Amazon.DynamoDBv2.IAmazonDynamoDB
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Threading.Tasks.Task{Mcma.Aws.DynamoDb.DynamoDbTableDescription}
  commentId: T:System.Threading.Tasks.Task{Mcma.Aws.DynamoDb.DynamoDbTableDescription}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<DynamoDbTableDescription>
  nameWithType: Task<DynamoDbTableDescription>
  fullName: System.Threading.Tasks.Task<Mcma.Aws.DynamoDb.DynamoDbTableDescription>
  nameWithType.vb: Task(Of DynamoDbTableDescription)
  fullName.vb: System.Threading.Tasks.Task(Of Mcma.Aws.DynamoDb.DynamoDbTableDescription)
  name.vb: Task(Of DynamoDbTableDescription)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mcma.Aws.DynamoDb.DynamoDbTableDescription
    name: DynamoDbTableDescription
    nameWithType: DynamoDbTableDescription
    fullName: Mcma.Aws.DynamoDb.DynamoDbTableDescription
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mcma.Aws.DynamoDb.DynamoDbTableDescription
    name: DynamoDbTableDescription
    nameWithType: DynamoDbTableDescription
    fullName: Mcma.Aws.DynamoDb.DynamoDbTableDescription
  - name: )
    nameWithType: )
    fullName: )
- uid: Amazon.DynamoDBv2
  commentId: N:Amazon.DynamoDBv2
  isExternal: true
  name: Amazon.DynamoDBv2
  nameWithType: Amazon.DynamoDBv2
  fullName: Amazon.DynamoDBv2
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
