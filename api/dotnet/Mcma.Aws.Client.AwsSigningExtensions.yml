### YamlMime:ManagedReference
items:
- uid: Mcma.Aws.Client.AwsSigningExtensions
  commentId: T:Mcma.Aws.Client.AwsSigningExtensions
  id: AwsSigningExtensions
  parent: Mcma.Aws.Client
  children:
  - Mcma.Aws.Client.AwsSigningExtensions.Hash(System.Security.Cryptography.HashAlgorithm,System.Byte[])
  - Mcma.Aws.Client.AwsSigningExtensions.Hash(System.Security.Cryptography.HashAlgorithm,System.String)
  - Mcma.Aws.Client.AwsSigningExtensions.UseToSign(System.Byte[],System.String)
  langs:
  - csharp
  - vb
  name: AwsSigningExtensions
  nameWithType: AwsSigningExtensions
  fullName: Mcma.Aws.Client.AwsSigningExtensions
  type: Class
  source:
    remote:
      path: AWS/Mcma.Aws.Client/AwsSigningExtensions.cs
      branch: documentation
      repo: https://github.com/ebu/mcma-libraries-dotnet.git
    id: AwsSigningExtensions
    path: ../mcma-libraries-dotnet/AWS/Mcma.Aws.Client/AwsSigningExtensions.cs
    startLine: 6
  assemblies:
  - Mcma.Aws.Client
  namespace: Mcma.Aws.Client
  syntax:
    content: public static class AwsSigningExtensions
    content.vb: Public Module AwsSigningExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Mcma.Aws.Client.AwsSigningExtensions.Hash(System.Security.Cryptography.HashAlgorithm,System.String)
  commentId: M:Mcma.Aws.Client.AwsSigningExtensions.Hash(System.Security.Cryptography.HashAlgorithm,System.String)
  id: Hash(System.Security.Cryptography.HashAlgorithm,System.String)
  isExtensionMethod: true
  parent: Mcma.Aws.Client.AwsSigningExtensions
  langs:
  - csharp
  - vb
  name: Hash(HashAlgorithm, String)
  nameWithType: AwsSigningExtensions.Hash(HashAlgorithm, String)
  fullName: Mcma.Aws.Client.AwsSigningExtensions.Hash(System.Security.Cryptography.HashAlgorithm, System.String)
  type: Method
  source:
    remote:
      path: AWS/Mcma.Aws.Client/AwsSigningExtensions.cs
      branch: documentation
      repo: https://github.com/ebu/mcma-libraries-dotnet.git
    id: Hash
    path: ../mcma-libraries-dotnet/AWS/Mcma.Aws.Client/AwsSigningExtensions.cs
    startLine: 8
  assemblies:
  - Mcma.Aws.Client
  namespace: Mcma.Aws.Client
  syntax:
    content: public static string Hash(this HashAlgorithm hashAlgorithm, string toHash)
    parameters:
    - id: hashAlgorithm
      type: System.Security.Cryptography.HashAlgorithm
    - id: toHash
      type: System.String
    return:
      type: System.String
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Hash(hashAlgorithm As HashAlgorithm, toHash As String) As String
  overload: Mcma.Aws.Client.AwsSigningExtensions.Hash*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Mcma.Aws.Client.AwsSigningExtensions.Hash(System.Security.Cryptography.HashAlgorithm,System.Byte[])
  commentId: M:Mcma.Aws.Client.AwsSigningExtensions.Hash(System.Security.Cryptography.HashAlgorithm,System.Byte[])
  id: Hash(System.Security.Cryptography.HashAlgorithm,System.Byte[])
  isExtensionMethod: true
  parent: Mcma.Aws.Client.AwsSigningExtensions
  langs:
  - csharp
  - vb
  name: Hash(HashAlgorithm, Byte[])
  nameWithType: AwsSigningExtensions.Hash(HashAlgorithm, Byte[])
  fullName: Mcma.Aws.Client.AwsSigningExtensions.Hash(System.Security.Cryptography.HashAlgorithm, System.Byte[])
  type: Method
  source:
    remote:
      path: AWS/Mcma.Aws.Client/AwsSigningExtensions.cs
      branch: documentation
      repo: https://github.com/ebu/mcma-libraries-dotnet.git
    id: Hash
    path: ../mcma-libraries-dotnet/AWS/Mcma.Aws.Client/AwsSigningExtensions.cs
    startLine: 11
  assemblies:
  - Mcma.Aws.Client
  namespace: Mcma.Aws.Client
  syntax:
    content: public static string Hash(this HashAlgorithm hashAlgorithm, byte[] toHash)
    parameters:
    - id: hashAlgorithm
      type: System.Security.Cryptography.HashAlgorithm
    - id: toHash
      type: System.Byte[]
    return:
      type: System.String
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Hash(hashAlgorithm As HashAlgorithm, toHash As Byte()) As String
  overload: Mcma.Aws.Client.AwsSigningExtensions.Hash*
  nameWithType.vb: AwsSigningExtensions.Hash(HashAlgorithm, Byte())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Mcma.Aws.Client.AwsSigningExtensions.Hash(System.Security.Cryptography.HashAlgorithm, System.Byte())
  name.vb: Hash(HashAlgorithm, Byte())
- uid: Mcma.Aws.Client.AwsSigningExtensions.UseToSign(System.Byte[],System.String)
  commentId: M:Mcma.Aws.Client.AwsSigningExtensions.UseToSign(System.Byte[],System.String)
  id: UseToSign(System.Byte[],System.String)
  isExtensionMethod: true
  parent: Mcma.Aws.Client.AwsSigningExtensions
  langs:
  - csharp
  - vb
  name: UseToSign(Byte[], String)
  nameWithType: AwsSigningExtensions.UseToSign(Byte[], String)
  fullName: Mcma.Aws.Client.AwsSigningExtensions.UseToSign(System.Byte[], System.String)
  type: Method
  source:
    remote:
      path: AWS/Mcma.Aws.Client/AwsSigningExtensions.cs
      branch: documentation
      repo: https://github.com/ebu/mcma-libraries-dotnet.git
    id: UseToSign
    path: ../mcma-libraries-dotnet/AWS/Mcma.Aws.Client/AwsSigningExtensions.cs
    startLine: 14
  assemblies:
  - Mcma.Aws.Client
  namespace: Mcma.Aws.Client
  syntax:
    content: public static byte[] UseToSign(this byte[] key, string data)
    parameters:
    - id: key
      type: System.Byte[]
    - id: data
      type: System.String
    return:
      type: System.Byte[]
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function UseToSign(key As Byte(), data As String) As Byte()
  overload: Mcma.Aws.Client.AwsSigningExtensions.UseToSign*
  nameWithType.vb: AwsSigningExtensions.UseToSign(Byte(), String)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Mcma.Aws.Client.AwsSigningExtensions.UseToSign(System.Byte(), System.String)
  name.vb: UseToSign(Byte(), String)
references:
- uid: Mcma.Aws.Client
  commentId: N:Mcma.Aws.Client
  name: Mcma.Aws.Client
  nameWithType: Mcma.Aws.Client
  fullName: Mcma.Aws.Client
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Mcma.Aws.Client.AwsSigningExtensions.Hash*
  commentId: Overload:Mcma.Aws.Client.AwsSigningExtensions.Hash
  name: Hash
  nameWithType: AwsSigningExtensions.Hash
  fullName: Mcma.Aws.Client.AwsSigningExtensions.Hash
- uid: System.Security.Cryptography.HashAlgorithm
  commentId: T:System.Security.Cryptography.HashAlgorithm
  parent: System.Security.Cryptography
  isExternal: true
  name: HashAlgorithm
  nameWithType: HashAlgorithm
  fullName: System.Security.Cryptography.HashAlgorithm
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Cryptography
  commentId: N:System.Security.Cryptography
  isExternal: true
  name: System.Security.Cryptography
  nameWithType: System.Security.Cryptography
  fullName: System.Security.Cryptography
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Mcma.Aws.Client.AwsSigningExtensions.UseToSign*
  commentId: Overload:Mcma.Aws.Client.AwsSigningExtensions.UseToSign
  name: UseToSign
  nameWithType: AwsSigningExtensions.UseToSign
  fullName: Mcma.Aws.Client.AwsSigningExtensions.UseToSign
