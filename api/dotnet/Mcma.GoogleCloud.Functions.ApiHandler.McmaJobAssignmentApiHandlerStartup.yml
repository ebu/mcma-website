### YamlMime:ManagedReference
items:
- uid: Mcma.GoogleCloud.Functions.ApiHandler.McmaJobAssignmentApiHandlerStartup
  commentId: T:Mcma.GoogleCloud.Functions.ApiHandler.McmaJobAssignmentApiHandlerStartup
  id: McmaJobAssignmentApiHandlerStartup
  parent: Mcma.GoogleCloud.Functions.ApiHandler
  children:
  - Mcma.GoogleCloud.Functions.ApiHandler.McmaJobAssignmentApiHandlerStartup.AddAdditionalRoutes(Mcma.Api.McmaApiBuilder)
  - Mcma.GoogleCloud.Functions.ApiHandler.McmaJobAssignmentApiHandlerStartup.ApplicationName
  - Mcma.GoogleCloud.Functions.ApiHandler.McmaJobAssignmentApiHandlerStartup.BuildFirestore(Mcma.GoogleCloud.Firestore.FirestoreTableBuilder)
  - Mcma.GoogleCloud.Functions.ApiHandler.McmaJobAssignmentApiHandlerStartup.ConfigureAdditionalServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  - Mcma.GoogleCloud.Functions.ApiHandler.McmaJobAssignmentApiHandlerStartup.ConfigureServices(Microsoft.AspNetCore.Hosting.WebHostBuilderContext,Microsoft.Extensions.DependencyInjection.IServiceCollection)
  - Mcma.GoogleCloud.Functions.ApiHandler.McmaJobAssignmentApiHandlerStartup.WorkerPubSubTopic
  langs:
  - csharp
  - vb
  name: McmaJobAssignmentApiHandlerStartup
  nameWithType: McmaJobAssignmentApiHandlerStartup
  fullName: Mcma.GoogleCloud.Functions.ApiHandler.McmaJobAssignmentApiHandlerStartup
  type: Class
  source:
    remote:
      path: GoogleCloud/Mcma.GoogleCloud.Functions.ApiHandler/McmaJobAssignmentApiHandlerStartup.cs
      branch: documentation
      repo: https://github.com/ebu/mcma-libraries-dotnet.git
    id: McmaJobAssignmentApiHandlerStartup
    path: ../mcma-libraries-dotnet/GoogleCloud/Mcma.GoogleCloud.Functions.ApiHandler/McmaJobAssignmentApiHandlerStartup.cs
    startLine: 11
  assemblies:
  - Mcma.GoogleCloud.Functions.ApiHandler
  namespace: Mcma.GoogleCloud.Functions.ApiHandler
  syntax:
    content: 'public abstract class McmaJobAssignmentApiHandlerStartup : FunctionsStartup'
    content.vb: >-
      Public MustInherit Class McmaJobAssignmentApiHandlerStartup

          Inherits FunctionsStartup
  inheritance:
  - System.Object
  - Google.Cloud.Functions.Hosting.FunctionsStartup
  inheritedMembers:
  - Google.Cloud.Functions.Hosting.FunctionsStartup.Configure(Microsoft.AspNetCore.Hosting.WebHostBuilderContext,Microsoft.AspNetCore.Builder.IApplicationBuilder)
  - Google.Cloud.Functions.Hosting.FunctionsStartup.ConfigureAppConfiguration(Microsoft.AspNetCore.Hosting.WebHostBuilderContext,Microsoft.Extensions.Configuration.IConfigurationBuilder)
  - Google.Cloud.Functions.Hosting.FunctionsStartup.ConfigureLogging(Microsoft.AspNetCore.Hosting.WebHostBuilderContext,Microsoft.Extensions.Logging.ILoggingBuilder)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - System.Object.Mcma.Serialization.McmaJson.ToMcmaJson(System.Boolean)
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: Mcma.GoogleCloud.Functions.ApiHandler.McmaJobAssignmentApiHandlerStartup.ApplicationName
  commentId: P:Mcma.GoogleCloud.Functions.ApiHandler.McmaJobAssignmentApiHandlerStartup.ApplicationName
  id: ApplicationName
  parent: Mcma.GoogleCloud.Functions.ApiHandler.McmaJobAssignmentApiHandlerStartup
  langs:
  - csharp
  - vb
  name: ApplicationName
  nameWithType: McmaJobAssignmentApiHandlerStartup.ApplicationName
  fullName: Mcma.GoogleCloud.Functions.ApiHandler.McmaJobAssignmentApiHandlerStartup.ApplicationName
  type: Property
  source:
    remote:
      path: GoogleCloud/Mcma.GoogleCloud.Functions.ApiHandler/McmaJobAssignmentApiHandlerStartup.cs
      branch: documentation
      repo: https://github.com/ebu/mcma-libraries-dotnet.git
    id: ApplicationName
    path: ../mcma-libraries-dotnet/GoogleCloud/Mcma.GoogleCloud.Functions.ApiHandler/McmaJobAssignmentApiHandlerStartup.cs
    startLine: 13
  assemblies:
  - Mcma.GoogleCloud.Functions.ApiHandler
  namespace: Mcma.GoogleCloud.Functions.ApiHandler
  syntax:
    content: public abstract string ApplicationName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public MustOverride ReadOnly Property ApplicationName As String
  overload: Mcma.GoogleCloud.Functions.ApiHandler.McmaJobAssignmentApiHandlerStartup.ApplicationName*
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: Mcma.GoogleCloud.Functions.ApiHandler.McmaJobAssignmentApiHandlerStartup.WorkerPubSubTopic
  commentId: P:Mcma.GoogleCloud.Functions.ApiHandler.McmaJobAssignmentApiHandlerStartup.WorkerPubSubTopic
  id: WorkerPubSubTopic
  parent: Mcma.GoogleCloud.Functions.ApiHandler.McmaJobAssignmentApiHandlerStartup
  langs:
  - csharp
  - vb
  name: WorkerPubSubTopic
  nameWithType: McmaJobAssignmentApiHandlerStartup.WorkerPubSubTopic
  fullName: Mcma.GoogleCloud.Functions.ApiHandler.McmaJobAssignmentApiHandlerStartup.WorkerPubSubTopic
  type: Property
  source:
    remote:
      path: GoogleCloud/Mcma.GoogleCloud.Functions.ApiHandler/McmaJobAssignmentApiHandlerStartup.cs
      branch: documentation
      repo: https://github.com/ebu/mcma-libraries-dotnet.git
    id: WorkerPubSubTopic
    path: ../mcma-libraries-dotnet/GoogleCloud/Mcma.GoogleCloud.Functions.ApiHandler/McmaJobAssignmentApiHandlerStartup.cs
    startLine: 15
  assemblies:
  - Mcma.GoogleCloud.Functions.ApiHandler
  namespace: Mcma.GoogleCloud.Functions.ApiHandler
  syntax:
    content: public virtual string WorkerPubSubTopic { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overridable ReadOnly Property WorkerPubSubTopic As String
  overload: Mcma.GoogleCloud.Functions.ApiHandler.McmaJobAssignmentApiHandlerStartup.WorkerPubSubTopic*
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Mcma.GoogleCloud.Functions.ApiHandler.McmaJobAssignmentApiHandlerStartup.ConfigureAdditionalServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  commentId: M:Mcma.GoogleCloud.Functions.ApiHandler.McmaJobAssignmentApiHandlerStartup.ConfigureAdditionalServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  id: ConfigureAdditionalServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  parent: Mcma.GoogleCloud.Functions.ApiHandler.McmaJobAssignmentApiHandlerStartup
  langs:
  - csharp
  - vb
  name: ConfigureAdditionalServices(IServiceCollection)
  nameWithType: McmaJobAssignmentApiHandlerStartup.ConfigureAdditionalServices(IServiceCollection)
  fullName: Mcma.GoogleCloud.Functions.ApiHandler.McmaJobAssignmentApiHandlerStartup.ConfigureAdditionalServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  type: Method
  source:
    remote:
      path: GoogleCloud/Mcma.GoogleCloud.Functions.ApiHandler/McmaJobAssignmentApiHandlerStartup.cs
      branch: documentation
      repo: https://github.com/ebu/mcma-libraries-dotnet.git
    id: ConfigureAdditionalServices
    path: ../mcma-libraries-dotnet/GoogleCloud/Mcma.GoogleCloud.Functions.ApiHandler/McmaJobAssignmentApiHandlerStartup.cs
    startLine: 17
  assemblies:
  - Mcma.GoogleCloud.Functions.ApiHandler
  namespace: Mcma.GoogleCloud.Functions.ApiHandler
  syntax:
    content: protected virtual IServiceCollection ConfigureAdditionalServices(IServiceCollection services)
    parameters:
    - id: services
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
    return:
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
    content.vb: Protected Overridable Function ConfigureAdditionalServices(services As IServiceCollection) As IServiceCollection
  overload: Mcma.GoogleCloud.Functions.ApiHandler.McmaJobAssignmentApiHandlerStartup.ConfigureAdditionalServices*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Mcma.GoogleCloud.Functions.ApiHandler.McmaJobAssignmentApiHandlerStartup.BuildFirestore(Mcma.GoogleCloud.Firestore.FirestoreTableBuilder)
  commentId: M:Mcma.GoogleCloud.Functions.ApiHandler.McmaJobAssignmentApiHandlerStartup.BuildFirestore(Mcma.GoogleCloud.Firestore.FirestoreTableBuilder)
  id: BuildFirestore(Mcma.GoogleCloud.Firestore.FirestoreTableBuilder)
  parent: Mcma.GoogleCloud.Functions.ApiHandler.McmaJobAssignmentApiHandlerStartup
  langs:
  - csharp
  - vb
  name: BuildFirestore(FirestoreTableBuilder)
  nameWithType: McmaJobAssignmentApiHandlerStartup.BuildFirestore(FirestoreTableBuilder)
  fullName: Mcma.GoogleCloud.Functions.ApiHandler.McmaJobAssignmentApiHandlerStartup.BuildFirestore(Mcma.GoogleCloud.Firestore.FirestoreTableBuilder)
  type: Method
  source:
    remote:
      path: GoogleCloud/Mcma.GoogleCloud.Functions.ApiHandler/McmaJobAssignmentApiHandlerStartup.cs
      branch: documentation
      repo: https://github.com/ebu/mcma-libraries-dotnet.git
    id: BuildFirestore
    path: ../mcma-libraries-dotnet/GoogleCloud/Mcma.GoogleCloud.Functions.ApiHandler/McmaJobAssignmentApiHandlerStartup.cs
    startLine: 19
  assemblies:
  - Mcma.GoogleCloud.Functions.ApiHandler
  namespace: Mcma.GoogleCloud.Functions.ApiHandler
  syntax:
    content: protected virtual void BuildFirestore(FirestoreTableBuilder builder)
    parameters:
    - id: builder
      type: Mcma.GoogleCloud.Firestore.FirestoreTableBuilder
    content.vb: Protected Overridable Sub BuildFirestore(builder As FirestoreTableBuilder)
  overload: Mcma.GoogleCloud.Functions.ApiHandler.McmaJobAssignmentApiHandlerStartup.BuildFirestore*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Mcma.GoogleCloud.Functions.ApiHandler.McmaJobAssignmentApiHandlerStartup.AddAdditionalRoutes(Mcma.Api.McmaApiBuilder)
  commentId: M:Mcma.GoogleCloud.Functions.ApiHandler.McmaJobAssignmentApiHandlerStartup.AddAdditionalRoutes(Mcma.Api.McmaApiBuilder)
  id: AddAdditionalRoutes(Mcma.Api.McmaApiBuilder)
  parent: Mcma.GoogleCloud.Functions.ApiHandler.McmaJobAssignmentApiHandlerStartup
  langs:
  - csharp
  - vb
  name: AddAdditionalRoutes(McmaApiBuilder)
  nameWithType: McmaJobAssignmentApiHandlerStartup.AddAdditionalRoutes(McmaApiBuilder)
  fullName: Mcma.GoogleCloud.Functions.ApiHandler.McmaJobAssignmentApiHandlerStartup.AddAdditionalRoutes(Mcma.Api.McmaApiBuilder)
  type: Method
  source:
    remote:
      path: GoogleCloud/Mcma.GoogleCloud.Functions.ApiHandler/McmaJobAssignmentApiHandlerStartup.cs
      branch: documentation
      repo: https://github.com/ebu/mcma-libraries-dotnet.git
    id: AddAdditionalRoutes
    path: ../mcma-libraries-dotnet/GoogleCloud/Mcma.GoogleCloud.Functions.ApiHandler/McmaJobAssignmentApiHandlerStartup.cs
    startLine: 23
  assemblies:
  - Mcma.GoogleCloud.Functions.ApiHandler
  namespace: Mcma.GoogleCloud.Functions.ApiHandler
  syntax:
    content: protected virtual void AddAdditionalRoutes(McmaApiBuilder builder)
    parameters:
    - id: builder
      type: Mcma.Api.McmaApiBuilder
    content.vb: Protected Overridable Sub AddAdditionalRoutes(builder As McmaApiBuilder)
  overload: Mcma.GoogleCloud.Functions.ApiHandler.McmaJobAssignmentApiHandlerStartup.AddAdditionalRoutes*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Mcma.GoogleCloud.Functions.ApiHandler.McmaJobAssignmentApiHandlerStartup.ConfigureServices(Microsoft.AspNetCore.Hosting.WebHostBuilderContext,Microsoft.Extensions.DependencyInjection.IServiceCollection)
  commentId: M:Mcma.GoogleCloud.Functions.ApiHandler.McmaJobAssignmentApiHandlerStartup.ConfigureServices(Microsoft.AspNetCore.Hosting.WebHostBuilderContext,Microsoft.Extensions.DependencyInjection.IServiceCollection)
  id: ConfigureServices(Microsoft.AspNetCore.Hosting.WebHostBuilderContext,Microsoft.Extensions.DependencyInjection.IServiceCollection)
  parent: Mcma.GoogleCloud.Functions.ApiHandler.McmaJobAssignmentApiHandlerStartup
  langs:
  - csharp
  - vb
  name: ConfigureServices(WebHostBuilderContext, IServiceCollection)
  nameWithType: McmaJobAssignmentApiHandlerStartup.ConfigureServices(WebHostBuilderContext, IServiceCollection)
  fullName: Mcma.GoogleCloud.Functions.ApiHandler.McmaJobAssignmentApiHandlerStartup.ConfigureServices(Microsoft.AspNetCore.Hosting.WebHostBuilderContext, Microsoft.Extensions.DependencyInjection.IServiceCollection)
  type: Method
  source:
    remote:
      path: GoogleCloud/Mcma.GoogleCloud.Functions.ApiHandler/McmaJobAssignmentApiHandlerStartup.cs
      branch: documentation
      repo: https://github.com/ebu/mcma-libraries-dotnet.git
    id: ConfigureServices
    path: ../mcma-libraries-dotnet/GoogleCloud/Mcma.GoogleCloud.Functions.ApiHandler/McmaJobAssignmentApiHandlerStartup.cs
    startLine: 27
  assemblies:
  - Mcma.GoogleCloud.Functions.ApiHandler
  namespace: Mcma.GoogleCloud.Functions.ApiHandler
  syntax:
    content: public override void ConfigureServices(WebHostBuilderContext context, IServiceCollection services)
    parameters:
    - id: context
      type: Microsoft.AspNetCore.Hosting.WebHostBuilderContext
    - id: services
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
    content.vb: Public Overrides Sub ConfigureServices(context As WebHostBuilderContext, services As IServiceCollection)
  overridden: Google.Cloud.Functions.Hosting.FunctionsStartup.ConfigureServices(Microsoft.AspNetCore.Hosting.WebHostBuilderContext,Microsoft.Extensions.DependencyInjection.IServiceCollection)
  overload: Mcma.GoogleCloud.Functions.ApiHandler.McmaJobAssignmentApiHandlerStartup.ConfigureServices*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Mcma.GoogleCloud.Functions.ApiHandler
  commentId: N:Mcma.GoogleCloud.Functions.ApiHandler
  name: Mcma.GoogleCloud.Functions.ApiHandler
  nameWithType: Mcma.GoogleCloud.Functions.ApiHandler
  fullName: Mcma.GoogleCloud.Functions.ApiHandler
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Google.Cloud.Functions.Hosting.FunctionsStartup
  commentId: T:Google.Cloud.Functions.Hosting.FunctionsStartup
  parent: Google.Cloud.Functions.Hosting
  isExternal: true
  name: FunctionsStartup
  nameWithType: FunctionsStartup
  fullName: Google.Cloud.Functions.Hosting.FunctionsStartup
- uid: Google.Cloud.Functions.Hosting.FunctionsStartup.Configure(Microsoft.AspNetCore.Hosting.WebHostBuilderContext,Microsoft.AspNetCore.Builder.IApplicationBuilder)
  commentId: M:Google.Cloud.Functions.Hosting.FunctionsStartup.Configure(Microsoft.AspNetCore.Hosting.WebHostBuilderContext,Microsoft.AspNetCore.Builder.IApplicationBuilder)
  parent: Google.Cloud.Functions.Hosting.FunctionsStartup
  isExternal: true
  name: Configure(WebHostBuilderContext, IApplicationBuilder)
  nameWithType: FunctionsStartup.Configure(WebHostBuilderContext, IApplicationBuilder)
  fullName: Google.Cloud.Functions.Hosting.FunctionsStartup.Configure(Microsoft.AspNetCore.Hosting.WebHostBuilderContext, Microsoft.AspNetCore.Builder.IApplicationBuilder)
  spec.csharp:
  - uid: Google.Cloud.Functions.Hosting.FunctionsStartup.Configure(Microsoft.AspNetCore.Hosting.WebHostBuilderContext,Microsoft.AspNetCore.Builder.IApplicationBuilder)
    name: Configure
    nameWithType: FunctionsStartup.Configure
    fullName: Google.Cloud.Functions.Hosting.FunctionsStartup.Configure
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Hosting.WebHostBuilderContext
    name: WebHostBuilderContext
    nameWithType: WebHostBuilderContext
    fullName: Microsoft.AspNetCore.Hosting.WebHostBuilderContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Builder.IApplicationBuilder
    name: IApplicationBuilder
    nameWithType: IApplicationBuilder
    fullName: Microsoft.AspNetCore.Builder.IApplicationBuilder
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Cloud.Functions.Hosting.FunctionsStartup.Configure(Microsoft.AspNetCore.Hosting.WebHostBuilderContext,Microsoft.AspNetCore.Builder.IApplicationBuilder)
    name: Configure
    nameWithType: FunctionsStartup.Configure
    fullName: Google.Cloud.Functions.Hosting.FunctionsStartup.Configure
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Hosting.WebHostBuilderContext
    name: WebHostBuilderContext
    nameWithType: WebHostBuilderContext
    fullName: Microsoft.AspNetCore.Hosting.WebHostBuilderContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Builder.IApplicationBuilder
    name: IApplicationBuilder
    nameWithType: IApplicationBuilder
    fullName: Microsoft.AspNetCore.Builder.IApplicationBuilder
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Cloud.Functions.Hosting.FunctionsStartup.ConfigureAppConfiguration(Microsoft.AspNetCore.Hosting.WebHostBuilderContext,Microsoft.Extensions.Configuration.IConfigurationBuilder)
  commentId: M:Google.Cloud.Functions.Hosting.FunctionsStartup.ConfigureAppConfiguration(Microsoft.AspNetCore.Hosting.WebHostBuilderContext,Microsoft.Extensions.Configuration.IConfigurationBuilder)
  parent: Google.Cloud.Functions.Hosting.FunctionsStartup
  isExternal: true
  name: ConfigureAppConfiguration(WebHostBuilderContext, IConfigurationBuilder)
  nameWithType: FunctionsStartup.ConfigureAppConfiguration(WebHostBuilderContext, IConfigurationBuilder)
  fullName: Google.Cloud.Functions.Hosting.FunctionsStartup.ConfigureAppConfiguration(Microsoft.AspNetCore.Hosting.WebHostBuilderContext, Microsoft.Extensions.Configuration.IConfigurationBuilder)
  spec.csharp:
  - uid: Google.Cloud.Functions.Hosting.FunctionsStartup.ConfigureAppConfiguration(Microsoft.AspNetCore.Hosting.WebHostBuilderContext,Microsoft.Extensions.Configuration.IConfigurationBuilder)
    name: ConfigureAppConfiguration
    nameWithType: FunctionsStartup.ConfigureAppConfiguration
    fullName: Google.Cloud.Functions.Hosting.FunctionsStartup.ConfigureAppConfiguration
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Hosting.WebHostBuilderContext
    name: WebHostBuilderContext
    nameWithType: WebHostBuilderContext
    fullName: Microsoft.AspNetCore.Hosting.WebHostBuilderContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.Configuration.IConfigurationBuilder
    name: IConfigurationBuilder
    nameWithType: IConfigurationBuilder
    fullName: Microsoft.Extensions.Configuration.IConfigurationBuilder
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Cloud.Functions.Hosting.FunctionsStartup.ConfigureAppConfiguration(Microsoft.AspNetCore.Hosting.WebHostBuilderContext,Microsoft.Extensions.Configuration.IConfigurationBuilder)
    name: ConfigureAppConfiguration
    nameWithType: FunctionsStartup.ConfigureAppConfiguration
    fullName: Google.Cloud.Functions.Hosting.FunctionsStartup.ConfigureAppConfiguration
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Hosting.WebHostBuilderContext
    name: WebHostBuilderContext
    nameWithType: WebHostBuilderContext
    fullName: Microsoft.AspNetCore.Hosting.WebHostBuilderContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.Configuration.IConfigurationBuilder
    name: IConfigurationBuilder
    nameWithType: IConfigurationBuilder
    fullName: Microsoft.Extensions.Configuration.IConfigurationBuilder
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Cloud.Functions.Hosting.FunctionsStartup.ConfigureLogging(Microsoft.AspNetCore.Hosting.WebHostBuilderContext,Microsoft.Extensions.Logging.ILoggingBuilder)
  commentId: M:Google.Cloud.Functions.Hosting.FunctionsStartup.ConfigureLogging(Microsoft.AspNetCore.Hosting.WebHostBuilderContext,Microsoft.Extensions.Logging.ILoggingBuilder)
  parent: Google.Cloud.Functions.Hosting.FunctionsStartup
  isExternal: true
  name: ConfigureLogging(WebHostBuilderContext, ILoggingBuilder)
  nameWithType: FunctionsStartup.ConfigureLogging(WebHostBuilderContext, ILoggingBuilder)
  fullName: Google.Cloud.Functions.Hosting.FunctionsStartup.ConfigureLogging(Microsoft.AspNetCore.Hosting.WebHostBuilderContext, Microsoft.Extensions.Logging.ILoggingBuilder)
  spec.csharp:
  - uid: Google.Cloud.Functions.Hosting.FunctionsStartup.ConfigureLogging(Microsoft.AspNetCore.Hosting.WebHostBuilderContext,Microsoft.Extensions.Logging.ILoggingBuilder)
    name: ConfigureLogging
    nameWithType: FunctionsStartup.ConfigureLogging
    fullName: Google.Cloud.Functions.Hosting.FunctionsStartup.ConfigureLogging
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Hosting.WebHostBuilderContext
    name: WebHostBuilderContext
    nameWithType: WebHostBuilderContext
    fullName: Microsoft.AspNetCore.Hosting.WebHostBuilderContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.Logging.ILoggingBuilder
    name: ILoggingBuilder
    nameWithType: ILoggingBuilder
    fullName: Microsoft.Extensions.Logging.ILoggingBuilder
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Cloud.Functions.Hosting.FunctionsStartup.ConfigureLogging(Microsoft.AspNetCore.Hosting.WebHostBuilderContext,Microsoft.Extensions.Logging.ILoggingBuilder)
    name: ConfigureLogging
    nameWithType: FunctionsStartup.ConfigureLogging
    fullName: Google.Cloud.Functions.Hosting.FunctionsStartup.ConfigureLogging
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Hosting.WebHostBuilderContext
    name: WebHostBuilderContext
    nameWithType: WebHostBuilderContext
    fullName: Microsoft.AspNetCore.Hosting.WebHostBuilderContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.Logging.ILoggingBuilder
    name: ILoggingBuilder
    nameWithType: ILoggingBuilder
    fullName: Microsoft.Extensions.Logging.ILoggingBuilder
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Mcma.Serialization.McmaJson.ToMcmaJson(System.Boolean)
  commentId: M:Mcma.Serialization.McmaJson.ToMcmaJson(System.Object,System.Boolean)
  parent: Mcma.Serialization.McmaJson
  definition: Mcma.Serialization.McmaJson.ToMcmaJson(System.Object,System.Boolean)
  name: ToMcmaJson(Boolean)
  nameWithType: McmaJson.ToMcmaJson(Boolean)
  fullName: Mcma.Serialization.McmaJson.ToMcmaJson(System.Boolean)
  spec.csharp:
  - uid: Mcma.Serialization.McmaJson.ToMcmaJson(System.Boolean)
    name: ToMcmaJson
    nameWithType: McmaJson.ToMcmaJson
    fullName: Mcma.Serialization.McmaJson.ToMcmaJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mcma.Serialization.McmaJson.ToMcmaJson(System.Boolean)
    name: ToMcmaJson
    nameWithType: McmaJson.ToMcmaJson
    fullName: Mcma.Serialization.McmaJson.ToMcmaJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Google.Cloud.Functions.Hosting
  commentId: N:Google.Cloud.Functions.Hosting
  isExternal: true
  name: Google.Cloud.Functions.Hosting
  nameWithType: Google.Cloud.Functions.Hosting
  fullName: Google.Cloud.Functions.Hosting
- uid: Mcma.Serialization.McmaJson.ToMcmaJson(System.Object,System.Boolean)
  commentId: M:Mcma.Serialization.McmaJson.ToMcmaJson(System.Object,System.Boolean)
  isExternal: true
  name: ToMcmaJson(Object, Boolean)
  nameWithType: McmaJson.ToMcmaJson(Object, Boolean)
  fullName: Mcma.Serialization.McmaJson.ToMcmaJson(System.Object, System.Boolean)
  spec.csharp:
  - uid: Mcma.Serialization.McmaJson.ToMcmaJson(System.Object,System.Boolean)
    name: ToMcmaJson
    nameWithType: McmaJson.ToMcmaJson
    fullName: Mcma.Serialization.McmaJson.ToMcmaJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mcma.Serialization.McmaJson.ToMcmaJson(System.Object,System.Boolean)
    name: ToMcmaJson
    nameWithType: McmaJson.ToMcmaJson
    fullName: Mcma.Serialization.McmaJson.ToMcmaJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mcma.Serialization.McmaJson
  commentId: T:Mcma.Serialization.McmaJson
  parent: Mcma.Serialization
  name: McmaJson
  nameWithType: McmaJson
  fullName: Mcma.Serialization.McmaJson
- uid: Mcma.Serialization
  commentId: N:Mcma.Serialization
  name: Mcma.Serialization
  nameWithType: Mcma.Serialization
  fullName: Mcma.Serialization
- uid: Mcma.GoogleCloud.Functions.ApiHandler.McmaJobAssignmentApiHandlerStartup.ApplicationName*
  commentId: Overload:Mcma.GoogleCloud.Functions.ApiHandler.McmaJobAssignmentApiHandlerStartup.ApplicationName
  name: ApplicationName
  nameWithType: McmaJobAssignmentApiHandlerStartup.ApplicationName
  fullName: Mcma.GoogleCloud.Functions.ApiHandler.McmaJobAssignmentApiHandlerStartup.ApplicationName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Mcma.GoogleCloud.Functions.ApiHandler.McmaJobAssignmentApiHandlerStartup.WorkerPubSubTopic*
  commentId: Overload:Mcma.GoogleCloud.Functions.ApiHandler.McmaJobAssignmentApiHandlerStartup.WorkerPubSubTopic
  name: WorkerPubSubTopic
  nameWithType: McmaJobAssignmentApiHandlerStartup.WorkerPubSubTopic
  fullName: Mcma.GoogleCloud.Functions.ApiHandler.McmaJobAssignmentApiHandlerStartup.WorkerPubSubTopic
- uid: Mcma.GoogleCloud.Functions.ApiHandler.McmaJobAssignmentApiHandlerStartup.ConfigureAdditionalServices*
  commentId: Overload:Mcma.GoogleCloud.Functions.ApiHandler.McmaJobAssignmentApiHandlerStartup.ConfigureAdditionalServices
  name: ConfigureAdditionalServices
  nameWithType: McmaJobAssignmentApiHandlerStartup.ConfigureAdditionalServices
  fullName: Mcma.GoogleCloud.Functions.ApiHandler.McmaJobAssignmentApiHandlerStartup.ConfigureAdditionalServices
- uid: Microsoft.Extensions.DependencyInjection.IServiceCollection
  commentId: T:Microsoft.Extensions.DependencyInjection.IServiceCollection
  parent: Microsoft.Extensions.DependencyInjection
  isExternal: true
  name: IServiceCollection
  nameWithType: IServiceCollection
  fullName: Microsoft.Extensions.DependencyInjection.IServiceCollection
- uid: Microsoft.Extensions.DependencyInjection
  commentId: N:Microsoft.Extensions.DependencyInjection
  isExternal: true
  name: Microsoft.Extensions.DependencyInjection
  nameWithType: Microsoft.Extensions.DependencyInjection
  fullName: Microsoft.Extensions.DependencyInjection
- uid: Mcma.GoogleCloud.Functions.ApiHandler.McmaJobAssignmentApiHandlerStartup.BuildFirestore*
  commentId: Overload:Mcma.GoogleCloud.Functions.ApiHandler.McmaJobAssignmentApiHandlerStartup.BuildFirestore
  name: BuildFirestore
  nameWithType: McmaJobAssignmentApiHandlerStartup.BuildFirestore
  fullName: Mcma.GoogleCloud.Functions.ApiHandler.McmaJobAssignmentApiHandlerStartup.BuildFirestore
- uid: Mcma.GoogleCloud.Firestore.FirestoreTableBuilder
  commentId: T:Mcma.GoogleCloud.Firestore.FirestoreTableBuilder
  parent: Mcma.GoogleCloud.Firestore
  name: FirestoreTableBuilder
  nameWithType: FirestoreTableBuilder
  fullName: Mcma.GoogleCloud.Firestore.FirestoreTableBuilder
- uid: Mcma.GoogleCloud.Firestore
  commentId: N:Mcma.GoogleCloud.Firestore
  name: Mcma.GoogleCloud.Firestore
  nameWithType: Mcma.GoogleCloud.Firestore
  fullName: Mcma.GoogleCloud.Firestore
- uid: Mcma.GoogleCloud.Functions.ApiHandler.McmaJobAssignmentApiHandlerStartup.AddAdditionalRoutes*
  commentId: Overload:Mcma.GoogleCloud.Functions.ApiHandler.McmaJobAssignmentApiHandlerStartup.AddAdditionalRoutes
  name: AddAdditionalRoutes
  nameWithType: McmaJobAssignmentApiHandlerStartup.AddAdditionalRoutes
  fullName: Mcma.GoogleCloud.Functions.ApiHandler.McmaJobAssignmentApiHandlerStartup.AddAdditionalRoutes
- uid: Mcma.Api.McmaApiBuilder
  commentId: T:Mcma.Api.McmaApiBuilder
  parent: Mcma.Api
  name: McmaApiBuilder
  nameWithType: McmaApiBuilder
  fullName: Mcma.Api.McmaApiBuilder
- uid: Mcma.Api
  commentId: N:Mcma.Api
  name: Mcma.Api
  nameWithType: Mcma.Api
  fullName: Mcma.Api
- uid: Google.Cloud.Functions.Hosting.FunctionsStartup.ConfigureServices(Microsoft.AspNetCore.Hosting.WebHostBuilderContext,Microsoft.Extensions.DependencyInjection.IServiceCollection)
  commentId: M:Google.Cloud.Functions.Hosting.FunctionsStartup.ConfigureServices(Microsoft.AspNetCore.Hosting.WebHostBuilderContext,Microsoft.Extensions.DependencyInjection.IServiceCollection)
  parent: Google.Cloud.Functions.Hosting.FunctionsStartup
  isExternal: true
  name: ConfigureServices(WebHostBuilderContext, IServiceCollection)
  nameWithType: FunctionsStartup.ConfigureServices(WebHostBuilderContext, IServiceCollection)
  fullName: Google.Cloud.Functions.Hosting.FunctionsStartup.ConfigureServices(Microsoft.AspNetCore.Hosting.WebHostBuilderContext, Microsoft.Extensions.DependencyInjection.IServiceCollection)
  spec.csharp:
  - uid: Google.Cloud.Functions.Hosting.FunctionsStartup.ConfigureServices(Microsoft.AspNetCore.Hosting.WebHostBuilderContext,Microsoft.Extensions.DependencyInjection.IServiceCollection)
    name: ConfigureServices
    nameWithType: FunctionsStartup.ConfigureServices
    fullName: Google.Cloud.Functions.Hosting.FunctionsStartup.ConfigureServices
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Hosting.WebHostBuilderContext
    name: WebHostBuilderContext
    nameWithType: WebHostBuilderContext
    fullName: Microsoft.AspNetCore.Hosting.WebHostBuilderContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.DependencyInjection.IServiceCollection
    name: IServiceCollection
    nameWithType: IServiceCollection
    fullName: Microsoft.Extensions.DependencyInjection.IServiceCollection
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Cloud.Functions.Hosting.FunctionsStartup.ConfigureServices(Microsoft.AspNetCore.Hosting.WebHostBuilderContext,Microsoft.Extensions.DependencyInjection.IServiceCollection)
    name: ConfigureServices
    nameWithType: FunctionsStartup.ConfigureServices
    fullName: Google.Cloud.Functions.Hosting.FunctionsStartup.ConfigureServices
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Hosting.WebHostBuilderContext
    name: WebHostBuilderContext
    nameWithType: WebHostBuilderContext
    fullName: Microsoft.AspNetCore.Hosting.WebHostBuilderContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.DependencyInjection.IServiceCollection
    name: IServiceCollection
    nameWithType: IServiceCollection
    fullName: Microsoft.Extensions.DependencyInjection.IServiceCollection
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mcma.GoogleCloud.Functions.ApiHandler.McmaJobAssignmentApiHandlerStartup.ConfigureServices*
  commentId: Overload:Mcma.GoogleCloud.Functions.ApiHandler.McmaJobAssignmentApiHandlerStartup.ConfigureServices
  name: ConfigureServices
  nameWithType: McmaJobAssignmentApiHandlerStartup.ConfigureServices
  fullName: Mcma.GoogleCloud.Functions.ApiHandler.McmaJobAssignmentApiHandlerStartup.ConfigureServices
- uid: Microsoft.AspNetCore.Hosting.WebHostBuilderContext
  commentId: T:Microsoft.AspNetCore.Hosting.WebHostBuilderContext
  parent: Microsoft.AspNetCore.Hosting
  isExternal: true
  name: WebHostBuilderContext
  nameWithType: WebHostBuilderContext
  fullName: Microsoft.AspNetCore.Hosting.WebHostBuilderContext
- uid: Microsoft.AspNetCore.Hosting
  commentId: N:Microsoft.AspNetCore.Hosting
  isExternal: true
  name: Microsoft.AspNetCore.Hosting
  nameWithType: Microsoft.AspNetCore.Hosting
  fullName: Microsoft.AspNetCore.Hosting
