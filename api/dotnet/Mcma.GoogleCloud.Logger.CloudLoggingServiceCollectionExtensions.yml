### YamlMime:ManagedReference
items:
- uid: Mcma.GoogleCloud.Logger.CloudLoggingServiceCollectionExtensions
  commentId: T:Mcma.GoogleCloud.Logger.CloudLoggingServiceCollectionExtensions
  id: CloudLoggingServiceCollectionExtensions
  parent: Mcma.GoogleCloud.Logger
  children:
  - Mcma.GoogleCloud.Logger.CloudLoggingServiceCollectionExtensions.AddMcmaCloudLogging(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Mcma.Logging.LoggerProviderOptions},System.Action{Google.Cloud.Logging.V2.LoggingServiceV2ClientBuilder})
  - Mcma.GoogleCloud.Logger.CloudLoggingServiceCollectionExtensions.AddMcmaCloudLogging(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.String,System.Action{Google.Cloud.Logging.V2.LoggingServiceV2ClientBuilder})
  langs:
  - csharp
  - vb
  name: CloudLoggingServiceCollectionExtensions
  nameWithType: CloudLoggingServiceCollectionExtensions
  fullName: Mcma.GoogleCloud.Logger.CloudLoggingServiceCollectionExtensions
  type: Class
  source:
    remote:
      path: GoogleCloud/Mcma.GoogleCloud.Logger/CloudLoggingServiceCollectionExtensions.cs
      branch: documentation
      repo: https://github.com/ebu/mcma-libraries-dotnet.git
    id: CloudLoggingServiceCollectionExtensions
    path: ../mcma-libraries-dotnet/GoogleCloud/Mcma.GoogleCloud.Logger/CloudLoggingServiceCollectionExtensions.cs
    startLine: 7
  assemblies:
  - Mcma.GoogleCloud.Logger
  namespace: Mcma.GoogleCloud.Logger
  syntax:
    content: public static class CloudLoggingServiceCollectionExtensions
    content.vb: Public Module CloudLoggingServiceCollectionExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Mcma.GoogleCloud.Logger.CloudLoggingServiceCollectionExtensions.AddMcmaCloudLogging(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Mcma.Logging.LoggerProviderOptions},System.Action{Google.Cloud.Logging.V2.LoggingServiceV2ClientBuilder})
  commentId: M:Mcma.GoogleCloud.Logger.CloudLoggingServiceCollectionExtensions.AddMcmaCloudLogging(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Mcma.Logging.LoggerProviderOptions},System.Action{Google.Cloud.Logging.V2.LoggingServiceV2ClientBuilder})
  id: AddMcmaCloudLogging(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Mcma.Logging.LoggerProviderOptions},System.Action{Google.Cloud.Logging.V2.LoggingServiceV2ClientBuilder})
  isExtensionMethod: true
  parent: Mcma.GoogleCloud.Logger.CloudLoggingServiceCollectionExtensions
  langs:
  - csharp
  - vb
  name: AddMcmaCloudLogging(IServiceCollection, Action<LoggerProviderOptions>, Action<LoggingServiceV2ClientBuilder>)
  nameWithType: CloudLoggingServiceCollectionExtensions.AddMcmaCloudLogging(IServiceCollection, Action<LoggerProviderOptions>, Action<LoggingServiceV2ClientBuilder>)
  fullName: Mcma.GoogleCloud.Logger.CloudLoggingServiceCollectionExtensions.AddMcmaCloudLogging(Microsoft.Extensions.DependencyInjection.IServiceCollection, System.Action<Mcma.Logging.LoggerProviderOptions>, System.Action<Google.Cloud.Logging.V2.LoggingServiceV2ClientBuilder>)
  type: Method
  source:
    remote:
      path: GoogleCloud/Mcma.GoogleCloud.Logger/CloudLoggingServiceCollectionExtensions.cs
      branch: documentation
      repo: https://github.com/ebu/mcma-libraries-dotnet.git
    id: AddMcmaCloudLogging
    path: ../mcma-libraries-dotnet/GoogleCloud/Mcma.GoogleCloud.Logger/CloudLoggingServiceCollectionExtensions.cs
    startLine: 9
  assemblies:
  - Mcma.GoogleCloud.Logger
  namespace: Mcma.GoogleCloud.Logger
  syntax:
    content: public static IServiceCollection AddMcmaCloudLogging(this IServiceCollection services, Action<LoggerProviderOptions> configureOptions, Action<LoggingServiceV2ClientBuilder> configureClient = null)
    parameters:
    - id: services
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
    - id: configureOptions
      type: System.Action{Mcma.Logging.LoggerProviderOptions}
    - id: configureClient
      type: System.Action{Google.Cloud.Logging.V2.LoggingServiceV2ClientBuilder}
    return:
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AddMcmaCloudLogging(services As IServiceCollection, configureOptions As Action(Of LoggerProviderOptions), configureClient As Action(Of LoggingServiceV2ClientBuilder) = Nothing) As IServiceCollection
  overload: Mcma.GoogleCloud.Logger.CloudLoggingServiceCollectionExtensions.AddMcmaCloudLogging*
  nameWithType.vb: CloudLoggingServiceCollectionExtensions.AddMcmaCloudLogging(IServiceCollection, Action(Of LoggerProviderOptions), Action(Of LoggingServiceV2ClientBuilder))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Mcma.GoogleCloud.Logger.CloudLoggingServiceCollectionExtensions.AddMcmaCloudLogging(Microsoft.Extensions.DependencyInjection.IServiceCollection, System.Action(Of Mcma.Logging.LoggerProviderOptions), System.Action(Of Google.Cloud.Logging.V2.LoggingServiceV2ClientBuilder))
  name.vb: AddMcmaCloudLogging(IServiceCollection, Action(Of LoggerProviderOptions), Action(Of LoggingServiceV2ClientBuilder))
- uid: Mcma.GoogleCloud.Logger.CloudLoggingServiceCollectionExtensions.AddMcmaCloudLogging(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.String,System.Action{Google.Cloud.Logging.V2.LoggingServiceV2ClientBuilder})
  commentId: M:Mcma.GoogleCloud.Logger.CloudLoggingServiceCollectionExtensions.AddMcmaCloudLogging(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.String,System.Action{Google.Cloud.Logging.V2.LoggingServiceV2ClientBuilder})
  id: AddMcmaCloudLogging(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.String,System.Action{Google.Cloud.Logging.V2.LoggingServiceV2ClientBuilder})
  isExtensionMethod: true
  parent: Mcma.GoogleCloud.Logger.CloudLoggingServiceCollectionExtensions
  langs:
  - csharp
  - vb
  name: AddMcmaCloudLogging(IServiceCollection, String, Action<LoggingServiceV2ClientBuilder>)
  nameWithType: CloudLoggingServiceCollectionExtensions.AddMcmaCloudLogging(IServiceCollection, String, Action<LoggingServiceV2ClientBuilder>)
  fullName: Mcma.GoogleCloud.Logger.CloudLoggingServiceCollectionExtensions.AddMcmaCloudLogging(Microsoft.Extensions.DependencyInjection.IServiceCollection, System.String, System.Action<Google.Cloud.Logging.V2.LoggingServiceV2ClientBuilder>)
  type: Method
  source:
    remote:
      path: GoogleCloud/Mcma.GoogleCloud.Logger/CloudLoggingServiceCollectionExtensions.cs
      branch: documentation
      repo: https://github.com/ebu/mcma-libraries-dotnet.git
    id: AddMcmaCloudLogging
    path: ../mcma-libraries-dotnet/GoogleCloud/Mcma.GoogleCloud.Logger/CloudLoggingServiceCollectionExtensions.cs
    startLine: 21
  assemblies:
  - Mcma.GoogleCloud.Logger
  namespace: Mcma.GoogleCloud.Logger
  syntax:
    content: public static IServiceCollection AddMcmaCloudLogging(this IServiceCollection services, string source, Action<LoggingServiceV2ClientBuilder> configureClient = null)
    parameters:
    - id: services
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
    - id: source
      type: System.String
    - id: configureClient
      type: System.Action{Google.Cloud.Logging.V2.LoggingServiceV2ClientBuilder}
    return:
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AddMcmaCloudLogging(services As IServiceCollection, source As String, configureClient As Action(Of LoggingServiceV2ClientBuilder) = Nothing) As IServiceCollection
  overload: Mcma.GoogleCloud.Logger.CloudLoggingServiceCollectionExtensions.AddMcmaCloudLogging*
  nameWithType.vb: CloudLoggingServiceCollectionExtensions.AddMcmaCloudLogging(IServiceCollection, String, Action(Of LoggingServiceV2ClientBuilder))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Mcma.GoogleCloud.Logger.CloudLoggingServiceCollectionExtensions.AddMcmaCloudLogging(Microsoft.Extensions.DependencyInjection.IServiceCollection, System.String, System.Action(Of Google.Cloud.Logging.V2.LoggingServiceV2ClientBuilder))
  name.vb: AddMcmaCloudLogging(IServiceCollection, String, Action(Of LoggingServiceV2ClientBuilder))
references:
- uid: Mcma.GoogleCloud.Logger
  commentId: N:Mcma.GoogleCloud.Logger
  name: Mcma.GoogleCloud.Logger
  nameWithType: Mcma.GoogleCloud.Logger
  fullName: Mcma.GoogleCloud.Logger
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Mcma.GoogleCloud.Logger.CloudLoggingServiceCollectionExtensions.AddMcmaCloudLogging*
  commentId: Overload:Mcma.GoogleCloud.Logger.CloudLoggingServiceCollectionExtensions.AddMcmaCloudLogging
  name: AddMcmaCloudLogging
  nameWithType: CloudLoggingServiceCollectionExtensions.AddMcmaCloudLogging
  fullName: Mcma.GoogleCloud.Logger.CloudLoggingServiceCollectionExtensions.AddMcmaCloudLogging
- uid: Microsoft.Extensions.DependencyInjection.IServiceCollection
  commentId: T:Microsoft.Extensions.DependencyInjection.IServiceCollection
  parent: Microsoft.Extensions.DependencyInjection
  isExternal: true
  name: IServiceCollection
  nameWithType: IServiceCollection
  fullName: Microsoft.Extensions.DependencyInjection.IServiceCollection
- uid: System.Action{Mcma.Logging.LoggerProviderOptions}
  commentId: T:System.Action{Mcma.Logging.LoggerProviderOptions}
  parent: System
  definition: System.Action`1
  name: Action<LoggerProviderOptions>
  nameWithType: Action<LoggerProviderOptions>
  fullName: System.Action<Mcma.Logging.LoggerProviderOptions>
  nameWithType.vb: Action(Of LoggerProviderOptions)
  fullName.vb: System.Action(Of Mcma.Logging.LoggerProviderOptions)
  name.vb: Action(Of LoggerProviderOptions)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mcma.Logging.LoggerProviderOptions
    name: LoggerProviderOptions
    nameWithType: LoggerProviderOptions
    fullName: Mcma.Logging.LoggerProviderOptions
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mcma.Logging.LoggerProviderOptions
    name: LoggerProviderOptions
    nameWithType: LoggerProviderOptions
    fullName: Mcma.Logging.LoggerProviderOptions
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action{Google.Cloud.Logging.V2.LoggingServiceV2ClientBuilder}
  commentId: T:System.Action{Google.Cloud.Logging.V2.LoggingServiceV2ClientBuilder}
  parent: System
  definition: System.Action`1
  name: Action<LoggingServiceV2ClientBuilder>
  nameWithType: Action<LoggingServiceV2ClientBuilder>
  fullName: System.Action<Google.Cloud.Logging.V2.LoggingServiceV2ClientBuilder>
  nameWithType.vb: Action(Of LoggingServiceV2ClientBuilder)
  fullName.vb: System.Action(Of Google.Cloud.Logging.V2.LoggingServiceV2ClientBuilder)
  name.vb: Action(Of LoggingServiceV2ClientBuilder)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Cloud.Logging.V2.LoggingServiceV2ClientBuilder
    name: LoggingServiceV2ClientBuilder
    nameWithType: LoggingServiceV2ClientBuilder
    fullName: Google.Cloud.Logging.V2.LoggingServiceV2ClientBuilder
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Cloud.Logging.V2.LoggingServiceV2ClientBuilder
    name: LoggingServiceV2ClientBuilder
    nameWithType: LoggingServiceV2ClientBuilder
    fullName: Google.Cloud.Logging.V2.LoggingServiceV2ClientBuilder
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.DependencyInjection
  commentId: N:Microsoft.Extensions.DependencyInjection
  isExternal: true
  name: Microsoft.Extensions.DependencyInjection
  nameWithType: Microsoft.Extensions.DependencyInjection
  fullName: Microsoft.Extensions.DependencyInjection
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
