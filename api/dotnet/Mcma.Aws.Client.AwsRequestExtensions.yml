### YamlMime:ManagedReference
items:
- uid: Mcma.Aws.Client.AwsRequestExtensions
  commentId: T:Mcma.Aws.Client.AwsRequestExtensions
  id: AwsRequestExtensions
  parent: Mcma.Aws.Client
  children:
  - Mcma.Aws.Client.AwsRequestExtensions.CanonicalHeaders(System.Net.Http.HttpRequestMessage)
  - Mcma.Aws.Client.AwsRequestExtensions.CanonicalQueryParameters(System.Net.Http.HttpRequestMessage)
  - Mcma.Aws.Client.AwsRequestExtensions.CanonicalUri(System.Net.Http.HttpRequestMessage)
  - Mcma.Aws.Client.AwsRequestExtensions.HashBodyAsync(System.Net.Http.HttpRequestMessage,System.Security.Cryptography.HashAlgorithm)
  - Mcma.Aws.Client.AwsRequestExtensions.SignedHeaders(System.Net.Http.HttpRequestMessage)
  - Mcma.Aws.Client.AwsRequestExtensions.ToCanonicalRequest(System.Net.Http.HttpRequestMessage,System.String)
  - Mcma.Aws.Client.AwsRequestExtensions.ToHashedCanonicalRequest(System.Net.Http.HttpRequestMessage,System.String,System.Security.Cryptography.HashAlgorithm)
  - Mcma.Aws.Client.AwsRequestExtensions.ToHashedCanonicalRequestAsync(System.Net.Http.HttpRequestMessage,System.Security.Cryptography.HashAlgorithm)
  langs:
  - csharp
  - vb
  name: AwsRequestExtensions
  nameWithType: AwsRequestExtensions
  fullName: Mcma.Aws.Client.AwsRequestExtensions
  type: Class
  source:
    remote:
      path: AWS/Mcma.Aws.Client/AwsRequestExtensions.cs
      branch: documentation
      repo: https://github.com/ebu/mcma-libraries-dotnet.git
    id: AwsRequestExtensions
    path: ../mcma-libraries-dotnet/AWS/Mcma.Aws.Client/AwsRequestExtensions.cs
    startLine: 8
  assemblies:
  - Mcma.Aws.Client
  namespace: Mcma.Aws.Client
  syntax:
    content: public static class AwsRequestExtensions
    content.vb: Public Module AwsRequestExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Mcma.Aws.Client.AwsRequestExtensions.CanonicalUri(System.Net.Http.HttpRequestMessage)
  commentId: M:Mcma.Aws.Client.AwsRequestExtensions.CanonicalUri(System.Net.Http.HttpRequestMessage)
  id: CanonicalUri(System.Net.Http.HttpRequestMessage)
  isExtensionMethod: true
  parent: Mcma.Aws.Client.AwsRequestExtensions
  langs:
  - csharp
  - vb
  name: CanonicalUri(HttpRequestMessage)
  nameWithType: AwsRequestExtensions.CanonicalUri(HttpRequestMessage)
  fullName: Mcma.Aws.Client.AwsRequestExtensions.CanonicalUri(System.Net.Http.HttpRequestMessage)
  type: Method
  source:
    remote:
      path: AWS/Mcma.Aws.Client/AwsRequestExtensions.cs
      branch: documentation
      repo: https://github.com/ebu/mcma-libraries-dotnet.git
    id: CanonicalUri
    path: ../mcma-libraries-dotnet/AWS/Mcma.Aws.Client/AwsRequestExtensions.cs
    startLine: 10
  assemblies:
  - Mcma.Aws.Client
  namespace: Mcma.Aws.Client
  syntax:
    content: public static string CanonicalUri(this HttpRequestMessage request)
    parameters:
    - id: request
      type: System.Net.Http.HttpRequestMessage
    return:
      type: System.String
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function CanonicalUri(request As HttpRequestMessage) As String
  overload: Mcma.Aws.Client.AwsRequestExtensions.CanonicalUri*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Mcma.Aws.Client.AwsRequestExtensions.CanonicalQueryParameters(System.Net.Http.HttpRequestMessage)
  commentId: M:Mcma.Aws.Client.AwsRequestExtensions.CanonicalQueryParameters(System.Net.Http.HttpRequestMessage)
  id: CanonicalQueryParameters(System.Net.Http.HttpRequestMessage)
  isExtensionMethod: true
  parent: Mcma.Aws.Client.AwsRequestExtensions
  langs:
  - csharp
  - vb
  name: CanonicalQueryParameters(HttpRequestMessage)
  nameWithType: AwsRequestExtensions.CanonicalQueryParameters(HttpRequestMessage)
  fullName: Mcma.Aws.Client.AwsRequestExtensions.CanonicalQueryParameters(System.Net.Http.HttpRequestMessage)
  type: Method
  source:
    remote:
      path: AWS/Mcma.Aws.Client/AwsRequestExtensions.cs
      branch: documentation
      repo: https://github.com/ebu/mcma-libraries-dotnet.git
    id: CanonicalQueryParameters
    path: ../mcma-libraries-dotnet/AWS/Mcma.Aws.Client/AwsRequestExtensions.cs
    startLine: 13
  assemblies:
  - Mcma.Aws.Client
  namespace: Mcma.Aws.Client
  syntax:
    content: public static string CanonicalQueryParameters(this HttpRequestMessage request)
    parameters:
    - id: request
      type: System.Net.Http.HttpRequestMessage
    return:
      type: System.String
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function CanonicalQueryParameters(request As HttpRequestMessage) As String
  overload: Mcma.Aws.Client.AwsRequestExtensions.CanonicalQueryParameters*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Mcma.Aws.Client.AwsRequestExtensions.CanonicalHeaders(System.Net.Http.HttpRequestMessage)
  commentId: M:Mcma.Aws.Client.AwsRequestExtensions.CanonicalHeaders(System.Net.Http.HttpRequestMessage)
  id: CanonicalHeaders(System.Net.Http.HttpRequestMessage)
  isExtensionMethod: true
  parent: Mcma.Aws.Client.AwsRequestExtensions
  langs:
  - csharp
  - vb
  name: CanonicalHeaders(HttpRequestMessage)
  nameWithType: AwsRequestExtensions.CanonicalHeaders(HttpRequestMessage)
  fullName: Mcma.Aws.Client.AwsRequestExtensions.CanonicalHeaders(System.Net.Http.HttpRequestMessage)
  type: Method
  source:
    remote:
      path: AWS/Mcma.Aws.Client/AwsRequestExtensions.cs
      branch: documentation
      repo: https://github.com/ebu/mcma-libraries-dotnet.git
    id: CanonicalHeaders
    path: ../mcma-libraries-dotnet/AWS/Mcma.Aws.Client/AwsRequestExtensions.cs
    startLine: 38
  assemblies:
  - Mcma.Aws.Client
  namespace: Mcma.Aws.Client
  syntax:
    content: public static string CanonicalHeaders(this HttpRequestMessage request)
    parameters:
    - id: request
      type: System.Net.Http.HttpRequestMessage
    return:
      type: System.String
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function CanonicalHeaders(request As HttpRequestMessage) As String
  overload: Mcma.Aws.Client.AwsRequestExtensions.CanonicalHeaders*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Mcma.Aws.Client.AwsRequestExtensions.SignedHeaders(System.Net.Http.HttpRequestMessage)
  commentId: M:Mcma.Aws.Client.AwsRequestExtensions.SignedHeaders(System.Net.Http.HttpRequestMessage)
  id: SignedHeaders(System.Net.Http.HttpRequestMessage)
  isExtensionMethod: true
  parent: Mcma.Aws.Client.AwsRequestExtensions
  langs:
  - csharp
  - vb
  name: SignedHeaders(HttpRequestMessage)
  nameWithType: AwsRequestExtensions.SignedHeaders(HttpRequestMessage)
  fullName: Mcma.Aws.Client.AwsRequestExtensions.SignedHeaders(System.Net.Http.HttpRequestMessage)
  type: Method
  source:
    remote:
      path: AWS/Mcma.Aws.Client/AwsRequestExtensions.cs
      branch: documentation
      repo: https://github.com/ebu/mcma-libraries-dotnet.git
    id: SignedHeaders
    path: ../mcma-libraries-dotnet/AWS/Mcma.Aws.Client/AwsRequestExtensions.cs
    startLine: 49
  assemblies:
  - Mcma.Aws.Client
  namespace: Mcma.Aws.Client
  syntax:
    content: public static string SignedHeaders(this HttpRequestMessage request)
    parameters:
    - id: request
      type: System.Net.Http.HttpRequestMessage
    return:
      type: System.String
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function SignedHeaders(request As HttpRequestMessage) As String
  overload: Mcma.Aws.Client.AwsRequestExtensions.SignedHeaders*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Mcma.Aws.Client.AwsRequestExtensions.ToCanonicalRequest(System.Net.Http.HttpRequestMessage,System.String)
  commentId: M:Mcma.Aws.Client.AwsRequestExtensions.ToCanonicalRequest(System.Net.Http.HttpRequestMessage,System.String)
  id: ToCanonicalRequest(System.Net.Http.HttpRequestMessage,System.String)
  isExtensionMethod: true
  parent: Mcma.Aws.Client.AwsRequestExtensions
  langs:
  - csharp
  - vb
  name: ToCanonicalRequest(HttpRequestMessage, String)
  nameWithType: AwsRequestExtensions.ToCanonicalRequest(HttpRequestMessage, String)
  fullName: Mcma.Aws.Client.AwsRequestExtensions.ToCanonicalRequest(System.Net.Http.HttpRequestMessage, System.String)
  type: Method
  source:
    remote:
      path: AWS/Mcma.Aws.Client/AwsRequestExtensions.cs
      branch: documentation
      repo: https://github.com/ebu/mcma-libraries-dotnet.git
    id: ToCanonicalRequest
    path: ../mcma-libraries-dotnet/AWS/Mcma.Aws.Client/AwsRequestExtensions.cs
    startLine: 56
  assemblies:
  - Mcma.Aws.Client
  namespace: Mcma.Aws.Client
  syntax:
    content: public static string ToCanonicalRequest(this HttpRequestMessage request, string hashedBody)
    parameters:
    - id: request
      type: System.Net.Http.HttpRequestMessage
    - id: hashedBody
      type: System.String
    return:
      type: System.String
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ToCanonicalRequest(request As HttpRequestMessage, hashedBody As String) As String
  overload: Mcma.Aws.Client.AwsRequestExtensions.ToCanonicalRequest*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Mcma.Aws.Client.AwsRequestExtensions.ToHashedCanonicalRequest(System.Net.Http.HttpRequestMessage,System.String,System.Security.Cryptography.HashAlgorithm)
  commentId: M:Mcma.Aws.Client.AwsRequestExtensions.ToHashedCanonicalRequest(System.Net.Http.HttpRequestMessage,System.String,System.Security.Cryptography.HashAlgorithm)
  id: ToHashedCanonicalRequest(System.Net.Http.HttpRequestMessage,System.String,System.Security.Cryptography.HashAlgorithm)
  isExtensionMethod: true
  parent: Mcma.Aws.Client.AwsRequestExtensions
  langs:
  - csharp
  - vb
  name: ToHashedCanonicalRequest(HttpRequestMessage, String, HashAlgorithm)
  nameWithType: AwsRequestExtensions.ToHashedCanonicalRequest(HttpRequestMessage, String, HashAlgorithm)
  fullName: Mcma.Aws.Client.AwsRequestExtensions.ToHashedCanonicalRequest(System.Net.Http.HttpRequestMessage, System.String, System.Security.Cryptography.HashAlgorithm)
  type: Method
  source:
    remote:
      path: AWS/Mcma.Aws.Client/AwsRequestExtensions.cs
      branch: documentation
      repo: https://github.com/ebu/mcma-libraries-dotnet.git
    id: ToHashedCanonicalRequest
    path: ../mcma-libraries-dotnet/AWS/Mcma.Aws.Client/AwsRequestExtensions.cs
    startLine: 66
  assemblies:
  - Mcma.Aws.Client
  namespace: Mcma.Aws.Client
  syntax:
    content: public static string ToHashedCanonicalRequest(this HttpRequestMessage request, string hashedBody, HashAlgorithm hashAlgorithm = null)
    parameters:
    - id: request
      type: System.Net.Http.HttpRequestMessage
    - id: hashedBody
      type: System.String
    - id: hashAlgorithm
      type: System.Security.Cryptography.HashAlgorithm
    return:
      type: System.String
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ToHashedCanonicalRequest(request As HttpRequestMessage, hashedBody As String, hashAlgorithm As HashAlgorithm = Nothing) As String
  overload: Mcma.Aws.Client.AwsRequestExtensions.ToHashedCanonicalRequest*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Mcma.Aws.Client.AwsRequestExtensions.HashBodyAsync(System.Net.Http.HttpRequestMessage,System.Security.Cryptography.HashAlgorithm)
  commentId: M:Mcma.Aws.Client.AwsRequestExtensions.HashBodyAsync(System.Net.Http.HttpRequestMessage,System.Security.Cryptography.HashAlgorithm)
  id: HashBodyAsync(System.Net.Http.HttpRequestMessage,System.Security.Cryptography.HashAlgorithm)
  isExtensionMethod: true
  parent: Mcma.Aws.Client.AwsRequestExtensions
  langs:
  - csharp
  - vb
  name: HashBodyAsync(HttpRequestMessage, HashAlgorithm)
  nameWithType: AwsRequestExtensions.HashBodyAsync(HttpRequestMessage, HashAlgorithm)
  fullName: Mcma.Aws.Client.AwsRequestExtensions.HashBodyAsync(System.Net.Http.HttpRequestMessage, System.Security.Cryptography.HashAlgorithm)
  type: Method
  source:
    remote:
      path: AWS/Mcma.Aws.Client/AwsRequestExtensions.cs
      branch: documentation
      repo: https://github.com/ebu/mcma-libraries-dotnet.git
    id: HashBodyAsync
    path: ../mcma-libraries-dotnet/AWS/Mcma.Aws.Client/AwsRequestExtensions.cs
    startLine: 73
  assemblies:
  - Mcma.Aws.Client
  namespace: Mcma.Aws.Client
  syntax:
    content: public static Task<string> HashBodyAsync(this HttpRequestMessage request, HashAlgorithm hashAlgorithm = null)
    parameters:
    - id: request
      type: System.Net.Http.HttpRequestMessage
    - id: hashAlgorithm
      type: System.Security.Cryptography.HashAlgorithm
    return:
      type: System.Threading.Tasks.Task{System.String}
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function HashBodyAsync(request As HttpRequestMessage, hashAlgorithm As HashAlgorithm = Nothing) As Task(Of String)
  overload: Mcma.Aws.Client.AwsRequestExtensions.HashBodyAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Mcma.Aws.Client.AwsRequestExtensions.ToHashedCanonicalRequestAsync(System.Net.Http.HttpRequestMessage,System.Security.Cryptography.HashAlgorithm)
  commentId: M:Mcma.Aws.Client.AwsRequestExtensions.ToHashedCanonicalRequestAsync(System.Net.Http.HttpRequestMessage,System.Security.Cryptography.HashAlgorithm)
  id: ToHashedCanonicalRequestAsync(System.Net.Http.HttpRequestMessage,System.Security.Cryptography.HashAlgorithm)
  isExtensionMethod: true
  parent: Mcma.Aws.Client.AwsRequestExtensions
  langs:
  - csharp
  - vb
  name: ToHashedCanonicalRequestAsync(HttpRequestMessage, HashAlgorithm)
  nameWithType: AwsRequestExtensions.ToHashedCanonicalRequestAsync(HttpRequestMessage, HashAlgorithm)
  fullName: Mcma.Aws.Client.AwsRequestExtensions.ToHashedCanonicalRequestAsync(System.Net.Http.HttpRequestMessage, System.Security.Cryptography.HashAlgorithm)
  type: Method
  source:
    remote:
      path: AWS/Mcma.Aws.Client/AwsRequestExtensions.cs
      branch: documentation
      repo: https://github.com/ebu/mcma-libraries-dotnet.git
    id: ToHashedCanonicalRequestAsync
    path: ../mcma-libraries-dotnet/AWS/Mcma.Aws.Client/AwsRequestExtensions.cs
    startLine: 79
  assemblies:
  - Mcma.Aws.Client
  namespace: Mcma.Aws.Client
  syntax:
    content: public static Task<string> ToHashedCanonicalRequestAsync(this HttpRequestMessage request, HashAlgorithm hashAlgorithm = null)
    parameters:
    - id: request
      type: System.Net.Http.HttpRequestMessage
    - id: hashAlgorithm
      type: System.Security.Cryptography.HashAlgorithm
    return:
      type: System.Threading.Tasks.Task{System.String}
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ToHashedCanonicalRequestAsync(request As HttpRequestMessage, hashAlgorithm As HashAlgorithm = Nothing) As Task(Of String)
  overload: Mcma.Aws.Client.AwsRequestExtensions.ToHashedCanonicalRequestAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Mcma.Aws.Client
  commentId: N:Mcma.Aws.Client
  name: Mcma.Aws.Client
  nameWithType: Mcma.Aws.Client
  fullName: Mcma.Aws.Client
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Mcma.Aws.Client.AwsRequestExtensions.CanonicalUri*
  commentId: Overload:Mcma.Aws.Client.AwsRequestExtensions.CanonicalUri
  name: CanonicalUri
  nameWithType: AwsRequestExtensions.CanonicalUri
  fullName: Mcma.Aws.Client.AwsRequestExtensions.CanonicalUri
- uid: System.Net.Http.HttpRequestMessage
  commentId: T:System.Net.Http.HttpRequestMessage
  parent: System.Net.Http
  isExternal: true
  name: HttpRequestMessage
  nameWithType: HttpRequestMessage
  fullName: System.Net.Http.HttpRequestMessage
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Net.Http
  commentId: N:System.Net.Http
  isExternal: true
  name: System.Net.Http
  nameWithType: System.Net.Http
  fullName: System.Net.Http
- uid: Mcma.Aws.Client.AwsRequestExtensions.CanonicalQueryParameters*
  commentId: Overload:Mcma.Aws.Client.AwsRequestExtensions.CanonicalQueryParameters
  name: CanonicalQueryParameters
  nameWithType: AwsRequestExtensions.CanonicalQueryParameters
  fullName: Mcma.Aws.Client.AwsRequestExtensions.CanonicalQueryParameters
- uid: Mcma.Aws.Client.AwsRequestExtensions.CanonicalHeaders*
  commentId: Overload:Mcma.Aws.Client.AwsRequestExtensions.CanonicalHeaders
  name: CanonicalHeaders
  nameWithType: AwsRequestExtensions.CanonicalHeaders
  fullName: Mcma.Aws.Client.AwsRequestExtensions.CanonicalHeaders
- uid: Mcma.Aws.Client.AwsRequestExtensions.SignedHeaders*
  commentId: Overload:Mcma.Aws.Client.AwsRequestExtensions.SignedHeaders
  name: SignedHeaders
  nameWithType: AwsRequestExtensions.SignedHeaders
  fullName: Mcma.Aws.Client.AwsRequestExtensions.SignedHeaders
- uid: Mcma.Aws.Client.AwsRequestExtensions.ToCanonicalRequest*
  commentId: Overload:Mcma.Aws.Client.AwsRequestExtensions.ToCanonicalRequest
  name: ToCanonicalRequest
  nameWithType: AwsRequestExtensions.ToCanonicalRequest
  fullName: Mcma.Aws.Client.AwsRequestExtensions.ToCanonicalRequest
- uid: Mcma.Aws.Client.AwsRequestExtensions.ToHashedCanonicalRequest*
  commentId: Overload:Mcma.Aws.Client.AwsRequestExtensions.ToHashedCanonicalRequest
  name: ToHashedCanonicalRequest
  nameWithType: AwsRequestExtensions.ToHashedCanonicalRequest
  fullName: Mcma.Aws.Client.AwsRequestExtensions.ToHashedCanonicalRequest
- uid: System.Security.Cryptography.HashAlgorithm
  commentId: T:System.Security.Cryptography.HashAlgorithm
  parent: System.Security.Cryptography
  isExternal: true
  name: HashAlgorithm
  nameWithType: HashAlgorithm
  fullName: System.Security.Cryptography.HashAlgorithm
- uid: System.Security.Cryptography
  commentId: N:System.Security.Cryptography
  isExternal: true
  name: System.Security.Cryptography
  nameWithType: System.Security.Cryptography
  fullName: System.Security.Cryptography
- uid: Mcma.Aws.Client.AwsRequestExtensions.HashBodyAsync*
  commentId: Overload:Mcma.Aws.Client.AwsRequestExtensions.HashBodyAsync
  name: HashBodyAsync
  nameWithType: AwsRequestExtensions.HashBodyAsync
  fullName: Mcma.Aws.Client.AwsRequestExtensions.HashBodyAsync
- uid: System.Threading.Tasks.Task{System.String}
  commentId: T:System.Threading.Tasks.Task{System.String}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<String>
  nameWithType: Task<String>
  fullName: System.Threading.Tasks.Task<System.String>
  nameWithType.vb: Task(Of String)
  fullName.vb: System.Threading.Tasks.Task(Of System.String)
  name.vb: Task(Of String)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Mcma.Aws.Client.AwsRequestExtensions.ToHashedCanonicalRequestAsync*
  commentId: Overload:Mcma.Aws.Client.AwsRequestExtensions.ToHashedCanonicalRequestAsync
  name: ToHashedCanonicalRequestAsync
  nameWithType: AwsRequestExtensions.ToHashedCanonicalRequestAsync
  fullName: Mcma.Aws.Client.AwsRequestExtensions.ToHashedCanonicalRequestAsync
