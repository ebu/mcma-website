### YamlMime:ManagedReference
items:
- uid: Mcma.Azure.CosmosDb.ResponseMessageExtensions
  commentId: T:Mcma.Azure.CosmosDb.ResponseMessageExtensions
  id: ResponseMessageExtensions
  parent: Mcma.Azure.CosmosDb
  children:
  - Mcma.Azure.CosmosDb.ResponseMessageExtensions.ToObjectAsync``1(Microsoft.Azure.Cosmos.ResponseMessage)
  - Mcma.Azure.CosmosDb.ResponseMessageExtensions.UnwrapResourceAsync``1(Microsoft.Azure.Cosmos.ResponseMessage)
  langs:
  - csharp
  - vb
  name: ResponseMessageExtensions
  nameWithType: ResponseMessageExtensions
  fullName: Mcma.Azure.CosmosDb.ResponseMessageExtensions
  type: Class
  source:
    remote:
      path: Azure/Mcma.Azure.CosmosDb/ResponseMessageExtensions.cs
      branch: documentation
      repo: https://github.com/ebu/mcma-libraries-dotnet.git
    id: ResponseMessageExtensions
    path: ../mcma-libraries-dotnet/Azure/Mcma.Azure.CosmosDb/ResponseMessageExtensions.cs
    startLine: 8
  assemblies:
  - Mcma.Azure.CosmosDb
  namespace: Mcma.Azure.CosmosDb
  syntax:
    content: public static class ResponseMessageExtensions
    content.vb: Public Module ResponseMessageExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Mcma.Azure.CosmosDb.ResponseMessageExtensions.UnwrapResourceAsync``1(Microsoft.Azure.Cosmos.ResponseMessage)
  commentId: M:Mcma.Azure.CosmosDb.ResponseMessageExtensions.UnwrapResourceAsync``1(Microsoft.Azure.Cosmos.ResponseMessage)
  id: UnwrapResourceAsync``1(Microsoft.Azure.Cosmos.ResponseMessage)
  isExtensionMethod: true
  parent: Mcma.Azure.CosmosDb.ResponseMessageExtensions
  langs:
  - csharp
  - vb
  name: UnwrapResourceAsync<T>(ResponseMessage)
  nameWithType: ResponseMessageExtensions.UnwrapResourceAsync<T>(ResponseMessage)
  fullName: Mcma.Azure.CosmosDb.ResponseMessageExtensions.UnwrapResourceAsync<T>(Microsoft.Azure.Cosmos.ResponseMessage)
  type: Method
  source:
    remote:
      path: Azure/Mcma.Azure.CosmosDb/ResponseMessageExtensions.cs
      branch: documentation
      repo: https://github.com/ebu/mcma-libraries-dotnet.git
    id: UnwrapResourceAsync
    path: ../mcma-libraries-dotnet/Azure/Mcma.Azure.CosmosDb/ResponseMessageExtensions.cs
    startLine: 10
  assemblies:
  - Mcma.Azure.CosmosDb
  namespace: Mcma.Azure.CosmosDb
  syntax:
    content: >-
      public static Task<T> UnwrapResourceAsync<T>(this ResponseMessage responseMessage)

          where T : class
    parameters:
    - id: responseMessage
      type: Microsoft.Azure.Cosmos.ResponseMessage
    typeParameters:
    - id: T
    return:
      type: System.Threading.Tasks.Task{{T}}
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function UnwrapResourceAsync(Of T As Class)(responseMessage As ResponseMessage) As Task(Of T)
  overload: Mcma.Azure.CosmosDb.ResponseMessageExtensions.UnwrapResourceAsync*
  nameWithType.vb: ResponseMessageExtensions.UnwrapResourceAsync(Of T)(ResponseMessage)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Mcma.Azure.CosmosDb.ResponseMessageExtensions.UnwrapResourceAsync(Of T)(Microsoft.Azure.Cosmos.ResponseMessage)
  name.vb: UnwrapResourceAsync(Of T)(ResponseMessage)
- uid: Mcma.Azure.CosmosDb.ResponseMessageExtensions.ToObjectAsync``1(Microsoft.Azure.Cosmos.ResponseMessage)
  commentId: M:Mcma.Azure.CosmosDb.ResponseMessageExtensions.ToObjectAsync``1(Microsoft.Azure.Cosmos.ResponseMessage)
  id: ToObjectAsync``1(Microsoft.Azure.Cosmos.ResponseMessage)
  isExtensionMethod: true
  parent: Mcma.Azure.CosmosDb.ResponseMessageExtensions
  langs:
  - csharp
  - vb
  name: ToObjectAsync<T>(ResponseMessage)
  nameWithType: ResponseMessageExtensions.ToObjectAsync<T>(ResponseMessage)
  fullName: Mcma.Azure.CosmosDb.ResponseMessageExtensions.ToObjectAsync<T>(Microsoft.Azure.Cosmos.ResponseMessage)
  type: Method
  source:
    remote:
      path: Azure/Mcma.Azure.CosmosDb/ResponseMessageExtensions.cs
      branch: documentation
      repo: https://github.com/ebu/mcma-libraries-dotnet.git
    id: ToObjectAsync
    path: ../mcma-libraries-dotnet/Azure/Mcma.Azure.CosmosDb/ResponseMessageExtensions.cs
    startLine: 13
  assemblies:
  - Mcma.Azure.CosmosDb
  namespace: Mcma.Azure.CosmosDb
  syntax:
    content: >-
      public static Task<T> ToObjectAsync<T>(this ResponseMessage responseMessage)

          where T : class
    parameters:
    - id: responseMessage
      type: Microsoft.Azure.Cosmos.ResponseMessage
    typeParameters:
    - id: T
    return:
      type: System.Threading.Tasks.Task{{T}}
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ToObjectAsync(Of T As Class)(responseMessage As ResponseMessage) As Task(Of T)
  overload: Mcma.Azure.CosmosDb.ResponseMessageExtensions.ToObjectAsync*
  nameWithType.vb: ResponseMessageExtensions.ToObjectAsync(Of T)(ResponseMessage)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Mcma.Azure.CosmosDb.ResponseMessageExtensions.ToObjectAsync(Of T)(Microsoft.Azure.Cosmos.ResponseMessage)
  name.vb: ToObjectAsync(Of T)(ResponseMessage)
references:
- uid: Mcma.Azure.CosmosDb
  commentId: N:Mcma.Azure.CosmosDb
  name: Mcma.Azure.CosmosDb
  nameWithType: Mcma.Azure.CosmosDb
  fullName: Mcma.Azure.CosmosDb
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Mcma.Azure.CosmosDb.ResponseMessageExtensions.UnwrapResourceAsync*
  commentId: Overload:Mcma.Azure.CosmosDb.ResponseMessageExtensions.UnwrapResourceAsync
  name: UnwrapResourceAsync
  nameWithType: ResponseMessageExtensions.UnwrapResourceAsync
  fullName: Mcma.Azure.CosmosDb.ResponseMessageExtensions.UnwrapResourceAsync
- uid: Microsoft.Azure.Cosmos.ResponseMessage
  commentId: T:Microsoft.Azure.Cosmos.ResponseMessage
  parent: Microsoft.Azure.Cosmos
  isExternal: true
  name: ResponseMessage
  nameWithType: ResponseMessage
  fullName: Microsoft.Azure.Cosmos.ResponseMessage
- uid: System.Threading.Tasks.Task{{T}}
  commentId: T:System.Threading.Tasks.Task{``0}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<T>
  nameWithType: Task<T>
  fullName: System.Threading.Tasks.Task<T>
  nameWithType.vb: Task(Of T)
  fullName.vb: System.Threading.Tasks.Task(Of T)
  name.vb: Task(Of T)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Azure.Cosmos
  commentId: N:Microsoft.Azure.Cosmos
  isExternal: true
  name: Microsoft.Azure.Cosmos
  nameWithType: Microsoft.Azure.Cosmos
  fullName: Microsoft.Azure.Cosmos
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Mcma.Azure.CosmosDb.ResponseMessageExtensions.ToObjectAsync*
  commentId: Overload:Mcma.Azure.CosmosDb.ResponseMessageExtensions.ToObjectAsync
  name: ToObjectAsync
  nameWithType: ResponseMessageExtensions.ToObjectAsync
  fullName: Mcma.Azure.CosmosDb.ResponseMessageExtensions.ToObjectAsync
