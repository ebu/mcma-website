### YamlMime:ManagedReference
items:
- uid: Mcma.Azure.BlobStorage.Proxies.BlobStorageFolderProxy
  commentId: T:Mcma.Azure.BlobStorage.Proxies.BlobStorageFolderProxy
  id: BlobStorageFolderProxy
  parent: Mcma.Azure.BlobStorage.Proxies
  children:
  - Mcma.Azure.BlobStorage.Proxies.BlobStorageFolderProxy.PutAsTextAsync(System.String,System.String,Azure.Storage.Blobs.Models.BlobHttpHeaders)
  - Mcma.Azure.BlobStorage.Proxies.BlobStorageFolderProxy.PutAsync(System.String,System.IO.Stream,Azure.Storage.Blobs.Models.BlobHttpHeaders)
  langs:
  - csharp
  - vb
  name: BlobStorageFolderProxy
  nameWithType: BlobStorageFolderProxy
  fullName: Mcma.Azure.BlobStorage.Proxies.BlobStorageFolderProxy
  type: Class
  source:
    remote:
      path: Azure/Mcma.Azure.BlobStorage/Proxies/BlobStorageFolderProxy.cs
      branch: documentation
      repo: https://github.com/ebu/mcma-libraries-dotnet.git
    id: BlobStorageFolderProxy
    path: ../mcma-libraries-dotnet/Azure/Mcma.Azure.BlobStorage/Proxies/BlobStorageFolderProxy.cs
    startLine: 7
  assemblies:
  - Mcma.Azure.BlobStorage
  namespace: Mcma.Azure.BlobStorage.Proxies
  syntax:
    content: 'public class BlobStorageFolderProxy : BlobStorageProxy<BlobStorageFolderLocator>'
    content.vb: >-
      Public Class BlobStorageFolderProxy
          Inherits BlobStorageProxy(Of BlobStorageFolderLocator)
  inheritance:
  - System.Object
  - Mcma.Azure.BlobStorage.Proxies.BlobStorageProxy{Mcma.Azure.BlobStorage.BlobStorageFolderLocator}
  inheritedMembers:
  - Mcma.Azure.BlobStorage.Proxies.BlobStorageProxy{Mcma.Azure.BlobStorage.BlobStorageFolderLocator}.Locator
  - Mcma.Azure.BlobStorage.Proxies.BlobStorageProxy{Mcma.Azure.BlobStorage.BlobStorageFolderLocator}.AccountKey
  - Mcma.Azure.BlobStorage.Proxies.BlobStorageProxy{Mcma.Azure.BlobStorage.BlobStorageFolderLocator}.ServiceClient
  - Mcma.Azure.BlobStorage.Proxies.BlobStorageProxy{Mcma.Azure.BlobStorage.BlobStorageFolderLocator}.ContainerClient
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - System.Object.Mcma.Serialization.McmaJson.ToMcmaJson(System.Boolean)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Mcma.Azure.BlobStorage.Proxies.BlobStorageFolderProxy.PutAsync(System.String,System.IO.Stream,Azure.Storage.Blobs.Models.BlobHttpHeaders)
  commentId: M:Mcma.Azure.BlobStorage.Proxies.BlobStorageFolderProxy.PutAsync(System.String,System.IO.Stream,Azure.Storage.Blobs.Models.BlobHttpHeaders)
  id: PutAsync(System.String,System.IO.Stream,Azure.Storage.Blobs.Models.BlobHttpHeaders)
  parent: Mcma.Azure.BlobStorage.Proxies.BlobStorageFolderProxy
  langs:
  - csharp
  - vb
  name: PutAsync(String, Stream, BlobHttpHeaders)
  nameWithType: BlobStorageFolderProxy.PutAsync(String, Stream, BlobHttpHeaders)
  fullName: Mcma.Azure.BlobStorage.Proxies.BlobStorageFolderProxy.PutAsync(System.String, System.IO.Stream, Azure.Storage.Blobs.Models.BlobHttpHeaders)
  type: Method
  source:
    remote:
      path: Azure/Mcma.Azure.BlobStorage/Proxies/BlobStorageFolderProxy.cs
      branch: documentation
      repo: https://github.com/ebu/mcma-libraries-dotnet.git
    id: PutAsync
    path: ../mcma-libraries-dotnet/Azure/Mcma.Azure.BlobStorage/Proxies/BlobStorageFolderProxy.cs
    startLine: 14
  assemblies:
  - Mcma.Azure.BlobStorage
  namespace: Mcma.Azure.BlobStorage.Proxies
  syntax:
    content: public Task<BlobStorageFileLocator> PutAsync(string fileName, Stream readFrom, BlobHttpHeaders headers = null)
    parameters:
    - id: fileName
      type: System.String
    - id: readFrom
      type: System.IO.Stream
    - id: headers
      type: Azure.Storage.Blobs.Models.BlobHttpHeaders
    return:
      type: System.Threading.Tasks.Task{Mcma.Azure.BlobStorage.BlobStorageFileLocator}
    content.vb: Public Function PutAsync(fileName As String, readFrom As Stream, headers As BlobHttpHeaders = Nothing) As Task(Of BlobStorageFileLocator)
  overload: Mcma.Azure.BlobStorage.Proxies.BlobStorageFolderProxy.PutAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mcma.Azure.BlobStorage.Proxies.BlobStorageFolderProxy.PutAsTextAsync(System.String,System.String,Azure.Storage.Blobs.Models.BlobHttpHeaders)
  commentId: M:Mcma.Azure.BlobStorage.Proxies.BlobStorageFolderProxy.PutAsTextAsync(System.String,System.String,Azure.Storage.Blobs.Models.BlobHttpHeaders)
  id: PutAsTextAsync(System.String,System.String,Azure.Storage.Blobs.Models.BlobHttpHeaders)
  parent: Mcma.Azure.BlobStorage.Proxies.BlobStorageFolderProxy
  langs:
  - csharp
  - vb
  name: PutAsTextAsync(String, String, BlobHttpHeaders)
  nameWithType: BlobStorageFolderProxy.PutAsTextAsync(String, String, BlobHttpHeaders)
  fullName: Mcma.Azure.BlobStorage.Proxies.BlobStorageFolderProxy.PutAsTextAsync(System.String, System.String, Azure.Storage.Blobs.Models.BlobHttpHeaders)
  type: Method
  source:
    remote:
      path: Azure/Mcma.Azure.BlobStorage/Proxies/BlobStorageFolderProxy.cs
      branch: documentation
      repo: https://github.com/ebu/mcma-libraries-dotnet.git
    id: PutAsTextAsync
    path: ../mcma-libraries-dotnet/Azure/Mcma.Azure.BlobStorage/Proxies/BlobStorageFolderProxy.cs
    startLine: 22
  assemblies:
  - Mcma.Azure.BlobStorage
  namespace: Mcma.Azure.BlobStorage.Proxies
  syntax:
    content: public Task<BlobStorageFileLocator> PutAsTextAsync(string fileName, string content, BlobHttpHeaders headers = null)
    parameters:
    - id: fileName
      type: System.String
    - id: content
      type: System.String
    - id: headers
      type: Azure.Storage.Blobs.Models.BlobHttpHeaders
    return:
      type: System.Threading.Tasks.Task{Mcma.Azure.BlobStorage.BlobStorageFileLocator}
    content.vb: Public Function PutAsTextAsync(fileName As String, content As String, headers As BlobHttpHeaders = Nothing) As Task(Of BlobStorageFileLocator)
  overload: Mcma.Azure.BlobStorage.Proxies.BlobStorageFolderProxy.PutAsTextAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Mcma.Azure.BlobStorage.Proxies
  commentId: N:Mcma.Azure.BlobStorage.Proxies
  name: Mcma.Azure.BlobStorage.Proxies
  nameWithType: Mcma.Azure.BlobStorage.Proxies
  fullName: Mcma.Azure.BlobStorage.Proxies
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Mcma.Azure.BlobStorage.Proxies.BlobStorageProxy{Mcma.Azure.BlobStorage.BlobStorageFolderLocator}
  commentId: T:Mcma.Azure.BlobStorage.Proxies.BlobStorageProxy{Mcma.Azure.BlobStorage.BlobStorageFolderLocator}
  parent: Mcma.Azure.BlobStorage.Proxies
  definition: Mcma.Azure.BlobStorage.Proxies.BlobStorageProxy`1
  name: BlobStorageProxy<BlobStorageFolderLocator>
  nameWithType: BlobStorageProxy<BlobStorageFolderLocator>
  fullName: Mcma.Azure.BlobStorage.Proxies.BlobStorageProxy<Mcma.Azure.BlobStorage.BlobStorageFolderLocator>
  nameWithType.vb: BlobStorageProxy(Of BlobStorageFolderLocator)
  fullName.vb: Mcma.Azure.BlobStorage.Proxies.BlobStorageProxy(Of Mcma.Azure.BlobStorage.BlobStorageFolderLocator)
  name.vb: BlobStorageProxy(Of BlobStorageFolderLocator)
  spec.csharp:
  - uid: Mcma.Azure.BlobStorage.Proxies.BlobStorageProxy`1
    name: BlobStorageProxy
    nameWithType: BlobStorageProxy
    fullName: Mcma.Azure.BlobStorage.Proxies.BlobStorageProxy
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mcma.Azure.BlobStorage.BlobStorageFolderLocator
    name: BlobStorageFolderLocator
    nameWithType: BlobStorageFolderLocator
    fullName: Mcma.Azure.BlobStorage.BlobStorageFolderLocator
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Mcma.Azure.BlobStorage.Proxies.BlobStorageProxy`1
    name: BlobStorageProxy
    nameWithType: BlobStorageProxy
    fullName: Mcma.Azure.BlobStorage.Proxies.BlobStorageProxy
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mcma.Azure.BlobStorage.BlobStorageFolderLocator
    name: BlobStorageFolderLocator
    nameWithType: BlobStorageFolderLocator
    fullName: Mcma.Azure.BlobStorage.BlobStorageFolderLocator
  - name: )
    nameWithType: )
    fullName: )
- uid: Mcma.Azure.BlobStorage.Proxies.BlobStorageProxy{Mcma.Azure.BlobStorage.BlobStorageFolderLocator}.Locator
  commentId: P:Mcma.Azure.BlobStorage.Proxies.BlobStorageProxy{Mcma.Azure.BlobStorage.BlobStorageFolderLocator}.Locator
  parent: Mcma.Azure.BlobStorage.Proxies.BlobStorageProxy{Mcma.Azure.BlobStorage.BlobStorageFolderLocator}
  definition: Mcma.Azure.BlobStorage.Proxies.BlobStorageProxy`1.Locator
  name: Locator
  nameWithType: BlobStorageProxy<BlobStorageFolderLocator>.Locator
  fullName: Mcma.Azure.BlobStorage.Proxies.BlobStorageProxy<Mcma.Azure.BlobStorage.BlobStorageFolderLocator>.Locator
  nameWithType.vb: BlobStorageProxy(Of BlobStorageFolderLocator).Locator
  fullName.vb: Mcma.Azure.BlobStorage.Proxies.BlobStorageProxy(Of Mcma.Azure.BlobStorage.BlobStorageFolderLocator).Locator
- uid: Mcma.Azure.BlobStorage.Proxies.BlobStorageProxy{Mcma.Azure.BlobStorage.BlobStorageFolderLocator}.AccountKey
  commentId: P:Mcma.Azure.BlobStorage.Proxies.BlobStorageProxy{Mcma.Azure.BlobStorage.BlobStorageFolderLocator}.AccountKey
  parent: Mcma.Azure.BlobStorage.Proxies.BlobStorageProxy{Mcma.Azure.BlobStorage.BlobStorageFolderLocator}
  definition: Mcma.Azure.BlobStorage.Proxies.BlobStorageProxy`1.AccountKey
  name: AccountKey
  nameWithType: BlobStorageProxy<BlobStorageFolderLocator>.AccountKey
  fullName: Mcma.Azure.BlobStorage.Proxies.BlobStorageProxy<Mcma.Azure.BlobStorage.BlobStorageFolderLocator>.AccountKey
  nameWithType.vb: BlobStorageProxy(Of BlobStorageFolderLocator).AccountKey
  fullName.vb: Mcma.Azure.BlobStorage.Proxies.BlobStorageProxy(Of Mcma.Azure.BlobStorage.BlobStorageFolderLocator).AccountKey
- uid: Mcma.Azure.BlobStorage.Proxies.BlobStorageProxy{Mcma.Azure.BlobStorage.BlobStorageFolderLocator}.ServiceClient
  commentId: P:Mcma.Azure.BlobStorage.Proxies.BlobStorageProxy{Mcma.Azure.BlobStorage.BlobStorageFolderLocator}.ServiceClient
  parent: Mcma.Azure.BlobStorage.Proxies.BlobStorageProxy{Mcma.Azure.BlobStorage.BlobStorageFolderLocator}
  definition: Mcma.Azure.BlobStorage.Proxies.BlobStorageProxy`1.ServiceClient
  name: ServiceClient
  nameWithType: BlobStorageProxy<BlobStorageFolderLocator>.ServiceClient
  fullName: Mcma.Azure.BlobStorage.Proxies.BlobStorageProxy<Mcma.Azure.BlobStorage.BlobStorageFolderLocator>.ServiceClient
  nameWithType.vb: BlobStorageProxy(Of BlobStorageFolderLocator).ServiceClient
  fullName.vb: Mcma.Azure.BlobStorage.Proxies.BlobStorageProxy(Of Mcma.Azure.BlobStorage.BlobStorageFolderLocator).ServiceClient
- uid: Mcma.Azure.BlobStorage.Proxies.BlobStorageProxy{Mcma.Azure.BlobStorage.BlobStorageFolderLocator}.ContainerClient
  commentId: P:Mcma.Azure.BlobStorage.Proxies.BlobStorageProxy{Mcma.Azure.BlobStorage.BlobStorageFolderLocator}.ContainerClient
  parent: Mcma.Azure.BlobStorage.Proxies.BlobStorageProxy{Mcma.Azure.BlobStorage.BlobStorageFolderLocator}
  definition: Mcma.Azure.BlobStorage.Proxies.BlobStorageProxy`1.ContainerClient
  name: ContainerClient
  nameWithType: BlobStorageProxy<BlobStorageFolderLocator>.ContainerClient
  fullName: Mcma.Azure.BlobStorage.Proxies.BlobStorageProxy<Mcma.Azure.BlobStorage.BlobStorageFolderLocator>.ContainerClient
  nameWithType.vb: BlobStorageProxy(Of BlobStorageFolderLocator).ContainerClient
  fullName.vb: Mcma.Azure.BlobStorage.Proxies.BlobStorageProxy(Of Mcma.Azure.BlobStorage.BlobStorageFolderLocator).ContainerClient
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Mcma.Serialization.McmaJson.ToMcmaJson(System.Boolean)
  commentId: M:Mcma.Serialization.McmaJson.ToMcmaJson(System.Object,System.Boolean)
  parent: Mcma.Serialization.McmaJson
  definition: Mcma.Serialization.McmaJson.ToMcmaJson(System.Object,System.Boolean)
  name: ToMcmaJson(Boolean)
  nameWithType: McmaJson.ToMcmaJson(Boolean)
  fullName: Mcma.Serialization.McmaJson.ToMcmaJson(System.Boolean)
  spec.csharp:
  - uid: Mcma.Serialization.McmaJson.ToMcmaJson(System.Boolean)
    name: ToMcmaJson
    nameWithType: McmaJson.ToMcmaJson
    fullName: Mcma.Serialization.McmaJson.ToMcmaJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mcma.Serialization.McmaJson.ToMcmaJson(System.Boolean)
    name: ToMcmaJson
    nameWithType: McmaJson.ToMcmaJson
    fullName: Mcma.Serialization.McmaJson.ToMcmaJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Mcma.Azure.BlobStorage.Proxies.BlobStorageProxy`1
  commentId: T:Mcma.Azure.BlobStorage.Proxies.BlobStorageProxy`1
  name: BlobStorageProxy<T>
  nameWithType: BlobStorageProxy<T>
  fullName: Mcma.Azure.BlobStorage.Proxies.BlobStorageProxy<T>
  nameWithType.vb: BlobStorageProxy(Of T)
  fullName.vb: Mcma.Azure.BlobStorage.Proxies.BlobStorageProxy(Of T)
  name.vb: BlobStorageProxy(Of T)
  spec.csharp:
  - uid: Mcma.Azure.BlobStorage.Proxies.BlobStorageProxy`1
    name: BlobStorageProxy
    nameWithType: BlobStorageProxy
    fullName: Mcma.Azure.BlobStorage.Proxies.BlobStorageProxy
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Mcma.Azure.BlobStorage.Proxies.BlobStorageProxy`1
    name: BlobStorageProxy
    nameWithType: BlobStorageProxy
    fullName: Mcma.Azure.BlobStorage.Proxies.BlobStorageProxy
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Mcma.Azure.BlobStorage.Proxies.BlobStorageProxy`1.Locator
  commentId: P:Mcma.Azure.BlobStorage.Proxies.BlobStorageProxy`1.Locator
  name: Locator
  nameWithType: BlobStorageProxy<T>.Locator
  fullName: Mcma.Azure.BlobStorage.Proxies.BlobStorageProxy<T>.Locator
  nameWithType.vb: BlobStorageProxy(Of T).Locator
  fullName.vb: Mcma.Azure.BlobStorage.Proxies.BlobStorageProxy(Of T).Locator
- uid: Mcma.Azure.BlobStorage.Proxies.BlobStorageProxy`1.AccountKey
  commentId: P:Mcma.Azure.BlobStorage.Proxies.BlobStorageProxy`1.AccountKey
  name: AccountKey
  nameWithType: BlobStorageProxy<T>.AccountKey
  fullName: Mcma.Azure.BlobStorage.Proxies.BlobStorageProxy<T>.AccountKey
  nameWithType.vb: BlobStorageProxy(Of T).AccountKey
  fullName.vb: Mcma.Azure.BlobStorage.Proxies.BlobStorageProxy(Of T).AccountKey
- uid: Mcma.Azure.BlobStorage.Proxies.BlobStorageProxy`1.ServiceClient
  commentId: P:Mcma.Azure.BlobStorage.Proxies.BlobStorageProxy`1.ServiceClient
  name: ServiceClient
  nameWithType: BlobStorageProxy<T>.ServiceClient
  fullName: Mcma.Azure.BlobStorage.Proxies.BlobStorageProxy<T>.ServiceClient
  nameWithType.vb: BlobStorageProxy(Of T).ServiceClient
  fullName.vb: Mcma.Azure.BlobStorage.Proxies.BlobStorageProxy(Of T).ServiceClient
- uid: Mcma.Azure.BlobStorage.Proxies.BlobStorageProxy`1.ContainerClient
  commentId: P:Mcma.Azure.BlobStorage.Proxies.BlobStorageProxy`1.ContainerClient
  name: ContainerClient
  nameWithType: BlobStorageProxy<T>.ContainerClient
  fullName: Mcma.Azure.BlobStorage.Proxies.BlobStorageProxy<T>.ContainerClient
  nameWithType.vb: BlobStorageProxy(Of T).ContainerClient
  fullName.vb: Mcma.Azure.BlobStorage.Proxies.BlobStorageProxy(Of T).ContainerClient
- uid: Mcma.Serialization.McmaJson.ToMcmaJson(System.Object,System.Boolean)
  commentId: M:Mcma.Serialization.McmaJson.ToMcmaJson(System.Object,System.Boolean)
  isExternal: true
  name: ToMcmaJson(Object, Boolean)
  nameWithType: McmaJson.ToMcmaJson(Object, Boolean)
  fullName: Mcma.Serialization.McmaJson.ToMcmaJson(System.Object, System.Boolean)
  spec.csharp:
  - uid: Mcma.Serialization.McmaJson.ToMcmaJson(System.Object,System.Boolean)
    name: ToMcmaJson
    nameWithType: McmaJson.ToMcmaJson
    fullName: Mcma.Serialization.McmaJson.ToMcmaJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mcma.Serialization.McmaJson.ToMcmaJson(System.Object,System.Boolean)
    name: ToMcmaJson
    nameWithType: McmaJson.ToMcmaJson
    fullName: Mcma.Serialization.McmaJson.ToMcmaJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mcma.Serialization.McmaJson
  commentId: T:Mcma.Serialization.McmaJson
  parent: Mcma.Serialization
  name: McmaJson
  nameWithType: McmaJson
  fullName: Mcma.Serialization.McmaJson
- uid: Mcma.Serialization
  commentId: N:Mcma.Serialization
  name: Mcma.Serialization
  nameWithType: Mcma.Serialization
  fullName: Mcma.Serialization
- uid: Mcma.Azure.BlobStorage.Proxies.BlobStorageFolderProxy.PutAsync*
  commentId: Overload:Mcma.Azure.BlobStorage.Proxies.BlobStorageFolderProxy.PutAsync
  name: PutAsync
  nameWithType: BlobStorageFolderProxy.PutAsync
  fullName: Mcma.Azure.BlobStorage.Proxies.BlobStorageFolderProxy.PutAsync
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IO.Stream
  commentId: T:System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: Azure.Storage.Blobs.Models.BlobHttpHeaders
  commentId: T:Azure.Storage.Blobs.Models.BlobHttpHeaders
  parent: Azure.Storage.Blobs.Models
  isExternal: true
  name: BlobHttpHeaders
  nameWithType: BlobHttpHeaders
  fullName: Azure.Storage.Blobs.Models.BlobHttpHeaders
- uid: System.Threading.Tasks.Task{Mcma.Azure.BlobStorage.BlobStorageFileLocator}
  commentId: T:System.Threading.Tasks.Task{Mcma.Azure.BlobStorage.BlobStorageFileLocator}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<BlobStorageFileLocator>
  nameWithType: Task<BlobStorageFileLocator>
  fullName: System.Threading.Tasks.Task<Mcma.Azure.BlobStorage.BlobStorageFileLocator>
  nameWithType.vb: Task(Of BlobStorageFileLocator)
  fullName.vb: System.Threading.Tasks.Task(Of Mcma.Azure.BlobStorage.BlobStorageFileLocator)
  name.vb: Task(Of BlobStorageFileLocator)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mcma.Azure.BlobStorage.BlobStorageFileLocator
    name: BlobStorageFileLocator
    nameWithType: BlobStorageFileLocator
    fullName: Mcma.Azure.BlobStorage.BlobStorageFileLocator
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mcma.Azure.BlobStorage.BlobStorageFileLocator
    name: BlobStorageFileLocator
    nameWithType: BlobStorageFileLocator
    fullName: Mcma.Azure.BlobStorage.BlobStorageFileLocator
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IO
  commentId: N:System.IO
  isExternal: true
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
- uid: Azure.Storage.Blobs.Models
  commentId: N:Azure.Storage.Blobs.Models
  isExternal: true
  name: Azure.Storage.Blobs.Models
  nameWithType: Azure.Storage.Blobs.Models
  fullName: Azure.Storage.Blobs.Models
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Mcma.Azure.BlobStorage.Proxies.BlobStorageFolderProxy.PutAsTextAsync*
  commentId: Overload:Mcma.Azure.BlobStorage.Proxies.BlobStorageFolderProxy.PutAsTextAsync
  name: PutAsTextAsync
  nameWithType: BlobStorageFolderProxy.PutAsTextAsync
  fullName: Mcma.Azure.BlobStorage.Proxies.BlobStorageFolderProxy.PutAsTextAsync
