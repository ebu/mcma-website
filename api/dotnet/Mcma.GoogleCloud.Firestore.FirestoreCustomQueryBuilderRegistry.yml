### YamlMime:ManagedReference
items:
- uid: Mcma.GoogleCloud.Firestore.FirestoreCustomQueryBuilderRegistry
  commentId: T:Mcma.GoogleCloud.Firestore.FirestoreCustomQueryBuilderRegistry
  id: FirestoreCustomQueryBuilderRegistry
  parent: Mcma.GoogleCloud.Firestore
  children:
  - Mcma.GoogleCloud.Firestore.FirestoreCustomQueryBuilderRegistry.#ctor(System.Collections.Generic.IEnumerable{Mcma.Data.DocumentDatabase.Queries.ICustomQueryBuilder})
  - Mcma.GoogleCloud.Firestore.FirestoreCustomQueryBuilderRegistry.Get``1(System.String)
  langs:
  - csharp
  - vb
  name: FirestoreCustomQueryBuilderRegistry
  nameWithType: FirestoreCustomQueryBuilderRegistry
  fullName: Mcma.GoogleCloud.Firestore.FirestoreCustomQueryBuilderRegistry
  type: Class
  source:
    remote:
      path: GoogleCloud/Mcma.GoogleCloud.Firestore/FirestoreCustomQueryBuilderRegistry.cs
      branch: documentation
      repo: https://github.com/ebu/mcma-libraries-dotnet.git
    id: FirestoreCustomQueryBuilderRegistry
    path: ../mcma-libraries-dotnet/GoogleCloud/Mcma.GoogleCloud.Firestore/FirestoreCustomQueryBuilderRegistry.cs
    startLine: 8
  assemblies:
  - Mcma.GoogleCloud.Firestore
  namespace: Mcma.GoogleCloud.Firestore
  syntax:
    content: 'public class FirestoreCustomQueryBuilderRegistry : ICustomQueryBuilderRegistry<(Query, string)>'
    content.vb: >-
      Public Class FirestoreCustomQueryBuilderRegistry

          Implements ICustomQueryBuilderRegistry(Of(Query, String))
  inheritance:
  - System.Object
  implements:
  - Mcma.Data.DocumentDatabase.Queries.ICustomQueryBuilderRegistry{System.ValueTuple{Google.Cloud.Firestore.Query,System.String}}
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - System.Object.Mcma.Serialization.McmaJson.ToMcmaJson(System.Boolean)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Mcma.GoogleCloud.Firestore.FirestoreCustomQueryBuilderRegistry.#ctor(System.Collections.Generic.IEnumerable{Mcma.Data.DocumentDatabase.Queries.ICustomQueryBuilder})
  commentId: M:Mcma.GoogleCloud.Firestore.FirestoreCustomQueryBuilderRegistry.#ctor(System.Collections.Generic.IEnumerable{Mcma.Data.DocumentDatabase.Queries.ICustomQueryBuilder})
  id: '#ctor(System.Collections.Generic.IEnumerable{Mcma.Data.DocumentDatabase.Queries.ICustomQueryBuilder})'
  parent: Mcma.GoogleCloud.Firestore.FirestoreCustomQueryBuilderRegistry
  langs:
  - csharp
  - vb
  name: FirestoreCustomQueryBuilderRegistry(IEnumerable<ICustomQueryBuilder>)
  nameWithType: FirestoreCustomQueryBuilderRegistry.FirestoreCustomQueryBuilderRegistry(IEnumerable<ICustomQueryBuilder>)
  fullName: Mcma.GoogleCloud.Firestore.FirestoreCustomQueryBuilderRegistry.FirestoreCustomQueryBuilderRegistry(System.Collections.Generic.IEnumerable<Mcma.Data.DocumentDatabase.Queries.ICustomQueryBuilder>)
  type: Constructor
  source:
    remote:
      path: GoogleCloud/Mcma.GoogleCloud.Firestore/FirestoreCustomQueryBuilderRegistry.cs
      branch: documentation
      repo: https://github.com/ebu/mcma-libraries-dotnet.git
    id: .ctor
    path: ../mcma-libraries-dotnet/GoogleCloud/Mcma.GoogleCloud.Firestore/FirestoreCustomQueryBuilderRegistry.cs
    startLine: 10
  assemblies:
  - Mcma.GoogleCloud.Firestore
  namespace: Mcma.GoogleCloud.Firestore
  syntax:
    content: public FirestoreCustomQueryBuilderRegistry(IEnumerable<ICustomQueryBuilder> queryBuilders)
    parameters:
    - id: queryBuilders
      type: System.Collections.Generic.IEnumerable{Mcma.Data.DocumentDatabase.Queries.ICustomQueryBuilder}
    content.vb: Public Sub New(queryBuilders As IEnumerable(Of ICustomQueryBuilder))
  overload: Mcma.GoogleCloud.Firestore.FirestoreCustomQueryBuilderRegistry.#ctor*
  nameWithType.vb: FirestoreCustomQueryBuilderRegistry.FirestoreCustomQueryBuilderRegistry(IEnumerable(Of ICustomQueryBuilder))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Mcma.GoogleCloud.Firestore.FirestoreCustomQueryBuilderRegistry.FirestoreCustomQueryBuilderRegistry(System.Collections.Generic.IEnumerable(Of Mcma.Data.DocumentDatabase.Queries.ICustomQueryBuilder))
  name.vb: FirestoreCustomQueryBuilderRegistry(IEnumerable(Of ICustomQueryBuilder))
- uid: Mcma.GoogleCloud.Firestore.FirestoreCustomQueryBuilderRegistry.Get``1(System.String)
  commentId: M:Mcma.GoogleCloud.Firestore.FirestoreCustomQueryBuilderRegistry.Get``1(System.String)
  id: Get``1(System.String)
  parent: Mcma.GoogleCloud.Firestore.FirestoreCustomQueryBuilderRegistry
  langs:
  - csharp
  - vb
  name: Get<TParameters>(String)
  nameWithType: FirestoreCustomQueryBuilderRegistry.Get<TParameters>(String)
  fullName: Mcma.GoogleCloud.Firestore.FirestoreCustomQueryBuilderRegistry.Get<TParameters>(System.String)
  type: Method
  source:
    remote:
      path: GoogleCloud/Mcma.GoogleCloud.Firestore/FirestoreCustomQueryBuilderRegistry.cs
      branch: documentation
      repo: https://github.com/ebu/mcma-libraries-dotnet.git
    id: Get
    path: ../mcma-libraries-dotnet/GoogleCloud/Mcma.GoogleCloud.Firestore/FirestoreCustomQueryBuilderRegistry.cs
    startLine: 17
  assemblies:
  - Mcma.GoogleCloud.Firestore
  namespace: Mcma.GoogleCloud.Firestore
  syntax:
    content: public ICustomQueryBuilder<TParameters, (Query, string)> Get<TParameters>(string name)
    parameters:
    - id: name
      type: System.String
    typeParameters:
    - id: TParameters
    return:
      type: Mcma.Data.DocumentDatabase.Queries.ICustomQueryBuilder{{TParameters},System.ValueTuple{Google.Cloud.Firestore.Query,System.String}}
    content.vb: Public Function Get(Of TParameters)(name As String) As ICustomQueryBuilder(Of TParameters, (Query, String))
  overload: Mcma.GoogleCloud.Firestore.FirestoreCustomQueryBuilderRegistry.Get*
  implements:
  - Mcma.Data.DocumentDatabase.Queries.ICustomQueryBuilderRegistry{System.ValueTuple{Google.Cloud.Firestore.Query,System.String}}.Get``1(System.String)
  nameWithType.vb: FirestoreCustomQueryBuilderRegistry.Get(Of TParameters)(String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Mcma.GoogleCloud.Firestore.FirestoreCustomQueryBuilderRegistry.Get(Of TParameters)(System.String)
  name.vb: Get(Of TParameters)(String)
references:
- uid: Mcma.GoogleCloud.Firestore
  commentId: N:Mcma.GoogleCloud.Firestore
  name: Mcma.GoogleCloud.Firestore
  nameWithType: Mcma.GoogleCloud.Firestore
  fullName: Mcma.GoogleCloud.Firestore
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Mcma.Data.DocumentDatabase.Queries.ICustomQueryBuilderRegistry{System.ValueTuple{Google.Cloud.Firestore.Query,System.String}}
  commentId: T:Mcma.Data.DocumentDatabase.Queries.ICustomQueryBuilderRegistry{System.ValueTuple{Google.Cloud.Firestore.Query,System.String}}
  parent: Mcma.Data.DocumentDatabase.Queries
  definition: Mcma.Data.DocumentDatabase.Queries.ICustomQueryBuilderRegistry`1
  name: ICustomQueryBuilderRegistry<ValueTuple<Query, String>>
  nameWithType: ICustomQueryBuilderRegistry<ValueTuple<Query, String>>
  fullName: Mcma.Data.DocumentDatabase.Queries.ICustomQueryBuilderRegistry<System.ValueTuple<Google.Cloud.Firestore.Query, System.String>>
  nameWithType.vb: ICustomQueryBuilderRegistry(Of ValueTuple(Of Query, String))
  fullName.vb: Mcma.Data.DocumentDatabase.Queries.ICustomQueryBuilderRegistry(Of System.ValueTuple(Of Google.Cloud.Firestore.Query, System.String))
  name.vb: ICustomQueryBuilderRegistry(Of ValueTuple(Of Query, String))
  spec.csharp:
  - uid: Mcma.Data.DocumentDatabase.Queries.ICustomQueryBuilderRegistry`1
    name: ICustomQueryBuilderRegistry
    nameWithType: ICustomQueryBuilderRegistry
    fullName: Mcma.Data.DocumentDatabase.Queries.ICustomQueryBuilderRegistry
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ValueTuple`2
    name: ValueTuple
    nameWithType: ValueTuple
    fullName: System.ValueTuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Cloud.Firestore.Query
    name: Query
    nameWithType: Query
    fullName: Google.Cloud.Firestore.Query
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Mcma.Data.DocumentDatabase.Queries.ICustomQueryBuilderRegistry`1
    name: ICustomQueryBuilderRegistry
    nameWithType: ICustomQueryBuilderRegistry
    fullName: Mcma.Data.DocumentDatabase.Queries.ICustomQueryBuilderRegistry
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.ValueTuple`2
    name: ValueTuple
    nameWithType: ValueTuple
    fullName: System.ValueTuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Cloud.Firestore.Query
    name: Query
    nameWithType: Query
    fullName: Google.Cloud.Firestore.Query
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Mcma.Serialization.McmaJson.ToMcmaJson(System.Boolean)
  commentId: M:Mcma.Serialization.McmaJson.ToMcmaJson(System.Object,System.Boolean)
  parent: Mcma.Serialization.McmaJson
  definition: Mcma.Serialization.McmaJson.ToMcmaJson(System.Object,System.Boolean)
  name: ToMcmaJson(Boolean)
  nameWithType: McmaJson.ToMcmaJson(Boolean)
  fullName: Mcma.Serialization.McmaJson.ToMcmaJson(System.Boolean)
  spec.csharp:
  - uid: Mcma.Serialization.McmaJson.ToMcmaJson(System.Boolean)
    name: ToMcmaJson
    nameWithType: McmaJson.ToMcmaJson
    fullName: Mcma.Serialization.McmaJson.ToMcmaJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mcma.Serialization.McmaJson.ToMcmaJson(System.Boolean)
    name: ToMcmaJson
    nameWithType: McmaJson.ToMcmaJson
    fullName: Mcma.Serialization.McmaJson.ToMcmaJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Mcma.Data.DocumentDatabase.Queries.ICustomQueryBuilderRegistry`1
  commentId: T:Mcma.Data.DocumentDatabase.Queries.ICustomQueryBuilderRegistry`1
  name: ICustomQueryBuilderRegistry<TProviderQuery>
  nameWithType: ICustomQueryBuilderRegistry<TProviderQuery>
  fullName: Mcma.Data.DocumentDatabase.Queries.ICustomQueryBuilderRegistry<TProviderQuery>
  nameWithType.vb: ICustomQueryBuilderRegistry(Of TProviderQuery)
  fullName.vb: Mcma.Data.DocumentDatabase.Queries.ICustomQueryBuilderRegistry(Of TProviderQuery)
  name.vb: ICustomQueryBuilderRegistry(Of TProviderQuery)
  spec.csharp:
  - uid: Mcma.Data.DocumentDatabase.Queries.ICustomQueryBuilderRegistry`1
    name: ICustomQueryBuilderRegistry
    nameWithType: ICustomQueryBuilderRegistry
    fullName: Mcma.Data.DocumentDatabase.Queries.ICustomQueryBuilderRegistry
  - name: <
    nameWithType: <
    fullName: <
  - name: TProviderQuery
    nameWithType: TProviderQuery
    fullName: TProviderQuery
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Mcma.Data.DocumentDatabase.Queries.ICustomQueryBuilderRegistry`1
    name: ICustomQueryBuilderRegistry
    nameWithType: ICustomQueryBuilderRegistry
    fullName: Mcma.Data.DocumentDatabase.Queries.ICustomQueryBuilderRegistry
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TProviderQuery
    nameWithType: TProviderQuery
    fullName: TProviderQuery
  - name: )
    nameWithType: )
    fullName: )
- uid: Mcma.Data.DocumentDatabase.Queries
  commentId: N:Mcma.Data.DocumentDatabase.Queries
  name: Mcma.Data.DocumentDatabase.Queries
  nameWithType: Mcma.Data.DocumentDatabase.Queries
  fullName: Mcma.Data.DocumentDatabase.Queries
- uid: Mcma.Serialization.McmaJson.ToMcmaJson(System.Object,System.Boolean)
  commentId: M:Mcma.Serialization.McmaJson.ToMcmaJson(System.Object,System.Boolean)
  isExternal: true
  name: ToMcmaJson(Object, Boolean)
  nameWithType: McmaJson.ToMcmaJson(Object, Boolean)
  fullName: Mcma.Serialization.McmaJson.ToMcmaJson(System.Object, System.Boolean)
  spec.csharp:
  - uid: Mcma.Serialization.McmaJson.ToMcmaJson(System.Object,System.Boolean)
    name: ToMcmaJson
    nameWithType: McmaJson.ToMcmaJson
    fullName: Mcma.Serialization.McmaJson.ToMcmaJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mcma.Serialization.McmaJson.ToMcmaJson(System.Object,System.Boolean)
    name: ToMcmaJson
    nameWithType: McmaJson.ToMcmaJson
    fullName: Mcma.Serialization.McmaJson.ToMcmaJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mcma.Serialization.McmaJson
  commentId: T:Mcma.Serialization.McmaJson
  parent: Mcma.Serialization
  name: McmaJson
  nameWithType: McmaJson
  fullName: Mcma.Serialization.McmaJson
- uid: Mcma.Serialization
  commentId: N:Mcma.Serialization
  name: Mcma.Serialization
  nameWithType: Mcma.Serialization
  fullName: Mcma.Serialization
- uid: Mcma.GoogleCloud.Firestore.FirestoreCustomQueryBuilderRegistry.#ctor*
  commentId: Overload:Mcma.GoogleCloud.Firestore.FirestoreCustomQueryBuilderRegistry.#ctor
  name: FirestoreCustomQueryBuilderRegistry
  nameWithType: FirestoreCustomQueryBuilderRegistry.FirestoreCustomQueryBuilderRegistry
  fullName: Mcma.GoogleCloud.Firestore.FirestoreCustomQueryBuilderRegistry.FirestoreCustomQueryBuilderRegistry
- uid: System.Collections.Generic.IEnumerable{Mcma.Data.DocumentDatabase.Queries.ICustomQueryBuilder}
  commentId: T:System.Collections.Generic.IEnumerable{Mcma.Data.DocumentDatabase.Queries.ICustomQueryBuilder}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<ICustomQueryBuilder>
  nameWithType: IEnumerable<ICustomQueryBuilder>
  fullName: System.Collections.Generic.IEnumerable<Mcma.Data.DocumentDatabase.Queries.ICustomQueryBuilder>
  nameWithType.vb: IEnumerable(Of ICustomQueryBuilder)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Mcma.Data.DocumentDatabase.Queries.ICustomQueryBuilder)
  name.vb: IEnumerable(Of ICustomQueryBuilder)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mcma.Data.DocumentDatabase.Queries.ICustomQueryBuilder
    name: ICustomQueryBuilder
    nameWithType: ICustomQueryBuilder
    fullName: Mcma.Data.DocumentDatabase.Queries.ICustomQueryBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mcma.Data.DocumentDatabase.Queries.ICustomQueryBuilder
    name: ICustomQueryBuilder
    nameWithType: ICustomQueryBuilder
    fullName: Mcma.Data.DocumentDatabase.Queries.ICustomQueryBuilder
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Mcma.GoogleCloud.Firestore.FirestoreCustomQueryBuilderRegistry.Get*
  commentId: Overload:Mcma.GoogleCloud.Firestore.FirestoreCustomQueryBuilderRegistry.Get
  name: Get
  nameWithType: FirestoreCustomQueryBuilderRegistry.Get
  fullName: Mcma.GoogleCloud.Firestore.FirestoreCustomQueryBuilderRegistry.Get
- uid: Mcma.Data.DocumentDatabase.Queries.ICustomQueryBuilderRegistry{System.ValueTuple{Google.Cloud.Firestore.Query,System.String}}.Get``1(System.String)
  commentId: M:Mcma.Data.DocumentDatabase.Queries.ICustomQueryBuilderRegistry{System.ValueTuple{Google.Cloud.Firestore.Query,System.String}}.Get``1(System.String)
  parent: Mcma.Data.DocumentDatabase.Queries.ICustomQueryBuilderRegistry{System.ValueTuple{Google.Cloud.Firestore.Query,System.String}}
  definition: Mcma.Data.DocumentDatabase.Queries.ICustomQueryBuilderRegistry`1.Get``1(System.String)
  name: Get<TParameters>(String)
  nameWithType: ICustomQueryBuilderRegistry<(Query, String)>.Get<TParameters>(String)
  fullName: Mcma.Data.DocumentDatabase.Queries.ICustomQueryBuilderRegistry<System.ValueTuple<Google.Cloud.Firestore.Query, System.String>>.Get<TParameters>(System.String)
  nameWithType.vb: ICustomQueryBuilderRegistry(Of (Query, String)).Get(Of TParameters)(String)
  fullName.vb: Mcma.Data.DocumentDatabase.Queries.ICustomQueryBuilderRegistry(Of System.ValueTuple(Of Google.Cloud.Firestore.Query, System.String)).Get(Of TParameters)(System.String)
  name.vb: Get(Of TParameters)(String)
  spec.csharp:
  - uid: Mcma.Data.DocumentDatabase.Queries.ICustomQueryBuilderRegistry`1.Get``1(System.String)
    name: Get<TParameters>
    nameWithType: ICustomQueryBuilderRegistry<(Query, String)>.Get<TParameters>
    fullName: Mcma.Data.DocumentDatabase.Queries.ICustomQueryBuilderRegistry<System.ValueTuple<Google.Cloud.Firestore.Query, System.String>>.Get<TParameters>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mcma.Data.DocumentDatabase.Queries.ICustomQueryBuilderRegistry`1.Get``1(System.String)
    name: Get(Of TParameters)
    nameWithType: ICustomQueryBuilderRegistry(Of (Query, String)).Get(Of TParameters)
    fullName: Mcma.Data.DocumentDatabase.Queries.ICustomQueryBuilderRegistry(Of System.ValueTuple(Of Google.Cloud.Firestore.Query, System.String)).Get(Of TParameters)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Mcma.Data.DocumentDatabase.Queries.ICustomQueryBuilder{{TParameters},System.ValueTuple{Google.Cloud.Firestore.Query,System.String}}
  commentId: T:Mcma.Data.DocumentDatabase.Queries.ICustomQueryBuilder{``0,System.ValueTuple{Google.Cloud.Firestore.Query,System.String}}
  parent: Mcma.Data.DocumentDatabase.Queries
  definition: Mcma.Data.DocumentDatabase.Queries.ICustomQueryBuilder`2
  name: ICustomQueryBuilder<TParameters, ValueTuple<Query, String>>
  nameWithType: ICustomQueryBuilder<TParameters, ValueTuple<Query, String>>
  fullName: Mcma.Data.DocumentDatabase.Queries.ICustomQueryBuilder<TParameters, System.ValueTuple<Google.Cloud.Firestore.Query, System.String>>
  nameWithType.vb: ICustomQueryBuilder(Of TParameters, ValueTuple(Of Query, String))
  fullName.vb: Mcma.Data.DocumentDatabase.Queries.ICustomQueryBuilder(Of TParameters, System.ValueTuple(Of Google.Cloud.Firestore.Query, System.String))
  name.vb: ICustomQueryBuilder(Of TParameters, ValueTuple(Of Query, String))
  spec.csharp:
  - uid: Mcma.Data.DocumentDatabase.Queries.ICustomQueryBuilder`2
    name: ICustomQueryBuilder
    nameWithType: ICustomQueryBuilder
    fullName: Mcma.Data.DocumentDatabase.Queries.ICustomQueryBuilder
  - name: <
    nameWithType: <
    fullName: <
  - name: TParameters
    nameWithType: TParameters
    fullName: TParameters
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.ValueTuple`2
    name: ValueTuple
    nameWithType: ValueTuple
    fullName: System.ValueTuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Google.Cloud.Firestore.Query
    name: Query
    nameWithType: Query
    fullName: Google.Cloud.Firestore.Query
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Mcma.Data.DocumentDatabase.Queries.ICustomQueryBuilder`2
    name: ICustomQueryBuilder
    nameWithType: ICustomQueryBuilder
    fullName: Mcma.Data.DocumentDatabase.Queries.ICustomQueryBuilder
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TParameters
    nameWithType: TParameters
    fullName: TParameters
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.ValueTuple`2
    name: ValueTuple
    nameWithType: ValueTuple
    fullName: System.ValueTuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Google.Cloud.Firestore.Query
    name: Query
    nameWithType: Query
    fullName: Google.Cloud.Firestore.Query
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Mcma.Data.DocumentDatabase.Queries.ICustomQueryBuilderRegistry`1.Get``1(System.String)
  commentId: M:Mcma.Data.DocumentDatabase.Queries.ICustomQueryBuilderRegistry`1.Get``1(System.String)
  isExternal: true
  name: Get<TParameters>(String)
  nameWithType: ICustomQueryBuilderRegistry<TProviderQuery>.Get<TParameters>(String)
  fullName: Mcma.Data.DocumentDatabase.Queries.ICustomQueryBuilderRegistry<TProviderQuery>.Get<TParameters>(System.String)
  nameWithType.vb: ICustomQueryBuilderRegistry(Of TProviderQuery).Get(Of TParameters)(String)
  fullName.vb: Mcma.Data.DocumentDatabase.Queries.ICustomQueryBuilderRegistry(Of TProviderQuery).Get(Of TParameters)(System.String)
  name.vb: Get(Of TParameters)(String)
  spec.csharp:
  - uid: Mcma.Data.DocumentDatabase.Queries.ICustomQueryBuilderRegistry`1.Get``1(System.String)
    name: Get<TParameters>
    nameWithType: ICustomQueryBuilderRegistry<TProviderQuery>.Get<TParameters>
    fullName: Mcma.Data.DocumentDatabase.Queries.ICustomQueryBuilderRegistry<TProviderQuery>.Get<TParameters>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mcma.Data.DocumentDatabase.Queries.ICustomQueryBuilderRegistry`1.Get``1(System.String)
    name: Get(Of TParameters)
    nameWithType: ICustomQueryBuilderRegistry(Of TProviderQuery).Get(Of TParameters)
    fullName: Mcma.Data.DocumentDatabase.Queries.ICustomQueryBuilderRegistry(Of TProviderQuery).Get(Of TParameters)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mcma.Data.DocumentDatabase.Queries.ICustomQueryBuilder`2
  commentId: T:Mcma.Data.DocumentDatabase.Queries.ICustomQueryBuilder`2
  name: ICustomQueryBuilder<TParameters, TProviderQuery>
  nameWithType: ICustomQueryBuilder<TParameters, TProviderQuery>
  fullName: Mcma.Data.DocumentDatabase.Queries.ICustomQueryBuilder<TParameters, TProviderQuery>
  nameWithType.vb: ICustomQueryBuilder(Of TParameters, TProviderQuery)
  fullName.vb: Mcma.Data.DocumentDatabase.Queries.ICustomQueryBuilder(Of TParameters, TProviderQuery)
  name.vb: ICustomQueryBuilder(Of TParameters, TProviderQuery)
  spec.csharp:
  - uid: Mcma.Data.DocumentDatabase.Queries.ICustomQueryBuilder`2
    name: ICustomQueryBuilder
    nameWithType: ICustomQueryBuilder
    fullName: Mcma.Data.DocumentDatabase.Queries.ICustomQueryBuilder
  - name: <
    nameWithType: <
    fullName: <
  - name: TParameters
    nameWithType: TParameters
    fullName: TParameters
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TProviderQuery
    nameWithType: TProviderQuery
    fullName: TProviderQuery
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Mcma.Data.DocumentDatabase.Queries.ICustomQueryBuilder`2
    name: ICustomQueryBuilder
    nameWithType: ICustomQueryBuilder
    fullName: Mcma.Data.DocumentDatabase.Queries.ICustomQueryBuilder
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TParameters
    nameWithType: TParameters
    fullName: TParameters
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TProviderQuery
    nameWithType: TProviderQuery
    fullName: TProviderQuery
  - name: )
    nameWithType: )
    fullName: )
