### YamlMime:ManagedReference
items:
- uid: Mcma.Data.DocumentDatabase.Queries.CustomQueryBuilder`2
  commentId: T:Mcma.Data.DocumentDatabase.Queries.CustomQueryBuilder`2
  id: CustomQueryBuilder`2
  parent: Mcma.Data.DocumentDatabase.Queries
  children:
  - Mcma.Data.DocumentDatabase.Queries.CustomQueryBuilder`2.Build(Mcma.Data.DocumentDatabase.Queries.CustomQuery{`0})
  - Mcma.Data.DocumentDatabase.Queries.CustomQueryBuilder`2.Mcma#Data#DocumentDatabase#Queries#ICustomQueryBuilder#ParameterType
  - Mcma.Data.DocumentDatabase.Queries.CustomQueryBuilder`2.Name
  langs:
  - csharp
  - vb
  name: CustomQueryBuilder<TParameters, TProviderQuery>
  nameWithType: CustomQueryBuilder<TParameters, TProviderQuery>
  fullName: Mcma.Data.DocumentDatabase.Queries.CustomQueryBuilder<TParameters, TProviderQuery>
  type: Class
  source:
    remote:
      path: Base/Mcma.Data/DocumentDatabase/Queries/Custom/CustomQueryBuilder.cs
      branch: documentation
      repo: https://github.com/ebu/mcma-libraries-dotnet.git
    id: CustomQueryBuilder
    path: ../mcma-libraries-dotnet/Base/Mcma.Data/DocumentDatabase/Queries/Custom/CustomQueryBuilder.cs
    startLine: 4
  assemblies:
  - Mcma.Data
  namespace: Mcma.Data.DocumentDatabase.Queries
  syntax:
    content: 'public abstract class CustomQueryBuilder<TParameters, TProviderQuery> : ICustomQueryBuilder<TParameters, TProviderQuery>, ICustomQueryBuilder'
    typeParameters:
    - id: TParameters
    - id: TProviderQuery
    content.vb: >-
      Public MustInherit Class CustomQueryBuilder(Of TParameters, TProviderQuery)
          Implements ICustomQueryBuilder(Of TParameters, TProviderQuery), ICustomQueryBuilder
  inheritance:
  - System.Object
  implements:
  - Mcma.Data.DocumentDatabase.Queries.ICustomQueryBuilder{{TParameters},{TProviderQuery}}
  - Mcma.Data.DocumentDatabase.Queries.ICustomQueryBuilder
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - System.Object.Mcma.Serialization.McmaJson.ToMcmaJson(System.Boolean)
  nameWithType.vb: CustomQueryBuilder(Of TParameters, TProviderQuery)
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
  fullName.vb: Mcma.Data.DocumentDatabase.Queries.CustomQueryBuilder(Of TParameters, TProviderQuery)
  name.vb: CustomQueryBuilder(Of TParameters, TProviderQuery)
- uid: Mcma.Data.DocumentDatabase.Queries.CustomQueryBuilder`2.Name
  commentId: P:Mcma.Data.DocumentDatabase.Queries.CustomQueryBuilder`2.Name
  id: Name
  parent: Mcma.Data.DocumentDatabase.Queries.CustomQueryBuilder`2
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: CustomQueryBuilder<TParameters, TProviderQuery>.Name
  fullName: Mcma.Data.DocumentDatabase.Queries.CustomQueryBuilder<TParameters, TProviderQuery>.Name
  type: Property
  source:
    remote:
      path: Base/Mcma.Data/DocumentDatabase/Queries/Custom/CustomQueryBuilder.cs
      branch: documentation
      repo: https://github.com/ebu/mcma-libraries-dotnet.git
    id: Name
    path: ../mcma-libraries-dotnet/Base/Mcma.Data/DocumentDatabase/Queries/Custom/CustomQueryBuilder.cs
    startLine: 6
  assemblies:
  - Mcma.Data
  namespace: Mcma.Data.DocumentDatabase.Queries
  syntax:
    content: public abstract string Name { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public MustOverride ReadOnly Property Name As String
  overload: Mcma.Data.DocumentDatabase.Queries.CustomQueryBuilder`2.Name*
  implements:
  - Mcma.Data.DocumentDatabase.Queries.ICustomQueryBuilder.Name
  nameWithType.vb: CustomQueryBuilder(Of TParameters, TProviderQuery).Name
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
  fullName.vb: Mcma.Data.DocumentDatabase.Queries.CustomQueryBuilder(Of TParameters, TProviderQuery).Name
- uid: Mcma.Data.DocumentDatabase.Queries.CustomQueryBuilder`2.Mcma#Data#DocumentDatabase#Queries#ICustomQueryBuilder#ParameterType
  commentId: P:Mcma.Data.DocumentDatabase.Queries.CustomQueryBuilder`2.Mcma#Data#DocumentDatabase#Queries#ICustomQueryBuilder#ParameterType
  id: Mcma#Data#DocumentDatabase#Queries#ICustomQueryBuilder#ParameterType
  isEii: true
  parent: Mcma.Data.DocumentDatabase.Queries.CustomQueryBuilder`2
  langs:
  - csharp
  - vb
  name: ICustomQueryBuilder.ParameterType
  nameWithType: CustomQueryBuilder<TParameters, TProviderQuery>.ICustomQueryBuilder.ParameterType
  fullName: Mcma.Data.DocumentDatabase.Queries.CustomQueryBuilder<TParameters, TProviderQuery>.Mcma.Data.DocumentDatabase.Queries.ICustomQueryBuilder.ParameterType
  type: Property
  source:
    remote:
      path: Base/Mcma.Data/DocumentDatabase/Queries/Custom/CustomQueryBuilder.cs
      branch: documentation
      repo: https://github.com/ebu/mcma-libraries-dotnet.git
    id: Mcma.Data.DocumentDatabase.Queries.ICustomQueryBuilder.ParameterType
    path: ../mcma-libraries-dotnet/Base/Mcma.Data/DocumentDatabase/Queries/Custom/CustomQueryBuilder.cs
    startLine: 8
  assemblies:
  - Mcma.Data
  namespace: Mcma.Data.DocumentDatabase.Queries
  syntax:
    content: Type ICustomQueryBuilder.ParameterType { get; }
    parameters: []
    return:
      type: System.Type
    content.vb: ReadOnly WriteOnly Property Mcma.Data.DocumentDatabase.Queries.ICustomQueryBuilder.ParameterType As Type Implements ICustomQueryBuilder.ParameterType
  overload: Mcma.Data.DocumentDatabase.Queries.CustomQueryBuilder`2.Mcma#Data#DocumentDatabase#Queries#ICustomQueryBuilder#ParameterType*
  implements:
  - Mcma.Data.DocumentDatabase.Queries.ICustomQueryBuilder.ParameterType
  nameWithType.vb: CustomQueryBuilder(Of TParameters, TProviderQuery).Mcma.Data.DocumentDatabase.Queries.ICustomQueryBuilder.ParameterType
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  fullName.vb: Mcma.Data.DocumentDatabase.Queries.CustomQueryBuilder(Of TParameters, TProviderQuery).Mcma.Data.DocumentDatabase.Queries.ICustomQueryBuilder.ParameterType
  name.vb: Mcma.Data.DocumentDatabase.Queries.ICustomQueryBuilder.ParameterType
- uid: Mcma.Data.DocumentDatabase.Queries.CustomQueryBuilder`2.Build(Mcma.Data.DocumentDatabase.Queries.CustomQuery{`0})
  commentId: M:Mcma.Data.DocumentDatabase.Queries.CustomQueryBuilder`2.Build(Mcma.Data.DocumentDatabase.Queries.CustomQuery{`0})
  id: Build(Mcma.Data.DocumentDatabase.Queries.CustomQuery{`0})
  parent: Mcma.Data.DocumentDatabase.Queries.CustomQueryBuilder`2
  langs:
  - csharp
  - vb
  name: Build(CustomQuery<TParameters>)
  nameWithType: CustomQueryBuilder<TParameters, TProviderQuery>.Build(CustomQuery<TParameters>)
  fullName: Mcma.Data.DocumentDatabase.Queries.CustomQueryBuilder<TParameters, TProviderQuery>.Build(Mcma.Data.DocumentDatabase.Queries.CustomQuery<TParameters>)
  type: Method
  source:
    remote:
      path: Base/Mcma.Data/DocumentDatabase/Queries/Custom/CustomQueryBuilder.cs
      branch: documentation
      repo: https://github.com/ebu/mcma-libraries-dotnet.git
    id: Build
    path: ../mcma-libraries-dotnet/Base/Mcma.Data/DocumentDatabase/Queries/Custom/CustomQueryBuilder.cs
    startLine: 10
  assemblies:
  - Mcma.Data
  namespace: Mcma.Data.DocumentDatabase.Queries
  syntax:
    content: public abstract TProviderQuery Build(CustomQuery<TParameters> customQuery)
    parameters:
    - id: customQuery
      type: Mcma.Data.DocumentDatabase.Queries.CustomQuery{{TParameters}}
    return:
      type: '{TProviderQuery}'
    content.vb: Public MustOverride Function Build(customQuery As CustomQuery(Of TParameters)) As TProviderQuery
  overload: Mcma.Data.DocumentDatabase.Queries.CustomQueryBuilder`2.Build*
  implements:
  - Mcma.Data.DocumentDatabase.Queries.ICustomQueryBuilder{{TParameters},{TProviderQuery}}.Build(Mcma.Data.DocumentDatabase.Queries.CustomQuery{{TParameters}})
  nameWithType.vb: CustomQueryBuilder(Of TParameters, TProviderQuery).Build(CustomQuery(Of TParameters))
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: Mcma.Data.DocumentDatabase.Queries.CustomQueryBuilder(Of TParameters, TProviderQuery).Build(Mcma.Data.DocumentDatabase.Queries.CustomQuery(Of TParameters))
  name.vb: Build(CustomQuery(Of TParameters))
references:
- uid: Mcma.Data.DocumentDatabase.Queries
  commentId: N:Mcma.Data.DocumentDatabase.Queries
  name: Mcma.Data.DocumentDatabase.Queries
  nameWithType: Mcma.Data.DocumentDatabase.Queries
  fullName: Mcma.Data.DocumentDatabase.Queries
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Mcma.Data.DocumentDatabase.Queries.ICustomQueryBuilder{{TParameters},{TProviderQuery}}
  commentId: T:Mcma.Data.DocumentDatabase.Queries.ICustomQueryBuilder{`0,`1}
  parent: Mcma.Data.DocumentDatabase.Queries
  definition: Mcma.Data.DocumentDatabase.Queries.ICustomQueryBuilder`2
  name: ICustomQueryBuilder<TParameters, TProviderQuery>
  nameWithType: ICustomQueryBuilder<TParameters, TProviderQuery>
  fullName: Mcma.Data.DocumentDatabase.Queries.ICustomQueryBuilder<TParameters, TProviderQuery>
  nameWithType.vb: ICustomQueryBuilder(Of TParameters, TProviderQuery)
  fullName.vb: Mcma.Data.DocumentDatabase.Queries.ICustomQueryBuilder(Of TParameters, TProviderQuery)
  name.vb: ICustomQueryBuilder(Of TParameters, TProviderQuery)
  spec.csharp:
  - uid: Mcma.Data.DocumentDatabase.Queries.ICustomQueryBuilder`2
    name: ICustomQueryBuilder
    nameWithType: ICustomQueryBuilder
    fullName: Mcma.Data.DocumentDatabase.Queries.ICustomQueryBuilder
  - name: <
    nameWithType: <
    fullName: <
  - name: TParameters
    nameWithType: TParameters
    fullName: TParameters
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TProviderQuery
    nameWithType: TProviderQuery
    fullName: TProviderQuery
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Mcma.Data.DocumentDatabase.Queries.ICustomQueryBuilder`2
    name: ICustomQueryBuilder
    nameWithType: ICustomQueryBuilder
    fullName: Mcma.Data.DocumentDatabase.Queries.ICustomQueryBuilder
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TParameters
    nameWithType: TParameters
    fullName: TParameters
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TProviderQuery
    nameWithType: TProviderQuery
    fullName: TProviderQuery
  - name: )
    nameWithType: )
    fullName: )
- uid: Mcma.Data.DocumentDatabase.Queries.ICustomQueryBuilder
  commentId: T:Mcma.Data.DocumentDatabase.Queries.ICustomQueryBuilder
  parent: Mcma.Data.DocumentDatabase.Queries
  name: ICustomQueryBuilder
  nameWithType: ICustomQueryBuilder
  fullName: Mcma.Data.DocumentDatabase.Queries.ICustomQueryBuilder
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Mcma.Serialization.McmaJson.ToMcmaJson(System.Boolean)
  commentId: M:Mcma.Serialization.McmaJson.ToMcmaJson(System.Object,System.Boolean)
  parent: Mcma.Serialization.McmaJson
  definition: Mcma.Serialization.McmaJson.ToMcmaJson(System.Object,System.Boolean)
  name: ToMcmaJson(Boolean)
  nameWithType: McmaJson.ToMcmaJson(Boolean)
  fullName: Mcma.Serialization.McmaJson.ToMcmaJson(System.Boolean)
  spec.csharp:
  - uid: Mcma.Serialization.McmaJson.ToMcmaJson(System.Boolean)
    name: ToMcmaJson
    nameWithType: McmaJson.ToMcmaJson
    fullName: Mcma.Serialization.McmaJson.ToMcmaJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mcma.Serialization.McmaJson.ToMcmaJson(System.Boolean)
    name: ToMcmaJson
    nameWithType: McmaJson.ToMcmaJson
    fullName: Mcma.Serialization.McmaJson.ToMcmaJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Mcma.Data.DocumentDatabase.Queries.ICustomQueryBuilder`2
  commentId: T:Mcma.Data.DocumentDatabase.Queries.ICustomQueryBuilder`2
  name: ICustomQueryBuilder<TParameters, TProviderQuery>
  nameWithType: ICustomQueryBuilder<TParameters, TProviderQuery>
  fullName: Mcma.Data.DocumentDatabase.Queries.ICustomQueryBuilder<TParameters, TProviderQuery>
  nameWithType.vb: ICustomQueryBuilder(Of TParameters, TProviderQuery)
  fullName.vb: Mcma.Data.DocumentDatabase.Queries.ICustomQueryBuilder(Of TParameters, TProviderQuery)
  name.vb: ICustomQueryBuilder(Of TParameters, TProviderQuery)
  spec.csharp:
  - uid: Mcma.Data.DocumentDatabase.Queries.ICustomQueryBuilder`2
    name: ICustomQueryBuilder
    nameWithType: ICustomQueryBuilder
    fullName: Mcma.Data.DocumentDatabase.Queries.ICustomQueryBuilder
  - name: <
    nameWithType: <
    fullName: <
  - name: TParameters
    nameWithType: TParameters
    fullName: TParameters
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TProviderQuery
    nameWithType: TProviderQuery
    fullName: TProviderQuery
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Mcma.Data.DocumentDatabase.Queries.ICustomQueryBuilder`2
    name: ICustomQueryBuilder
    nameWithType: ICustomQueryBuilder
    fullName: Mcma.Data.DocumentDatabase.Queries.ICustomQueryBuilder
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TParameters
    nameWithType: TParameters
    fullName: TParameters
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TProviderQuery
    nameWithType: TProviderQuery
    fullName: TProviderQuery
  - name: )
    nameWithType: )
    fullName: )
- uid: Mcma.Serialization.McmaJson.ToMcmaJson(System.Object,System.Boolean)
  commentId: M:Mcma.Serialization.McmaJson.ToMcmaJson(System.Object,System.Boolean)
  isExternal: true
  name: ToMcmaJson(Object, Boolean)
  nameWithType: McmaJson.ToMcmaJson(Object, Boolean)
  fullName: Mcma.Serialization.McmaJson.ToMcmaJson(System.Object, System.Boolean)
  spec.csharp:
  - uid: Mcma.Serialization.McmaJson.ToMcmaJson(System.Object,System.Boolean)
    name: ToMcmaJson
    nameWithType: McmaJson.ToMcmaJson
    fullName: Mcma.Serialization.McmaJson.ToMcmaJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mcma.Serialization.McmaJson.ToMcmaJson(System.Object,System.Boolean)
    name: ToMcmaJson
    nameWithType: McmaJson.ToMcmaJson
    fullName: Mcma.Serialization.McmaJson.ToMcmaJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mcma.Serialization.McmaJson
  commentId: T:Mcma.Serialization.McmaJson
  parent: Mcma.Serialization
  name: McmaJson
  nameWithType: McmaJson
  fullName: Mcma.Serialization.McmaJson
- uid: Mcma.Serialization
  commentId: N:Mcma.Serialization
  name: Mcma.Serialization
  nameWithType: Mcma.Serialization
  fullName: Mcma.Serialization
- uid: Mcma.Data.DocumentDatabase.Queries.CustomQueryBuilder`2.Name*
  commentId: Overload:Mcma.Data.DocumentDatabase.Queries.CustomQueryBuilder`2.Name
  name: Name
  nameWithType: CustomQueryBuilder<TParameters, TProviderQuery>.Name
  fullName: Mcma.Data.DocumentDatabase.Queries.CustomQueryBuilder<TParameters, TProviderQuery>.Name
  nameWithType.vb: CustomQueryBuilder(Of TParameters, TProviderQuery).Name
  fullName.vb: Mcma.Data.DocumentDatabase.Queries.CustomQueryBuilder(Of TParameters, TProviderQuery).Name
- uid: Mcma.Data.DocumentDatabase.Queries.ICustomQueryBuilder.Name
  commentId: P:Mcma.Data.DocumentDatabase.Queries.ICustomQueryBuilder.Name
  parent: Mcma.Data.DocumentDatabase.Queries.ICustomQueryBuilder
  name: Name
  nameWithType: ICustomQueryBuilder.Name
  fullName: Mcma.Data.DocumentDatabase.Queries.ICustomQueryBuilder.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Mcma.Data.DocumentDatabase.Queries.CustomQueryBuilder`2.Mcma#Data#DocumentDatabase#Queries#ICustomQueryBuilder#ParameterType*
  commentId: Overload:Mcma.Data.DocumentDatabase.Queries.CustomQueryBuilder`2.Mcma#Data#DocumentDatabase#Queries#ICustomQueryBuilder#ParameterType
  name: ICustomQueryBuilder.ParameterType
  nameWithType: CustomQueryBuilder<TParameters, TProviderQuery>.ICustomQueryBuilder.ParameterType
  fullName: Mcma.Data.DocumentDatabase.Queries.CustomQueryBuilder<TParameters, TProviderQuery>.Mcma.Data.DocumentDatabase.Queries.ICustomQueryBuilder.ParameterType
  nameWithType.vb: CustomQueryBuilder(Of TParameters, TProviderQuery).Mcma.Data.DocumentDatabase.Queries.ICustomQueryBuilder.ParameterType
  fullName.vb: Mcma.Data.DocumentDatabase.Queries.CustomQueryBuilder(Of TParameters, TProviderQuery).Mcma.Data.DocumentDatabase.Queries.ICustomQueryBuilder.ParameterType
  name.vb: Mcma.Data.DocumentDatabase.Queries.ICustomQueryBuilder.ParameterType
- uid: Mcma.Data.DocumentDatabase.Queries.ICustomQueryBuilder.ParameterType
  commentId: P:Mcma.Data.DocumentDatabase.Queries.ICustomQueryBuilder.ParameterType
  parent: Mcma.Data.DocumentDatabase.Queries.ICustomQueryBuilder
  name: ParameterType
  nameWithType: ICustomQueryBuilder.ParameterType
  fullName: Mcma.Data.DocumentDatabase.Queries.ICustomQueryBuilder.ParameterType
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: Mcma.Data.DocumentDatabase.Queries.CustomQueryBuilder`2.Build*
  commentId: Overload:Mcma.Data.DocumentDatabase.Queries.CustomQueryBuilder`2.Build
  name: Build
  nameWithType: CustomQueryBuilder<TParameters, TProviderQuery>.Build
  fullName: Mcma.Data.DocumentDatabase.Queries.CustomQueryBuilder<TParameters, TProviderQuery>.Build
  nameWithType.vb: CustomQueryBuilder(Of TParameters, TProviderQuery).Build
  fullName.vb: Mcma.Data.DocumentDatabase.Queries.CustomQueryBuilder(Of TParameters, TProviderQuery).Build
- uid: Mcma.Data.DocumentDatabase.Queries.ICustomQueryBuilder{{TParameters},{TProviderQuery}}.Build(Mcma.Data.DocumentDatabase.Queries.CustomQuery{{TParameters}})
  commentId: M:Mcma.Data.DocumentDatabase.Queries.ICustomQueryBuilder{`0,`1}.Build(Mcma.Data.DocumentDatabase.Queries.CustomQuery{`0})
  parent: Mcma.Data.DocumentDatabase.Queries.ICustomQueryBuilder{{TParameters},{TProviderQuery}}
  definition: Mcma.Data.DocumentDatabase.Queries.ICustomQueryBuilder`2.Build(Mcma.Data.DocumentDatabase.Queries.CustomQuery{`0})
  name: Build(CustomQuery<TParameters>)
  nameWithType: ICustomQueryBuilder<TParameters, TProviderQuery>.Build(CustomQuery<TParameters>)
  fullName: Mcma.Data.DocumentDatabase.Queries.ICustomQueryBuilder<TParameters, TProviderQuery>.Build(Mcma.Data.DocumentDatabase.Queries.CustomQuery<TParameters>)
  nameWithType.vb: ICustomQueryBuilder(Of TParameters, TProviderQuery).Build(CustomQuery(Of TParameters))
  fullName.vb: Mcma.Data.DocumentDatabase.Queries.ICustomQueryBuilder(Of TParameters, TProviderQuery).Build(Mcma.Data.DocumentDatabase.Queries.CustomQuery(Of TParameters))
  name.vb: Build(CustomQuery(Of TParameters))
  spec.csharp:
  - uid: Mcma.Data.DocumentDatabase.Queries.ICustomQueryBuilder`2.Build(Mcma.Data.DocumentDatabase.Queries.CustomQuery{`0})
    name: Build
    nameWithType: ICustomQueryBuilder<TParameters, TProviderQuery>.Build
    fullName: Mcma.Data.DocumentDatabase.Queries.ICustomQueryBuilder<TParameters, TProviderQuery>.Build
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mcma.Data.DocumentDatabase.Queries.CustomQuery`1
    name: CustomQuery
    nameWithType: CustomQuery
    fullName: Mcma.Data.DocumentDatabase.Queries.CustomQuery
  - name: <
    nameWithType: <
    fullName: <
  - name: TParameters
    nameWithType: TParameters
    fullName: TParameters
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mcma.Data.DocumentDatabase.Queries.ICustomQueryBuilder`2.Build(Mcma.Data.DocumentDatabase.Queries.CustomQuery{`0})
    name: Build
    nameWithType: ICustomQueryBuilder(Of TParameters, TProviderQuery).Build
    fullName: Mcma.Data.DocumentDatabase.Queries.ICustomQueryBuilder(Of TParameters, TProviderQuery).Build
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mcma.Data.DocumentDatabase.Queries.CustomQuery`1
    name: CustomQuery
    nameWithType: CustomQuery
    fullName: Mcma.Data.DocumentDatabase.Queries.CustomQuery
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TParameters
    nameWithType: TParameters
    fullName: TParameters
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Mcma.Data.DocumentDatabase.Queries.CustomQuery{{TParameters}}
  commentId: T:Mcma.Data.DocumentDatabase.Queries.CustomQuery{``1}
  parent: Mcma.Data.DocumentDatabase.Queries
  definition: Mcma.Data.DocumentDatabase.Queries.CustomQuery`1
  name: CustomQuery<TParameters>
  nameWithType: CustomQuery<TParameters>
  fullName: Mcma.Data.DocumentDatabase.Queries.CustomQuery<TParameters>
  nameWithType.vb: CustomQuery(Of TParameters)
  fullName.vb: Mcma.Data.DocumentDatabase.Queries.CustomQuery(Of TParameters)
  name.vb: CustomQuery(Of TParameters)
  spec.csharp:
  - uid: Mcma.Data.DocumentDatabase.Queries.CustomQuery`1
    name: CustomQuery
    nameWithType: CustomQuery
    fullName: Mcma.Data.DocumentDatabase.Queries.CustomQuery
  - name: <
    nameWithType: <
    fullName: <
  - name: TParameters
    nameWithType: TParameters
    fullName: TParameters
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Mcma.Data.DocumentDatabase.Queries.CustomQuery`1
    name: CustomQuery
    nameWithType: CustomQuery
    fullName: Mcma.Data.DocumentDatabase.Queries.CustomQuery
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TParameters
    nameWithType: TParameters
    fullName: TParameters
  - name: )
    nameWithType: )
    fullName: )
- uid: '{TProviderQuery}'
  commentId: '!:TProviderQuery'
  definition: TProviderQuery
  name: TProviderQuery
  nameWithType: TProviderQuery
  fullName: TProviderQuery
- uid: Mcma.Data.DocumentDatabase.Queries.ICustomQueryBuilder`2.Build(Mcma.Data.DocumentDatabase.Queries.CustomQuery{`0})
  commentId: M:Mcma.Data.DocumentDatabase.Queries.ICustomQueryBuilder`2.Build(Mcma.Data.DocumentDatabase.Queries.CustomQuery{`0})
  name: Build(CustomQuery<TParameters>)
  nameWithType: ICustomQueryBuilder<TParameters, TProviderQuery>.Build(CustomQuery<TParameters>)
  fullName: Mcma.Data.DocumentDatabase.Queries.ICustomQueryBuilder<TParameters, TProviderQuery>.Build(Mcma.Data.DocumentDatabase.Queries.CustomQuery<TParameters>)
  nameWithType.vb: ICustomQueryBuilder(Of TParameters, TProviderQuery).Build(CustomQuery(Of TParameters))
  fullName.vb: Mcma.Data.DocumentDatabase.Queries.ICustomQueryBuilder(Of TParameters, TProviderQuery).Build(Mcma.Data.DocumentDatabase.Queries.CustomQuery(Of TParameters))
  name.vb: Build(CustomQuery(Of TParameters))
  spec.csharp:
  - uid: Mcma.Data.DocumentDatabase.Queries.ICustomQueryBuilder`2.Build(Mcma.Data.DocumentDatabase.Queries.CustomQuery{`0})
    name: Build
    nameWithType: ICustomQueryBuilder<TParameters, TProviderQuery>.Build
    fullName: Mcma.Data.DocumentDatabase.Queries.ICustomQueryBuilder<TParameters, TProviderQuery>.Build
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mcma.Data.DocumentDatabase.Queries.CustomQuery`1
    name: CustomQuery
    nameWithType: CustomQuery
    fullName: Mcma.Data.DocumentDatabase.Queries.CustomQuery
  - name: <
    nameWithType: <
    fullName: <
  - name: TParameters
    nameWithType: TParameters
    fullName: TParameters
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mcma.Data.DocumentDatabase.Queries.ICustomQueryBuilder`2.Build(Mcma.Data.DocumentDatabase.Queries.CustomQuery{`0})
    name: Build
    nameWithType: ICustomQueryBuilder(Of TParameters, TProviderQuery).Build
    fullName: Mcma.Data.DocumentDatabase.Queries.ICustomQueryBuilder(Of TParameters, TProviderQuery).Build
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mcma.Data.DocumentDatabase.Queries.CustomQuery`1
    name: CustomQuery
    nameWithType: CustomQuery
    fullName: Mcma.Data.DocumentDatabase.Queries.CustomQuery
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TParameters
    nameWithType: TParameters
    fullName: TParameters
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Mcma.Data.DocumentDatabase.Queries.CustomQuery`1
  commentId: T:Mcma.Data.DocumentDatabase.Queries.CustomQuery`1
  name: CustomQuery<TParameters>
  nameWithType: CustomQuery<TParameters>
  fullName: Mcma.Data.DocumentDatabase.Queries.CustomQuery<TParameters>
  nameWithType.vb: CustomQuery(Of TParameters)
  fullName.vb: Mcma.Data.DocumentDatabase.Queries.CustomQuery(Of TParameters)
  name.vb: CustomQuery(Of TParameters)
  spec.csharp:
  - uid: Mcma.Data.DocumentDatabase.Queries.CustomQuery`1
    name: CustomQuery
    nameWithType: CustomQuery
    fullName: Mcma.Data.DocumentDatabase.Queries.CustomQuery
  - name: <
    nameWithType: <
    fullName: <
  - name: TParameters
    nameWithType: TParameters
    fullName: TParameters
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Mcma.Data.DocumentDatabase.Queries.CustomQuery`1
    name: CustomQuery
    nameWithType: CustomQuery
    fullName: Mcma.Data.DocumentDatabase.Queries.CustomQuery
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TParameters
    nameWithType: TParameters
    fullName: TParameters
  - name: )
    nameWithType: )
    fullName: )
- uid: TProviderQuery
  name: TProviderQuery
  nameWithType: TProviderQuery
  fullName: TProviderQuery
