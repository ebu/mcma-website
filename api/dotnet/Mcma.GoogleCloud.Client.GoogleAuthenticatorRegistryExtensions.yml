### YamlMime:ManagedReference
items:
- uid: Mcma.GoogleCloud.Client.GoogleAuthenticatorRegistryExtensions
  commentId: T:Mcma.GoogleCloud.Client.GoogleAuthenticatorRegistryExtensions
  id: GoogleAuthenticatorRegistryExtensions
  parent: Mcma.GoogleCloud.Client
  children:
  - Mcma.GoogleCloud.Client.GoogleAuthenticatorRegistryExtensions.AddGoogleAuth(Mcma.Client.AuthenticatorRegistry,System.Action{Mcma.GoogleCloud.Client.GoogleAuthenticatorOptions})
  - Mcma.GoogleCloud.Client.GoogleAuthenticatorRegistryExtensions.TryAddGoogleAuth(Mcma.Client.AuthenticatorRegistry,System.Action{Mcma.GoogleCloud.Client.GoogleAuthenticatorOptions})
  langs:
  - csharp
  - vb
  name: GoogleAuthenticatorRegistryExtensions
  nameWithType: GoogleAuthenticatorRegistryExtensions
  fullName: Mcma.GoogleCloud.Client.GoogleAuthenticatorRegistryExtensions
  type: Class
  source:
    remote:
      path: GoogleCloud/Mcma.GoogleCloud.Client/GoogleAuthenticatorRegistryExtensions.cs
      branch: documentation
      repo: https://github.com/ebu/mcma-libraries-dotnet.git
    id: GoogleAuthenticatorRegistryExtensions
    path: ../mcma-libraries-dotnet/GoogleCloud/Mcma.GoogleCloud.Client/GoogleAuthenticatorRegistryExtensions.cs
    startLine: 6
  assemblies:
  - Mcma.GoogleCloud.Client
  namespace: Mcma.GoogleCloud.Client
  syntax:
    content: public static class GoogleAuthenticatorRegistryExtensions
    content.vb: Public Module GoogleAuthenticatorRegistryExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Mcma.GoogleCloud.Client.GoogleAuthenticatorRegistryExtensions.AddGoogleAuth(Mcma.Client.AuthenticatorRegistry,System.Action{Mcma.GoogleCloud.Client.GoogleAuthenticatorOptions})
  commentId: M:Mcma.GoogleCloud.Client.GoogleAuthenticatorRegistryExtensions.AddGoogleAuth(Mcma.Client.AuthenticatorRegistry,System.Action{Mcma.GoogleCloud.Client.GoogleAuthenticatorOptions})
  id: AddGoogleAuth(Mcma.Client.AuthenticatorRegistry,System.Action{Mcma.GoogleCloud.Client.GoogleAuthenticatorOptions})
  isExtensionMethod: true
  parent: Mcma.GoogleCloud.Client.GoogleAuthenticatorRegistryExtensions
  langs:
  - csharp
  - vb
  name: AddGoogleAuth(AuthenticatorRegistry, Action<GoogleAuthenticatorOptions>)
  nameWithType: GoogleAuthenticatorRegistryExtensions.AddGoogleAuth(AuthenticatorRegistry, Action<GoogleAuthenticatorOptions>)
  fullName: Mcma.GoogleCloud.Client.GoogleAuthenticatorRegistryExtensions.AddGoogleAuth(Mcma.Client.AuthenticatorRegistry, System.Action<Mcma.GoogleCloud.Client.GoogleAuthenticatorOptions>)
  type: Method
  source:
    remote:
      path: GoogleCloud/Mcma.GoogleCloud.Client/GoogleAuthenticatorRegistryExtensions.cs
      branch: documentation
      repo: https://github.com/ebu/mcma-libraries-dotnet.git
    id: AddGoogleAuth
    path: ../mcma-libraries-dotnet/GoogleCloud/Mcma.GoogleCloud.Client/GoogleAuthenticatorRegistryExtensions.cs
    startLine: 8
  assemblies:
  - Mcma.GoogleCloud.Client
  namespace: Mcma.GoogleCloud.Client
  syntax:
    content: public static AuthenticatorRegistry AddGoogleAuth(this AuthenticatorRegistry authenticatorRegistry, Action<GoogleAuthenticatorOptions> configureOptions = null)
    parameters:
    - id: authenticatorRegistry
      type: Mcma.Client.AuthenticatorRegistry
    - id: configureOptions
      type: System.Action{Mcma.GoogleCloud.Client.GoogleAuthenticatorOptions}
    return:
      type: Mcma.Client.AuthenticatorRegistry
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AddGoogleAuth(authenticatorRegistry As AuthenticatorRegistry, configureOptions As Action(Of GoogleAuthenticatorOptions) = Nothing) As AuthenticatorRegistry
  overload: Mcma.GoogleCloud.Client.GoogleAuthenticatorRegistryExtensions.AddGoogleAuth*
  nameWithType.vb: GoogleAuthenticatorRegistryExtensions.AddGoogleAuth(AuthenticatorRegistry, Action(Of GoogleAuthenticatorOptions))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Mcma.GoogleCloud.Client.GoogleAuthenticatorRegistryExtensions.AddGoogleAuth(Mcma.Client.AuthenticatorRegistry, System.Action(Of Mcma.GoogleCloud.Client.GoogleAuthenticatorOptions))
  name.vb: AddGoogleAuth(AuthenticatorRegistry, Action(Of GoogleAuthenticatorOptions))
- uid: Mcma.GoogleCloud.Client.GoogleAuthenticatorRegistryExtensions.TryAddGoogleAuth(Mcma.Client.AuthenticatorRegistry,System.Action{Mcma.GoogleCloud.Client.GoogleAuthenticatorOptions})
  commentId: M:Mcma.GoogleCloud.Client.GoogleAuthenticatorRegistryExtensions.TryAddGoogleAuth(Mcma.Client.AuthenticatorRegistry,System.Action{Mcma.GoogleCloud.Client.GoogleAuthenticatorOptions})
  id: TryAddGoogleAuth(Mcma.Client.AuthenticatorRegistry,System.Action{Mcma.GoogleCloud.Client.GoogleAuthenticatorOptions})
  isExtensionMethod: true
  parent: Mcma.GoogleCloud.Client.GoogleAuthenticatorRegistryExtensions
  langs:
  - csharp
  - vb
  name: TryAddGoogleAuth(AuthenticatorRegistry, Action<GoogleAuthenticatorOptions>)
  nameWithType: GoogleAuthenticatorRegistryExtensions.TryAddGoogleAuth(AuthenticatorRegistry, Action<GoogleAuthenticatorOptions>)
  fullName: Mcma.GoogleCloud.Client.GoogleAuthenticatorRegistryExtensions.TryAddGoogleAuth(Mcma.Client.AuthenticatorRegistry, System.Action<Mcma.GoogleCloud.Client.GoogleAuthenticatorOptions>)
  type: Method
  source:
    remote:
      path: GoogleCloud/Mcma.GoogleCloud.Client/GoogleAuthenticatorRegistryExtensions.cs
      branch: documentation
      repo: https://github.com/ebu/mcma-libraries-dotnet.git
    id: TryAddGoogleAuth
    path: ../mcma-libraries-dotnet/GoogleCloud/Mcma.GoogleCloud.Client/GoogleAuthenticatorRegistryExtensions.cs
    startLine: 17
  assemblies:
  - Mcma.GoogleCloud.Client
  namespace: Mcma.GoogleCloud.Client
  syntax:
    content: public static AuthenticatorRegistry TryAddGoogleAuth(this AuthenticatorRegistry authenticatorRegistry, Action<GoogleAuthenticatorOptions> configureOptions = null)
    parameters:
    - id: authenticatorRegistry
      type: Mcma.Client.AuthenticatorRegistry
    - id: configureOptions
      type: System.Action{Mcma.GoogleCloud.Client.GoogleAuthenticatorOptions}
    return:
      type: Mcma.Client.AuthenticatorRegistry
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function TryAddGoogleAuth(authenticatorRegistry As AuthenticatorRegistry, configureOptions As Action(Of GoogleAuthenticatorOptions) = Nothing) As AuthenticatorRegistry
  overload: Mcma.GoogleCloud.Client.GoogleAuthenticatorRegistryExtensions.TryAddGoogleAuth*
  nameWithType.vb: GoogleAuthenticatorRegistryExtensions.TryAddGoogleAuth(AuthenticatorRegistry, Action(Of GoogleAuthenticatorOptions))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Mcma.GoogleCloud.Client.GoogleAuthenticatorRegistryExtensions.TryAddGoogleAuth(Mcma.Client.AuthenticatorRegistry, System.Action(Of Mcma.GoogleCloud.Client.GoogleAuthenticatorOptions))
  name.vb: TryAddGoogleAuth(AuthenticatorRegistry, Action(Of GoogleAuthenticatorOptions))
references:
- uid: Mcma.GoogleCloud.Client
  commentId: N:Mcma.GoogleCloud.Client
  name: Mcma.GoogleCloud.Client
  nameWithType: Mcma.GoogleCloud.Client
  fullName: Mcma.GoogleCloud.Client
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Mcma.GoogleCloud.Client.GoogleAuthenticatorRegistryExtensions.AddGoogleAuth*
  commentId: Overload:Mcma.GoogleCloud.Client.GoogleAuthenticatorRegistryExtensions.AddGoogleAuth
  name: AddGoogleAuth
  nameWithType: GoogleAuthenticatorRegistryExtensions.AddGoogleAuth
  fullName: Mcma.GoogleCloud.Client.GoogleAuthenticatorRegistryExtensions.AddGoogleAuth
- uid: Mcma.Client.AuthenticatorRegistry
  commentId: T:Mcma.Client.AuthenticatorRegistry
  parent: Mcma.Client
  name: AuthenticatorRegistry
  nameWithType: AuthenticatorRegistry
  fullName: Mcma.Client.AuthenticatorRegistry
- uid: System.Action{Mcma.GoogleCloud.Client.GoogleAuthenticatorOptions}
  commentId: T:System.Action{Mcma.GoogleCloud.Client.GoogleAuthenticatorOptions}
  parent: System
  definition: System.Action`1
  name: Action<GoogleAuthenticatorOptions>
  nameWithType: Action<GoogleAuthenticatorOptions>
  fullName: System.Action<Mcma.GoogleCloud.Client.GoogleAuthenticatorOptions>
  nameWithType.vb: Action(Of GoogleAuthenticatorOptions)
  fullName.vb: System.Action(Of Mcma.GoogleCloud.Client.GoogleAuthenticatorOptions)
  name.vb: Action(Of GoogleAuthenticatorOptions)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mcma.GoogleCloud.Client.GoogleAuthenticatorOptions
    name: GoogleAuthenticatorOptions
    nameWithType: GoogleAuthenticatorOptions
    fullName: Mcma.GoogleCloud.Client.GoogleAuthenticatorOptions
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mcma.GoogleCloud.Client.GoogleAuthenticatorOptions
    name: GoogleAuthenticatorOptions
    nameWithType: GoogleAuthenticatorOptions
    fullName: Mcma.GoogleCloud.Client.GoogleAuthenticatorOptions
  - name: )
    nameWithType: )
    fullName: )
- uid: Mcma.Client
  commentId: N:Mcma.Client
  name: Mcma.Client
  nameWithType: Mcma.Client
  fullName: Mcma.Client
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Mcma.GoogleCloud.Client.GoogleAuthenticatorRegistryExtensions.TryAddGoogleAuth*
  commentId: Overload:Mcma.GoogleCloud.Client.GoogleAuthenticatorRegistryExtensions.TryAddGoogleAuth
  name: TryAddGoogleAuth
  nameWithType: GoogleAuthenticatorRegistryExtensions.TryAddGoogleAuth
  fullName: Mcma.GoogleCloud.Client.GoogleAuthenticatorRegistryExtensions.TryAddGoogleAuth
