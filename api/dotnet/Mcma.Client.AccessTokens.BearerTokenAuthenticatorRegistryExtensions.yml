### YamlMime:ManagedReference
items:
- uid: Mcma.Client.AccessTokens.BearerTokenAuthenticatorRegistryExtensions
  commentId: T:Mcma.Client.AccessTokens.BearerTokenAuthenticatorRegistryExtensions
  id: BearerTokenAuthenticatorRegistryExtensions
  parent: Mcma.Client.AccessTokens
  children:
  - Mcma.Client.AccessTokens.BearerTokenAuthenticatorRegistryExtensions.AddBearerTokens``2(Mcma.Client.AuthenticatorRegistry,System.String,Microsoft.Extensions.DependencyInjection.ServiceLifetime)
  - Mcma.Client.AccessTokens.BearerTokenAuthenticatorRegistryExtensions.TryAddBearerTokens``2(Mcma.Client.AuthenticatorRegistry,System.String,Microsoft.Extensions.DependencyInjection.ServiceLifetime)
  langs:
  - csharp
  - vb
  name: BearerTokenAuthenticatorRegistryExtensions
  nameWithType: BearerTokenAuthenticatorRegistryExtensions
  fullName: Mcma.Client.AccessTokens.BearerTokenAuthenticatorRegistryExtensions
  type: Class
  source:
    remote:
      path: Base/Mcma.Client/Auth/AccessTokens/BearerTokenAuthenticatorRegistryExtensions.cs
      branch: documentation
      repo: https://github.com/ebu/mcma-libraries-dotnet.git
    id: BearerTokenAuthenticatorRegistryExtensions
    path: ../mcma-libraries-dotnet/Base/Mcma.Client/Auth/AccessTokens/BearerTokenAuthenticatorRegistryExtensions.cs
    startLine: 4
  assemblies:
  - Mcma.Client
  namespace: Mcma.Client.AccessTokens
  syntax:
    content: public static class BearerTokenAuthenticatorRegistryExtensions
    content.vb: Public Module BearerTokenAuthenticatorRegistryExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Mcma.Client.AccessTokens.BearerTokenAuthenticatorRegistryExtensions.AddBearerTokens``2(Mcma.Client.AuthenticatorRegistry,System.String,Microsoft.Extensions.DependencyInjection.ServiceLifetime)
  commentId: M:Mcma.Client.AccessTokens.BearerTokenAuthenticatorRegistryExtensions.AddBearerTokens``2(Mcma.Client.AuthenticatorRegistry,System.String,Microsoft.Extensions.DependencyInjection.ServiceLifetime)
  id: AddBearerTokens``2(Mcma.Client.AuthenticatorRegistry,System.String,Microsoft.Extensions.DependencyInjection.ServiceLifetime)
  isExtensionMethod: true
  parent: Mcma.Client.AccessTokens.BearerTokenAuthenticatorRegistryExtensions
  langs:
  - csharp
  - vb
  name: AddBearerTokens<TAuthContext, TBearerTokenProvider>(AuthenticatorRegistry, String, ServiceLifetime)
  nameWithType: BearerTokenAuthenticatorRegistryExtensions.AddBearerTokens<TAuthContext, TBearerTokenProvider>(AuthenticatorRegistry, String, ServiceLifetime)
  fullName: Mcma.Client.AccessTokens.BearerTokenAuthenticatorRegistryExtensions.AddBearerTokens<TAuthContext, TBearerTokenProvider>(Mcma.Client.AuthenticatorRegistry, System.String, Microsoft.Extensions.DependencyInjection.ServiceLifetime)
  type: Method
  source:
    remote:
      path: Base/Mcma.Client/Auth/AccessTokens/BearerTokenAuthenticatorRegistryExtensions.cs
      branch: documentation
      repo: https://github.com/ebu/mcma-libraries-dotnet.git
    id: AddBearerTokens
    path: ../mcma-libraries-dotnet/Base/Mcma.Client/Auth/AccessTokens/BearerTokenAuthenticatorRegistryExtensions.cs
    startLine: 6
  assemblies:
  - Mcma.Client
  namespace: Mcma.Client.AccessTokens
  syntax:
    content: >-
      public static AuthenticatorRegistry AddBearerTokens<TAuthContext, TBearerTokenProvider>(this AuthenticatorRegistry handlerRegistry, string authType, ServiceLifetime lifetime = ServiceLifetime.Singleton)

          where TBearerTokenProvider : IBearerTokenProvider<TAuthContext>
    parameters:
    - id: handlerRegistry
      type: Mcma.Client.AuthenticatorRegistry
    - id: authType
      type: System.String
    - id: lifetime
      type: Microsoft.Extensions.DependencyInjection.ServiceLifetime
    typeParameters:
    - id: TAuthContext
    - id: TBearerTokenProvider
    return:
      type: Mcma.Client.AuthenticatorRegistry
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AddBearerTokens(Of TAuthContext, TBearerTokenProvider As IBearerTokenProvider(Of TAuthContext))(handlerRegistry As AuthenticatorRegistry, authType As String, lifetime As ServiceLifetime = ServiceLifetime.Singleton) As AuthenticatorRegistry
  overload: Mcma.Client.AccessTokens.BearerTokenAuthenticatorRegistryExtensions.AddBearerTokens*
  nameWithType.vb: BearerTokenAuthenticatorRegistryExtensions.AddBearerTokens(Of TAuthContext, TBearerTokenProvider)(AuthenticatorRegistry, String, ServiceLifetime)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Mcma.Client.AccessTokens.BearerTokenAuthenticatorRegistryExtensions.AddBearerTokens(Of TAuthContext, TBearerTokenProvider)(Mcma.Client.AuthenticatorRegistry, System.String, Microsoft.Extensions.DependencyInjection.ServiceLifetime)
  name.vb: AddBearerTokens(Of TAuthContext, TBearerTokenProvider)(AuthenticatorRegistry, String, ServiceLifetime)
- uid: Mcma.Client.AccessTokens.BearerTokenAuthenticatorRegistryExtensions.TryAddBearerTokens``2(Mcma.Client.AuthenticatorRegistry,System.String,Microsoft.Extensions.DependencyInjection.ServiceLifetime)
  commentId: M:Mcma.Client.AccessTokens.BearerTokenAuthenticatorRegistryExtensions.TryAddBearerTokens``2(Mcma.Client.AuthenticatorRegistry,System.String,Microsoft.Extensions.DependencyInjection.ServiceLifetime)
  id: TryAddBearerTokens``2(Mcma.Client.AuthenticatorRegistry,System.String,Microsoft.Extensions.DependencyInjection.ServiceLifetime)
  isExtensionMethod: true
  parent: Mcma.Client.AccessTokens.BearerTokenAuthenticatorRegistryExtensions
  langs:
  - csharp
  - vb
  name: TryAddBearerTokens<TAuthContext, TBearerTokenProvider>(AuthenticatorRegistry, String, ServiceLifetime)
  nameWithType: BearerTokenAuthenticatorRegistryExtensions.TryAddBearerTokens<TAuthContext, TBearerTokenProvider>(AuthenticatorRegistry, String, ServiceLifetime)
  fullName: Mcma.Client.AccessTokens.BearerTokenAuthenticatorRegistryExtensions.TryAddBearerTokens<TAuthContext, TBearerTokenProvider>(Mcma.Client.AuthenticatorRegistry, System.String, Microsoft.Extensions.DependencyInjection.ServiceLifetime)
  type: Method
  source:
    remote:
      path: Base/Mcma.Client/Auth/AccessTokens/BearerTokenAuthenticatorRegistryExtensions.cs
      branch: documentation
      repo: https://github.com/ebu/mcma-libraries-dotnet.git
    id: TryAddBearerTokens
    path: ../mcma-libraries-dotnet/Base/Mcma.Client/Auth/AccessTokens/BearerTokenAuthenticatorRegistryExtensions.cs
    startLine: 18
  assemblies:
  - Mcma.Client
  namespace: Mcma.Client.AccessTokens
  syntax:
    content: >-
      public static AuthenticatorRegistry TryAddBearerTokens<TAuthContext, TBearerTokenProvider>(this AuthenticatorRegistry handlerRegistry, string authType, ServiceLifetime lifetime = ServiceLifetime.Singleton)

          where TBearerTokenProvider : IBearerTokenProvider<TAuthContext>
    parameters:
    - id: handlerRegistry
      type: Mcma.Client.AuthenticatorRegistry
    - id: authType
      type: System.String
    - id: lifetime
      type: Microsoft.Extensions.DependencyInjection.ServiceLifetime
    typeParameters:
    - id: TAuthContext
    - id: TBearerTokenProvider
    return:
      type: Mcma.Client.AuthenticatorRegistry
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function TryAddBearerTokens(Of TAuthContext, TBearerTokenProvider As IBearerTokenProvider(Of TAuthContext))(handlerRegistry As AuthenticatorRegistry, authType As String, lifetime As ServiceLifetime = ServiceLifetime.Singleton) As AuthenticatorRegistry
  overload: Mcma.Client.AccessTokens.BearerTokenAuthenticatorRegistryExtensions.TryAddBearerTokens*
  nameWithType.vb: BearerTokenAuthenticatorRegistryExtensions.TryAddBearerTokens(Of TAuthContext, TBearerTokenProvider)(AuthenticatorRegistry, String, ServiceLifetime)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Mcma.Client.AccessTokens.BearerTokenAuthenticatorRegistryExtensions.TryAddBearerTokens(Of TAuthContext, TBearerTokenProvider)(Mcma.Client.AuthenticatorRegistry, System.String, Microsoft.Extensions.DependencyInjection.ServiceLifetime)
  name.vb: TryAddBearerTokens(Of TAuthContext, TBearerTokenProvider)(AuthenticatorRegistry, String, ServiceLifetime)
references:
- uid: Mcma.Client.AccessTokens
  commentId: N:Mcma.Client.AccessTokens
  name: Mcma.Client.AccessTokens
  nameWithType: Mcma.Client.AccessTokens
  fullName: Mcma.Client.AccessTokens
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Mcma.Client.AccessTokens.BearerTokenAuthenticatorRegistryExtensions.AddBearerTokens*
  commentId: Overload:Mcma.Client.AccessTokens.BearerTokenAuthenticatorRegistryExtensions.AddBearerTokens
  name: AddBearerTokens
  nameWithType: BearerTokenAuthenticatorRegistryExtensions.AddBearerTokens
  fullName: Mcma.Client.AccessTokens.BearerTokenAuthenticatorRegistryExtensions.AddBearerTokens
- uid: Mcma.Client.AuthenticatorRegistry
  commentId: T:Mcma.Client.AuthenticatorRegistry
  parent: Mcma.Client
  name: AuthenticatorRegistry
  nameWithType: AuthenticatorRegistry
  fullName: Mcma.Client.AuthenticatorRegistry
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Extensions.DependencyInjection.ServiceLifetime
  commentId: T:Microsoft.Extensions.DependencyInjection.ServiceLifetime
  parent: Microsoft.Extensions.DependencyInjection
  isExternal: true
  name: ServiceLifetime
  nameWithType: ServiceLifetime
  fullName: Microsoft.Extensions.DependencyInjection.ServiceLifetime
- uid: Mcma.Client
  commentId: N:Mcma.Client
  name: Mcma.Client
  nameWithType: Mcma.Client
  fullName: Mcma.Client
- uid: Microsoft.Extensions.DependencyInjection
  commentId: N:Microsoft.Extensions.DependencyInjection
  isExternal: true
  name: Microsoft.Extensions.DependencyInjection
  nameWithType: Microsoft.Extensions.DependencyInjection
  fullName: Microsoft.Extensions.DependencyInjection
- uid: Mcma.Client.AccessTokens.BearerTokenAuthenticatorRegistryExtensions.TryAddBearerTokens*
  commentId: Overload:Mcma.Client.AccessTokens.BearerTokenAuthenticatorRegistryExtensions.TryAddBearerTokens
  name: TryAddBearerTokens
  nameWithType: BearerTokenAuthenticatorRegistryExtensions.TryAddBearerTokens
  fullName: Mcma.Client.AccessTokens.BearerTokenAuthenticatorRegistryExtensions.TryAddBearerTokens
