### YamlMime:ManagedReference
items:
- uid: Mcma.Client.IResourceEndpointClient
  commentId: T:Mcma.Client.IResourceEndpointClient
  id: IResourceEndpointClient
  parent: Mcma.Client
  children:
  - Mcma.Client.IResourceEndpointClient.DeleteAsync(System.String,System.Threading.CancellationToken)
  - Mcma.Client.IResourceEndpointClient.GetAsync``1(System.String,System.Threading.CancellationToken)
  - Mcma.Client.IResourceEndpointClient.HttpEndpoint
  - Mcma.Client.IResourceEndpointClient.PostAsync(System.Object,System.String,System.Threading.CancellationToken)
  - Mcma.Client.IResourceEndpointClient.PostAsync``1(System.Object,System.String,System.Threading.CancellationToken)
  - Mcma.Client.IResourceEndpointClient.PutAsync(System.Object,System.String,System.Threading.CancellationToken)
  - Mcma.Client.IResourceEndpointClient.PutAsync``1(System.Object,System.String,System.Threading.CancellationToken)
  - Mcma.Client.IResourceEndpointClient.QueryAsync``1(System.String,System.Threading.CancellationToken,System.ValueTuple{System.String,System.String}[])
  - Mcma.Client.IResourceEndpointClient.QueryAsync``1(System.String,System.ValueTuple{System.String,System.String}[])
  - Mcma.Client.IResourceEndpointClient.QueryAsync``1(System.Threading.CancellationToken,System.ValueTuple{System.String,System.String}[])
  langs:
  - csharp
  - vb
  name: IResourceEndpointClient
  nameWithType: IResourceEndpointClient
  fullName: Mcma.Client.IResourceEndpointClient
  type: Interface
  source:
    remote:
      path: Base/Mcma.Client/Resources/IResourceEndpointClient.cs
      branch: documentation
      repo: https://github.com/ebu/mcma-libraries-dotnet.git
    id: IResourceEndpointClient
    path: ../mcma-libraries-dotnet/Base/Mcma.Client/Resources/IResourceEndpointClient.cs
    startLine: 5
  assemblies:
  - Mcma.Client
  namespace: Mcma.Client
  syntax:
    content: public interface IResourceEndpointClient
    content.vb: Public Interface IResourceEndpointClient
  extensionMethods:
  - System.Object.Mcma.Serialization.McmaJson.ToMcmaJson(System.Boolean)
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Mcma.Client.IResourceEndpointClient.HttpEndpoint
  commentId: P:Mcma.Client.IResourceEndpointClient.HttpEndpoint
  id: HttpEndpoint
  parent: Mcma.Client.IResourceEndpointClient
  langs:
  - csharp
  - vb
  name: HttpEndpoint
  nameWithType: IResourceEndpointClient.HttpEndpoint
  fullName: Mcma.Client.IResourceEndpointClient.HttpEndpoint
  type: Property
  source:
    remote:
      path: Base/Mcma.Client/Resources/IResourceEndpointClient.cs
      branch: documentation
      repo: https://github.com/ebu/mcma-libraries-dotnet.git
    id: HttpEndpoint
    path: ../mcma-libraries-dotnet/Base/Mcma.Client/Resources/IResourceEndpointClient.cs
    startLine: 7
  assemblies:
  - Mcma.Client
  namespace: Mcma.Client
  syntax:
    content: string HttpEndpoint { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly Property HttpEndpoint As String
  overload: Mcma.Client.IResourceEndpointClient.HttpEndpoint*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Mcma.Client.IResourceEndpointClient.QueryAsync``1(System.String,System.ValueTuple{System.String,System.String}[])
  commentId: M:Mcma.Client.IResourceEndpointClient.QueryAsync``1(System.String,System.ValueTuple{System.String,System.String}[])
  id: QueryAsync``1(System.String,System.ValueTuple{System.String,System.String}[])
  parent: Mcma.Client.IResourceEndpointClient
  langs:
  - csharp
  - vb
  name: QueryAsync<T>(String, (String Key, String Value)[])
  nameWithType: IResourceEndpointClient.QueryAsync<T>(String, (String Key, String Value)[])
  fullName: Mcma.Client.IResourceEndpointClient.QueryAsync<T>(System.String, System.ValueTuple<System.String, System.String>[])
  type: Method
  source:
    remote:
      path: Base/Mcma.Client/Resources/IResourceEndpointClient.cs
      branch: documentation
      repo: https://github.com/ebu/mcma-libraries-dotnet.git
    id: QueryAsync
    path: ../mcma-libraries-dotnet/Base/Mcma.Client/Resources/IResourceEndpointClient.cs
    startLine: 9
  assemblies:
  - Mcma.Client
  namespace: Mcma.Client
  syntax:
    content: >-
      Task<QueryResults<T>> QueryAsync<T>(string url = null, params (string Key, string Value)[] queryParameters)
          where T : McmaObject
    parameters:
    - id: url
      type: System.String
    - id: queryParameters
      type: System.ValueTuple{System.String,System.String}[]
    typeParameters:
    - id: T
    return:
      type: System.Threading.Tasks.Task{Mcma.QueryResults{{T}}}
    content.vb: Function QueryAsync(Of T As McmaObject)(url As String = Nothing, ParamArray queryParameters As(Key As String, Value As String)()) As Task(Of QueryResults(Of T))
  overload: Mcma.Client.IResourceEndpointClient.QueryAsync*
  nameWithType.vb: IResourceEndpointClient.QueryAsync(Of T)(String, (Key As String, Value As String)())
  fullName.vb: Mcma.Client.IResourceEndpointClient.QueryAsync(Of T)(System.String, System.ValueTuple(Of System.String, System.String)())
  name.vb: QueryAsync(Of T)(String, (Key As String, Value As String)())
- uid: Mcma.Client.IResourceEndpointClient.QueryAsync``1(System.Threading.CancellationToken,System.ValueTuple{System.String,System.String}[])
  commentId: M:Mcma.Client.IResourceEndpointClient.QueryAsync``1(System.Threading.CancellationToken,System.ValueTuple{System.String,System.String}[])
  id: QueryAsync``1(System.Threading.CancellationToken,System.ValueTuple{System.String,System.String}[])
  parent: Mcma.Client.IResourceEndpointClient
  langs:
  - csharp
  - vb
  name: QueryAsync<T>(CancellationToken, (String Key, String Value)[])
  nameWithType: IResourceEndpointClient.QueryAsync<T>(CancellationToken, (String Key, String Value)[])
  fullName: Mcma.Client.IResourceEndpointClient.QueryAsync<T>(System.Threading.CancellationToken, System.ValueTuple<System.String, System.String>[])
  type: Method
  source:
    remote:
      path: Base/Mcma.Client/Resources/IResourceEndpointClient.cs
      branch: documentation
      repo: https://github.com/ebu/mcma-libraries-dotnet.git
    id: QueryAsync
    path: ../mcma-libraries-dotnet/Base/Mcma.Client/Resources/IResourceEndpointClient.cs
    startLine: 13
  assemblies:
  - Mcma.Client
  namespace: Mcma.Client
  syntax:
    content: >-
      Task<QueryResults<T>> QueryAsync<T>(CancellationToken cancellationToken, params (string Key, string Value)[] queryParameters)
          where T : McmaObject
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    - id: queryParameters
      type: System.ValueTuple{System.String,System.String}[]
    typeParameters:
    - id: T
    return:
      type: System.Threading.Tasks.Task{Mcma.QueryResults{{T}}}
    content.vb: Function QueryAsync(Of T As McmaObject)(cancellationToken As CancellationToken, ParamArray queryParameters As(Key As String, Value As String)()) As Task(Of QueryResults(Of T))
  overload: Mcma.Client.IResourceEndpointClient.QueryAsync*
  nameWithType.vb: IResourceEndpointClient.QueryAsync(Of T)(CancellationToken, (Key As String, Value As String)())
  fullName.vb: Mcma.Client.IResourceEndpointClient.QueryAsync(Of T)(System.Threading.CancellationToken, System.ValueTuple(Of System.String, System.String)())
  name.vb: QueryAsync(Of T)(CancellationToken, (Key As String, Value As String)())
- uid: Mcma.Client.IResourceEndpointClient.QueryAsync``1(System.String,System.Threading.CancellationToken,System.ValueTuple{System.String,System.String}[])
  commentId: M:Mcma.Client.IResourceEndpointClient.QueryAsync``1(System.String,System.Threading.CancellationToken,System.ValueTuple{System.String,System.String}[])
  id: QueryAsync``1(System.String,System.Threading.CancellationToken,System.ValueTuple{System.String,System.String}[])
  parent: Mcma.Client.IResourceEndpointClient
  langs:
  - csharp
  - vb
  name: QueryAsync<T>(String, CancellationToken, (String Key, String Value)[])
  nameWithType: IResourceEndpointClient.QueryAsync<T>(String, CancellationToken, (String Key, String Value)[])
  fullName: Mcma.Client.IResourceEndpointClient.QueryAsync<T>(System.String, System.Threading.CancellationToken, System.ValueTuple<System.String, System.String>[])
  type: Method
  source:
    remote:
      path: Base/Mcma.Client/Resources/IResourceEndpointClient.cs
      branch: documentation
      repo: https://github.com/ebu/mcma-libraries-dotnet.git
    id: QueryAsync
    path: ../mcma-libraries-dotnet/Base/Mcma.Client/Resources/IResourceEndpointClient.cs
    startLine: 17
  assemblies:
  - Mcma.Client
  namespace: Mcma.Client
  syntax:
    content: >-
      Task<QueryResults<T>> QueryAsync<T>(string url, CancellationToken cancellationToken, params (string Key, string Value)[] queryParameters)
          where T : McmaObject
    parameters:
    - id: url
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    - id: queryParameters
      type: System.ValueTuple{System.String,System.String}[]
    typeParameters:
    - id: T
    return:
      type: System.Threading.Tasks.Task{Mcma.QueryResults{{T}}}
    content.vb: Function QueryAsync(Of T As McmaObject)(url As String, cancellationToken As CancellationToken, ParamArray queryParameters As(Key As String, Value As String)()) As Task(Of QueryResults(Of T))
  overload: Mcma.Client.IResourceEndpointClient.QueryAsync*
  nameWithType.vb: IResourceEndpointClient.QueryAsync(Of T)(String, CancellationToken, (Key As String, Value As String)())
  fullName.vb: Mcma.Client.IResourceEndpointClient.QueryAsync(Of T)(System.String, System.Threading.CancellationToken, System.ValueTuple(Of System.String, System.String)())
  name.vb: QueryAsync(Of T)(String, CancellationToken, (Key As String, Value As String)())
- uid: Mcma.Client.IResourceEndpointClient.PostAsync``1(System.Object,System.String,System.Threading.CancellationToken)
  commentId: M:Mcma.Client.IResourceEndpointClient.PostAsync``1(System.Object,System.String,System.Threading.CancellationToken)
  id: PostAsync``1(System.Object,System.String,System.Threading.CancellationToken)
  parent: Mcma.Client.IResourceEndpointClient
  langs:
  - csharp
  - vb
  name: PostAsync<T>(Object, String, CancellationToken)
  nameWithType: IResourceEndpointClient.PostAsync<T>(Object, String, CancellationToken)
  fullName: Mcma.Client.IResourceEndpointClient.PostAsync<T>(System.Object, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: Base/Mcma.Client/Resources/IResourceEndpointClient.cs
      branch: documentation
      repo: https://github.com/ebu/mcma-libraries-dotnet.git
    id: PostAsync
    path: ../mcma-libraries-dotnet/Base/Mcma.Client/Resources/IResourceEndpointClient.cs
    startLine: 22
  assemblies:
  - Mcma.Client
  namespace: Mcma.Client
  syntax:
    content: >-
      Task<T> PostAsync<T>(object body, string url = null, CancellationToken cancellationToken = default(CancellationToken))
          where T : McmaObject
    parameters:
    - id: body
      type: System.Object
    - id: url
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    typeParameters:
    - id: T
    return:
      type: System.Threading.Tasks.Task{{T}}
    content.vb: Function PostAsync(Of T As McmaObject)(body As Object, url As String = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of T)
  overload: Mcma.Client.IResourceEndpointClient.PostAsync*
  nameWithType.vb: IResourceEndpointClient.PostAsync(Of T)(Object, String, CancellationToken)
  fullName.vb: Mcma.Client.IResourceEndpointClient.PostAsync(Of T)(System.Object, System.String, System.Threading.CancellationToken)
  name.vb: PostAsync(Of T)(Object, String, CancellationToken)
- uid: Mcma.Client.IResourceEndpointClient.PostAsync(System.Object,System.String,System.Threading.CancellationToken)
  commentId: M:Mcma.Client.IResourceEndpointClient.PostAsync(System.Object,System.String,System.Threading.CancellationToken)
  id: PostAsync(System.Object,System.String,System.Threading.CancellationToken)
  parent: Mcma.Client.IResourceEndpointClient
  langs:
  - csharp
  - vb
  name: PostAsync(Object, String, CancellationToken)
  nameWithType: IResourceEndpointClient.PostAsync(Object, String, CancellationToken)
  fullName: Mcma.Client.IResourceEndpointClient.PostAsync(System.Object, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: Base/Mcma.Client/Resources/IResourceEndpointClient.cs
      branch: documentation
      repo: https://github.com/ebu/mcma-libraries-dotnet.git
    id: PostAsync
    path: ../mcma-libraries-dotnet/Base/Mcma.Client/Resources/IResourceEndpointClient.cs
    startLine: 24
  assemblies:
  - Mcma.Client
  namespace: Mcma.Client
  syntax:
    content: Task PostAsync(object body, string url = null, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: body
      type: System.Object
    - id: url
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function PostAsync(body As Object, url As String = Nothing, cancellationToken As CancellationToken = Nothing) As Task
  overload: Mcma.Client.IResourceEndpointClient.PostAsync*
- uid: Mcma.Client.IResourceEndpointClient.GetAsync``1(System.String,System.Threading.CancellationToken)
  commentId: M:Mcma.Client.IResourceEndpointClient.GetAsync``1(System.String,System.Threading.CancellationToken)
  id: GetAsync``1(System.String,System.Threading.CancellationToken)
  parent: Mcma.Client.IResourceEndpointClient
  langs:
  - csharp
  - vb
  name: GetAsync<T>(String, CancellationToken)
  nameWithType: IResourceEndpointClient.GetAsync<T>(String, CancellationToken)
  fullName: Mcma.Client.IResourceEndpointClient.GetAsync<T>(System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: Base/Mcma.Client/Resources/IResourceEndpointClient.cs
      branch: documentation
      repo: https://github.com/ebu/mcma-libraries-dotnet.git
    id: GetAsync
    path: ../mcma-libraries-dotnet/Base/Mcma.Client/Resources/IResourceEndpointClient.cs
    startLine: 26
  assemblies:
  - Mcma.Client
  namespace: Mcma.Client
  syntax:
    content: >-
      Task<T> GetAsync<T>(string url = null, CancellationToken cancellationToken = default(CancellationToken))
          where T : McmaObject
    parameters:
    - id: url
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    typeParameters:
    - id: T
    return:
      type: System.Threading.Tasks.Task{{T}}
    content.vb: Function GetAsync(Of T As McmaObject)(url As String = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of T)
  overload: Mcma.Client.IResourceEndpointClient.GetAsync*
  nameWithType.vb: IResourceEndpointClient.GetAsync(Of T)(String, CancellationToken)
  fullName.vb: Mcma.Client.IResourceEndpointClient.GetAsync(Of T)(System.String, System.Threading.CancellationToken)
  name.vb: GetAsync(Of T)(String, CancellationToken)
- uid: Mcma.Client.IResourceEndpointClient.PutAsync``1(System.Object,System.String,System.Threading.CancellationToken)
  commentId: M:Mcma.Client.IResourceEndpointClient.PutAsync``1(System.Object,System.String,System.Threading.CancellationToken)
  id: PutAsync``1(System.Object,System.String,System.Threading.CancellationToken)
  parent: Mcma.Client.IResourceEndpointClient
  langs:
  - csharp
  - vb
  name: PutAsync<T>(Object, String, CancellationToken)
  nameWithType: IResourceEndpointClient.PutAsync<T>(Object, String, CancellationToken)
  fullName: Mcma.Client.IResourceEndpointClient.PutAsync<T>(System.Object, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: Base/Mcma.Client/Resources/IResourceEndpointClient.cs
      branch: documentation
      repo: https://github.com/ebu/mcma-libraries-dotnet.git
    id: PutAsync
    path: ../mcma-libraries-dotnet/Base/Mcma.Client/Resources/IResourceEndpointClient.cs
    startLine: 28
  assemblies:
  - Mcma.Client
  namespace: Mcma.Client
  syntax:
    content: >-
      Task<T> PutAsync<T>(object body, string url = null, CancellationToken cancellationToken = default(CancellationToken))
          where T : McmaObject
    parameters:
    - id: body
      type: System.Object
    - id: url
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    typeParameters:
    - id: T
    return:
      type: System.Threading.Tasks.Task{{T}}
    content.vb: Function PutAsync(Of T As McmaObject)(body As Object, url As String = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of T)
  overload: Mcma.Client.IResourceEndpointClient.PutAsync*
  nameWithType.vb: IResourceEndpointClient.PutAsync(Of T)(Object, String, CancellationToken)
  fullName.vb: Mcma.Client.IResourceEndpointClient.PutAsync(Of T)(System.Object, System.String, System.Threading.CancellationToken)
  name.vb: PutAsync(Of T)(Object, String, CancellationToken)
- uid: Mcma.Client.IResourceEndpointClient.PutAsync(System.Object,System.String,System.Threading.CancellationToken)
  commentId: M:Mcma.Client.IResourceEndpointClient.PutAsync(System.Object,System.String,System.Threading.CancellationToken)
  id: PutAsync(System.Object,System.String,System.Threading.CancellationToken)
  parent: Mcma.Client.IResourceEndpointClient
  langs:
  - csharp
  - vb
  name: PutAsync(Object, String, CancellationToken)
  nameWithType: IResourceEndpointClient.PutAsync(Object, String, CancellationToken)
  fullName: Mcma.Client.IResourceEndpointClient.PutAsync(System.Object, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: Base/Mcma.Client/Resources/IResourceEndpointClient.cs
      branch: documentation
      repo: https://github.com/ebu/mcma-libraries-dotnet.git
    id: PutAsync
    path: ../mcma-libraries-dotnet/Base/Mcma.Client/Resources/IResourceEndpointClient.cs
    startLine: 30
  assemblies:
  - Mcma.Client
  namespace: Mcma.Client
  syntax:
    content: Task PutAsync(object body, string url = null, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: body
      type: System.Object
    - id: url
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function PutAsync(body As Object, url As String = Nothing, cancellationToken As CancellationToken = Nothing) As Task
  overload: Mcma.Client.IResourceEndpointClient.PutAsync*
- uid: Mcma.Client.IResourceEndpointClient.DeleteAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Mcma.Client.IResourceEndpointClient.DeleteAsync(System.String,System.Threading.CancellationToken)
  id: DeleteAsync(System.String,System.Threading.CancellationToken)
  parent: Mcma.Client.IResourceEndpointClient
  langs:
  - csharp
  - vb
  name: DeleteAsync(String, CancellationToken)
  nameWithType: IResourceEndpointClient.DeleteAsync(String, CancellationToken)
  fullName: Mcma.Client.IResourceEndpointClient.DeleteAsync(System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: Base/Mcma.Client/Resources/IResourceEndpointClient.cs
      branch: documentation
      repo: https://github.com/ebu/mcma-libraries-dotnet.git
    id: DeleteAsync
    path: ../mcma-libraries-dotnet/Base/Mcma.Client/Resources/IResourceEndpointClient.cs
    startLine: 32
  assemblies:
  - Mcma.Client
  namespace: Mcma.Client
  syntax:
    content: Task DeleteAsync(string url = null, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: url
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function DeleteAsync(url As String = Nothing, cancellationToken As CancellationToken = Nothing) As Task
  overload: Mcma.Client.IResourceEndpointClient.DeleteAsync*
references:
- uid: Mcma.Client
  commentId: N:Mcma.Client
  name: Mcma.Client
  nameWithType: Mcma.Client
  fullName: Mcma.Client
- uid: System.Object.Mcma.Serialization.McmaJson.ToMcmaJson(System.Boolean)
  commentId: M:Mcma.Serialization.McmaJson.ToMcmaJson(System.Object,System.Boolean)
  parent: Mcma.Serialization.McmaJson
  definition: Mcma.Serialization.McmaJson.ToMcmaJson(System.Object,System.Boolean)
  name: ToMcmaJson(Boolean)
  nameWithType: McmaJson.ToMcmaJson(Boolean)
  fullName: Mcma.Serialization.McmaJson.ToMcmaJson(System.Boolean)
  spec.csharp:
  - uid: Mcma.Serialization.McmaJson.ToMcmaJson(System.Boolean)
    name: ToMcmaJson
    nameWithType: McmaJson.ToMcmaJson
    fullName: Mcma.Serialization.McmaJson.ToMcmaJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mcma.Serialization.McmaJson.ToMcmaJson(System.Boolean)
    name: ToMcmaJson
    nameWithType: McmaJson.ToMcmaJson
    fullName: Mcma.Serialization.McmaJson.ToMcmaJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mcma.Serialization.McmaJson.ToMcmaJson(System.Object,System.Boolean)
  commentId: M:Mcma.Serialization.McmaJson.ToMcmaJson(System.Object,System.Boolean)
  isExternal: true
  name: ToMcmaJson(Object, Boolean)
  nameWithType: McmaJson.ToMcmaJson(Object, Boolean)
  fullName: Mcma.Serialization.McmaJson.ToMcmaJson(System.Object, System.Boolean)
  spec.csharp:
  - uid: Mcma.Serialization.McmaJson.ToMcmaJson(System.Object,System.Boolean)
    name: ToMcmaJson
    nameWithType: McmaJson.ToMcmaJson
    fullName: Mcma.Serialization.McmaJson.ToMcmaJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mcma.Serialization.McmaJson.ToMcmaJson(System.Object,System.Boolean)
    name: ToMcmaJson
    nameWithType: McmaJson.ToMcmaJson
    fullName: Mcma.Serialization.McmaJson.ToMcmaJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mcma.Serialization.McmaJson
  commentId: T:Mcma.Serialization.McmaJson
  parent: Mcma.Serialization
  name: McmaJson
  nameWithType: McmaJson
  fullName: Mcma.Serialization.McmaJson
- uid: Mcma.Serialization
  commentId: N:Mcma.Serialization
  name: Mcma.Serialization
  nameWithType: Mcma.Serialization
  fullName: Mcma.Serialization
- uid: Mcma.Client.IResourceEndpointClient.HttpEndpoint*
  commentId: Overload:Mcma.Client.IResourceEndpointClient.HttpEndpoint
  name: HttpEndpoint
  nameWithType: IResourceEndpointClient.HttpEndpoint
  fullName: Mcma.Client.IResourceEndpointClient.HttpEndpoint
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Mcma.Client.IResourceEndpointClient.QueryAsync*
  commentId: Overload:Mcma.Client.IResourceEndpointClient.QueryAsync
  name: QueryAsync
  nameWithType: IResourceEndpointClient.QueryAsync
  fullName: Mcma.Client.IResourceEndpointClient.QueryAsync
- uid: System.ValueTuple{System.String,System.String}[]
  isExternal: true
  name: ValueTuple<String, String>[]
  nameWithType: ValueTuple<String, String>[]
  fullName: System.ValueTuple<System.String, System.String>[]
  nameWithType.vb: ValueTuple(Of String, String)()
  fullName.vb: System.ValueTuple(Of System.String, System.String)()
  name.vb: ValueTuple(Of String, String)()
  spec.csharp:
  - uid: System.ValueTuple`2
    name: ValueTuple
    nameWithType: ValueTuple
    fullName: System.ValueTuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.ValueTuple`2
    name: ValueTuple
    nameWithType: ValueTuple
    fullName: System.ValueTuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Threading.Tasks.Task{Mcma.QueryResults{{T}}}
  commentId: T:System.Threading.Tasks.Task{Mcma.QueryResults{``0}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<QueryResults<T>>
  nameWithType: Task<QueryResults<T>>
  fullName: System.Threading.Tasks.Task<Mcma.QueryResults<T>>
  nameWithType.vb: Task(Of QueryResults(Of T))
  fullName.vb: System.Threading.Tasks.Task(Of Mcma.QueryResults(Of T))
  name.vb: Task(Of QueryResults(Of T))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mcma.QueryResults`1
    name: QueryResults
    nameWithType: QueryResults
    fullName: Mcma.QueryResults
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mcma.QueryResults`1
    name: QueryResults
    nameWithType: QueryResults
    fullName: Mcma.QueryResults
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: Mcma.Client.IResourceEndpointClient.PostAsync*
  commentId: Overload:Mcma.Client.IResourceEndpointClient.PostAsync
  name: PostAsync
  nameWithType: IResourceEndpointClient.PostAsync
  fullName: Mcma.Client.IResourceEndpointClient.PostAsync
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Threading.Tasks.Task{{T}}
  commentId: T:System.Threading.Tasks.Task{``0}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<T>
  nameWithType: Task<T>
  fullName: System.Threading.Tasks.Task<T>
  nameWithType.vb: Task(Of T)
  fullName.vb: System.Threading.Tasks.Task(Of T)
  name.vb: Task(Of T)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: Mcma.Client.IResourceEndpointClient.GetAsync*
  commentId: Overload:Mcma.Client.IResourceEndpointClient.GetAsync
  name: GetAsync
  nameWithType: IResourceEndpointClient.GetAsync
  fullName: Mcma.Client.IResourceEndpointClient.GetAsync
- uid: Mcma.Client.IResourceEndpointClient.PutAsync*
  commentId: Overload:Mcma.Client.IResourceEndpointClient.PutAsync
  name: PutAsync
  nameWithType: IResourceEndpointClient.PutAsync
  fullName: Mcma.Client.IResourceEndpointClient.PutAsync
- uid: Mcma.Client.IResourceEndpointClient.DeleteAsync*
  commentId: Overload:Mcma.Client.IResourceEndpointClient.DeleteAsync
  name: DeleteAsync
  nameWithType: IResourceEndpointClient.DeleteAsync
  fullName: Mcma.Client.IResourceEndpointClient.DeleteAsync
