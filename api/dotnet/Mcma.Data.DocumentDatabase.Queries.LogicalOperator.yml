### YamlMime:ManagedReference
items:
- uid: Mcma.Data.DocumentDatabase.Queries.LogicalOperator
  commentId: T:Mcma.Data.DocumentDatabase.Queries.LogicalOperator
  id: LogicalOperator
  parent: Mcma.Data.DocumentDatabase.Queries
  children:
  - Mcma.Data.DocumentDatabase.Queries.LogicalOperator.And
  - Mcma.Data.DocumentDatabase.Queries.LogicalOperator.op_Implicit(Mcma.Data.DocumentDatabase.Queries.LogicalOperator)~System.String
  - Mcma.Data.DocumentDatabase.Queries.LogicalOperator.op_Implicit(System.String)~Mcma.Data.DocumentDatabase.Queries.LogicalOperator
  - Mcma.Data.DocumentDatabase.Queries.LogicalOperator.Operators
  - Mcma.Data.DocumentDatabase.Queries.LogicalOperator.Or
  langs:
  - csharp
  - vb
  name: LogicalOperator
  nameWithType: LogicalOperator
  fullName: Mcma.Data.DocumentDatabase.Queries.LogicalOperator
  type: Class
  source:
    remote:
      path: Base/Mcma.Data/DocumentDatabase/Queries/LogicalOperator.cs
      branch: documentation
      repo: https://github.com/ebu/mcma-libraries-dotnet.git
    id: LogicalOperator
    path: ../mcma-libraries-dotnet/Base/Mcma.Data/DocumentDatabase/Queries/LogicalOperator.cs
    startLine: 4
  assemblies:
  - Mcma.Data
  namespace: Mcma.Data.DocumentDatabase.Queries
  syntax:
    content: public class LogicalOperator
    content.vb: Public Class LogicalOperator
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - System.Object.Mcma.Serialization.McmaJson.ToMcmaJson(System.Boolean)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Mcma.Data.DocumentDatabase.Queries.LogicalOperator.And
  commentId: F:Mcma.Data.DocumentDatabase.Queries.LogicalOperator.And
  id: And
  parent: Mcma.Data.DocumentDatabase.Queries.LogicalOperator
  langs:
  - csharp
  - vb
  name: And
  nameWithType: LogicalOperator.And
  fullName: Mcma.Data.DocumentDatabase.Queries.LogicalOperator.And
  type: Field
  source:
    remote:
      path: Base/Mcma.Data/DocumentDatabase/Queries/LogicalOperator.cs
      branch: documentation
      repo: https://github.com/ebu/mcma-libraries-dotnet.git
    id: And
    path: ../mcma-libraries-dotnet/Base/Mcma.Data/DocumentDatabase/Queries/LogicalOperator.cs
    startLine: 6
  assemblies:
  - Mcma.Data
  namespace: Mcma.Data.DocumentDatabase.Queries
  syntax:
    content: public static readonly LogicalOperator And
    return:
      type: Mcma.Data.DocumentDatabase.Queries.LogicalOperator
    content.vb: Public Shared ReadOnly And As LogicalOperator
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Mcma.Data.DocumentDatabase.Queries.LogicalOperator.Or
  commentId: F:Mcma.Data.DocumentDatabase.Queries.LogicalOperator.Or
  id: Or
  parent: Mcma.Data.DocumentDatabase.Queries.LogicalOperator
  langs:
  - csharp
  - vb
  name: Or
  nameWithType: LogicalOperator.Or
  fullName: Mcma.Data.DocumentDatabase.Queries.LogicalOperator.Or
  type: Field
  source:
    remote:
      path: Base/Mcma.Data/DocumentDatabase/Queries/LogicalOperator.cs
      branch: documentation
      repo: https://github.com/ebu/mcma-libraries-dotnet.git
    id: Or
    path: ../mcma-libraries-dotnet/Base/Mcma.Data/DocumentDatabase/Queries/LogicalOperator.cs
    startLine: 7
  assemblies:
  - Mcma.Data
  namespace: Mcma.Data.DocumentDatabase.Queries
  syntax:
    content: public static readonly LogicalOperator Or
    return:
      type: Mcma.Data.DocumentDatabase.Queries.LogicalOperator
    content.vb: Public Shared ReadOnly Or As LogicalOperator
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Mcma.Data.DocumentDatabase.Queries.LogicalOperator.Operators
  commentId: F:Mcma.Data.DocumentDatabase.Queries.LogicalOperator.Operators
  id: Operators
  parent: Mcma.Data.DocumentDatabase.Queries.LogicalOperator
  langs:
  - csharp
  - vb
  name: Operators
  nameWithType: LogicalOperator.Operators
  fullName: Mcma.Data.DocumentDatabase.Queries.LogicalOperator.Operators
  type: Field
  source:
    remote:
      path: Base/Mcma.Data/DocumentDatabase/Queries/LogicalOperator.cs
      branch: documentation
      repo: https://github.com/ebu/mcma-libraries-dotnet.git
    id: Operators
    path: ../mcma-libraries-dotnet/Base/Mcma.Data/DocumentDatabase/Queries/LogicalOperator.cs
    startLine: 8
  assemblies:
  - Mcma.Data
  namespace: Mcma.Data.DocumentDatabase.Queries
  syntax:
    content: public static readonly string[] Operators
    return:
      type: System.String[]
    content.vb: Public Shared ReadOnly Operators As String()
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Mcma.Data.DocumentDatabase.Queries.LogicalOperator.op_Implicit(System.String)~Mcma.Data.DocumentDatabase.Queries.LogicalOperator
  commentId: M:Mcma.Data.DocumentDatabase.Queries.LogicalOperator.op_Implicit(System.String)~Mcma.Data.DocumentDatabase.Queries.LogicalOperator
  id: op_Implicit(System.String)~Mcma.Data.DocumentDatabase.Queries.LogicalOperator
  parent: Mcma.Data.DocumentDatabase.Queries.LogicalOperator
  langs:
  - csharp
  - vb
  name: Implicit(String to LogicalOperator)
  nameWithType: LogicalOperator.Implicit(String to LogicalOperator)
  fullName: Mcma.Data.DocumentDatabase.Queries.LogicalOperator.Implicit(System.String to Mcma.Data.DocumentDatabase.Queries.LogicalOperator)
  type: Operator
  source:
    remote:
      path: Base/Mcma.Data/DocumentDatabase/Queries/LogicalOperator.cs
      branch: documentation
      repo: https://github.com/ebu/mcma-libraries-dotnet.git
    id: op_Implicit
    path: ../mcma-libraries-dotnet/Base/Mcma.Data/DocumentDatabase/Queries/LogicalOperator.cs
    startLine: 20
  assemblies:
  - Mcma.Data
  namespace: Mcma.Data.DocumentDatabase.Queries
  syntax:
    content: public static implicit operator LogicalOperator(string operator)
    parameters:
    - id: operator
      type: System.String
    return:
      type: Mcma.Data.DocumentDatabase.Queries.LogicalOperator
    content.vb: Public Shared Widening Operator CType(operator As String) As LogicalOperator
  overload: Mcma.Data.DocumentDatabase.Queries.LogicalOperator.op_Implicit*
  nameWithType.vb: LogicalOperator.Widening(String to LogicalOperator)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Mcma.Data.DocumentDatabase.Queries.LogicalOperator.Widening(System.String to Mcma.Data.DocumentDatabase.Queries.LogicalOperator)
  name.vb: Widening(String to LogicalOperator)
- uid: Mcma.Data.DocumentDatabase.Queries.LogicalOperator.op_Implicit(Mcma.Data.DocumentDatabase.Queries.LogicalOperator)~System.String
  commentId: M:Mcma.Data.DocumentDatabase.Queries.LogicalOperator.op_Implicit(Mcma.Data.DocumentDatabase.Queries.LogicalOperator)~System.String
  id: op_Implicit(Mcma.Data.DocumentDatabase.Queries.LogicalOperator)~System.String
  parent: Mcma.Data.DocumentDatabase.Queries.LogicalOperator
  langs:
  - csharp
  - vb
  name: Implicit(LogicalOperator to String)
  nameWithType: LogicalOperator.Implicit(LogicalOperator to String)
  fullName: Mcma.Data.DocumentDatabase.Queries.LogicalOperator.Implicit(Mcma.Data.DocumentDatabase.Queries.LogicalOperator to System.String)
  type: Operator
  source:
    remote:
      path: Base/Mcma.Data/DocumentDatabase/Queries/LogicalOperator.cs
      branch: documentation
      repo: https://github.com/ebu/mcma-libraries-dotnet.git
    id: op_Implicit
    path: ../mcma-libraries-dotnet/Base/Mcma.Data/DocumentDatabase/Queries/LogicalOperator.cs
    startLine: 22
  assemblies:
  - Mcma.Data
  namespace: Mcma.Data.DocumentDatabase.Queries
  syntax:
    content: public static implicit operator string (LogicalOperator operator)
    parameters:
    - id: operator
      type: Mcma.Data.DocumentDatabase.Queries.LogicalOperator
    return:
      type: System.String
    content.vb: Public Shared Widening Operator CType(operator As LogicalOperator) As String
  overload: Mcma.Data.DocumentDatabase.Queries.LogicalOperator.op_Implicit*
  nameWithType.vb: LogicalOperator.Widening(LogicalOperator to String)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Mcma.Data.DocumentDatabase.Queries.LogicalOperator.Widening(Mcma.Data.DocumentDatabase.Queries.LogicalOperator to System.String)
  name.vb: Widening(LogicalOperator to String)
references:
- uid: Mcma.Data.DocumentDatabase.Queries
  commentId: N:Mcma.Data.DocumentDatabase.Queries
  name: Mcma.Data.DocumentDatabase.Queries
  nameWithType: Mcma.Data.DocumentDatabase.Queries
  fullName: Mcma.Data.DocumentDatabase.Queries
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Mcma.Serialization.McmaJson.ToMcmaJson(System.Boolean)
  commentId: M:Mcma.Serialization.McmaJson.ToMcmaJson(System.Object,System.Boolean)
  parent: Mcma.Serialization.McmaJson
  definition: Mcma.Serialization.McmaJson.ToMcmaJson(System.Object,System.Boolean)
  name: ToMcmaJson(Boolean)
  nameWithType: McmaJson.ToMcmaJson(Boolean)
  fullName: Mcma.Serialization.McmaJson.ToMcmaJson(System.Boolean)
  spec.csharp:
  - uid: Mcma.Serialization.McmaJson.ToMcmaJson(System.Boolean)
    name: ToMcmaJson
    nameWithType: McmaJson.ToMcmaJson
    fullName: Mcma.Serialization.McmaJson.ToMcmaJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mcma.Serialization.McmaJson.ToMcmaJson(System.Boolean)
    name: ToMcmaJson
    nameWithType: McmaJson.ToMcmaJson
    fullName: Mcma.Serialization.McmaJson.ToMcmaJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Mcma.Serialization.McmaJson.ToMcmaJson(System.Object,System.Boolean)
  commentId: M:Mcma.Serialization.McmaJson.ToMcmaJson(System.Object,System.Boolean)
  isExternal: true
  name: ToMcmaJson(Object, Boolean)
  nameWithType: McmaJson.ToMcmaJson(Object, Boolean)
  fullName: Mcma.Serialization.McmaJson.ToMcmaJson(System.Object, System.Boolean)
  spec.csharp:
  - uid: Mcma.Serialization.McmaJson.ToMcmaJson(System.Object,System.Boolean)
    name: ToMcmaJson
    nameWithType: McmaJson.ToMcmaJson
    fullName: Mcma.Serialization.McmaJson.ToMcmaJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mcma.Serialization.McmaJson.ToMcmaJson(System.Object,System.Boolean)
    name: ToMcmaJson
    nameWithType: McmaJson.ToMcmaJson
    fullName: Mcma.Serialization.McmaJson.ToMcmaJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mcma.Serialization.McmaJson
  commentId: T:Mcma.Serialization.McmaJson
  parent: Mcma.Serialization
  name: McmaJson
  nameWithType: McmaJson
  fullName: Mcma.Serialization.McmaJson
- uid: Mcma.Serialization
  commentId: N:Mcma.Serialization
  name: Mcma.Serialization
  nameWithType: Mcma.Serialization
  fullName: Mcma.Serialization
- uid: Mcma.Data.DocumentDatabase.Queries.LogicalOperator
  commentId: T:Mcma.Data.DocumentDatabase.Queries.LogicalOperator
  parent: Mcma.Data.DocumentDatabase.Queries
  name: LogicalOperator
  nameWithType: LogicalOperator
  fullName: Mcma.Data.DocumentDatabase.Queries.LogicalOperator
- uid: System.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Mcma.Data.DocumentDatabase.Queries.LogicalOperator.op_Implicit*
  commentId: Overload:Mcma.Data.DocumentDatabase.Queries.LogicalOperator.op_Implicit
  name: Implicit
  nameWithType: LogicalOperator.Implicit
  fullName: Mcma.Data.DocumentDatabase.Queries.LogicalOperator.Implicit
  nameWithType.vb: LogicalOperator.Widening
  fullName.vb: Mcma.Data.DocumentDatabase.Queries.LogicalOperator.Widening
  name.vb: Widening
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
