### YamlMime:ManagedReference
items:
- uid: Mcma.Aws.Client.AwsEnvironmentVariables
  commentId: T:Mcma.Aws.Client.AwsEnvironmentVariables
  id: AwsEnvironmentVariables
  parent: Mcma.Aws.Client
  children:
  - Mcma.Aws.Client.AwsEnvironmentVariables.AccessKey
  - Mcma.Aws.Client.AwsEnvironmentVariables.Region
  - Mcma.Aws.Client.AwsEnvironmentVariables.SecretKey
  - Mcma.Aws.Client.AwsEnvironmentVariables.SessionToken
  langs:
  - csharp
  - vb
  name: AwsEnvironmentVariables
  nameWithType: AwsEnvironmentVariables
  fullName: Mcma.Aws.Client.AwsEnvironmentVariables
  type: Class
  source:
    remote:
      path: AWS/Mcma.Aws.Client/AwsEnvironmentVariables.cs
      branch: documentation
      repo: https://github.com/ebu/mcma-libraries-dotnet.git
    id: AwsEnvironmentVariables
    path: ../mcma-libraries-dotnet/AWS/Mcma.Aws.Client/AwsEnvironmentVariables.cs
    startLine: 4
  assemblies:
  - Mcma.Aws.Client
  namespace: Mcma.Aws.Client
  syntax:
    content: public static class AwsEnvironmentVariables
    content.vb: Public Module AwsEnvironmentVariables
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Mcma.Aws.Client.AwsEnvironmentVariables.AccessKey
  commentId: P:Mcma.Aws.Client.AwsEnvironmentVariables.AccessKey
  id: AccessKey
  parent: Mcma.Aws.Client.AwsEnvironmentVariables
  langs:
  - csharp
  - vb
  name: AccessKey
  nameWithType: AwsEnvironmentVariables.AccessKey
  fullName: Mcma.Aws.Client.AwsEnvironmentVariables.AccessKey
  type: Property
  source:
    remote:
      path: AWS/Mcma.Aws.Client/AwsEnvironmentVariables.cs
      branch: documentation
      repo: https://github.com/ebu/mcma-libraries-dotnet.git
    id: AccessKey
    path: ../mcma-libraries-dotnet/AWS/Mcma.Aws.Client/AwsEnvironmentVariables.cs
    startLine: 6
  assemblies:
  - Mcma.Aws.Client
  namespace: Mcma.Aws.Client
  syntax:
    content: public static string AccessKey { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Shared ReadOnly Property AccessKey As String
  overload: Mcma.Aws.Client.AwsEnvironmentVariables.AccessKey*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Mcma.Aws.Client.AwsEnvironmentVariables.SecretKey
  commentId: P:Mcma.Aws.Client.AwsEnvironmentVariables.SecretKey
  id: SecretKey
  parent: Mcma.Aws.Client.AwsEnvironmentVariables
  langs:
  - csharp
  - vb
  name: SecretKey
  nameWithType: AwsEnvironmentVariables.SecretKey
  fullName: Mcma.Aws.Client.AwsEnvironmentVariables.SecretKey
  type: Property
  source:
    remote:
      path: AWS/Mcma.Aws.Client/AwsEnvironmentVariables.cs
      branch: documentation
      repo: https://github.com/ebu/mcma-libraries-dotnet.git
    id: SecretKey
    path: ../mcma-libraries-dotnet/AWS/Mcma.Aws.Client/AwsEnvironmentVariables.cs
    startLine: 8
  assemblies:
  - Mcma.Aws.Client
  namespace: Mcma.Aws.Client
  syntax:
    content: public static string SecretKey { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Shared ReadOnly Property SecretKey As String
  overload: Mcma.Aws.Client.AwsEnvironmentVariables.SecretKey*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Mcma.Aws.Client.AwsEnvironmentVariables.SessionToken
  commentId: P:Mcma.Aws.Client.AwsEnvironmentVariables.SessionToken
  id: SessionToken
  parent: Mcma.Aws.Client.AwsEnvironmentVariables
  langs:
  - csharp
  - vb
  name: SessionToken
  nameWithType: AwsEnvironmentVariables.SessionToken
  fullName: Mcma.Aws.Client.AwsEnvironmentVariables.SessionToken
  type: Property
  source:
    remote:
      path: AWS/Mcma.Aws.Client/AwsEnvironmentVariables.cs
      branch: documentation
      repo: https://github.com/ebu/mcma-libraries-dotnet.git
    id: SessionToken
    path: ../mcma-libraries-dotnet/AWS/Mcma.Aws.Client/AwsEnvironmentVariables.cs
    startLine: 10
  assemblies:
  - Mcma.Aws.Client
  namespace: Mcma.Aws.Client
  syntax:
    content: public static string SessionToken { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Shared ReadOnly Property SessionToken As String
  overload: Mcma.Aws.Client.AwsEnvironmentVariables.SessionToken*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Mcma.Aws.Client.AwsEnvironmentVariables.Region
  commentId: P:Mcma.Aws.Client.AwsEnvironmentVariables.Region
  id: Region
  parent: Mcma.Aws.Client.AwsEnvironmentVariables
  langs:
  - csharp
  - vb
  name: Region
  nameWithType: AwsEnvironmentVariables.Region
  fullName: Mcma.Aws.Client.AwsEnvironmentVariables.Region
  type: Property
  source:
    remote:
      path: AWS/Mcma.Aws.Client/AwsEnvironmentVariables.cs
      branch: documentation
      repo: https://github.com/ebu/mcma-libraries-dotnet.git
    id: Region
    path: ../mcma-libraries-dotnet/AWS/Mcma.Aws.Client/AwsEnvironmentVariables.cs
    startLine: 12
  assemblies:
  - Mcma.Aws.Client
  namespace: Mcma.Aws.Client
  syntax:
    content: public static string Region { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Shared ReadOnly Property Region As String
  overload: Mcma.Aws.Client.AwsEnvironmentVariables.Region*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
references:
- uid: Mcma.Aws.Client
  commentId: N:Mcma.Aws.Client
  name: Mcma.Aws.Client
  nameWithType: Mcma.Aws.Client
  fullName: Mcma.Aws.Client
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Mcma.Aws.Client.AwsEnvironmentVariables.AccessKey*
  commentId: Overload:Mcma.Aws.Client.AwsEnvironmentVariables.AccessKey
  name: AccessKey
  nameWithType: AwsEnvironmentVariables.AccessKey
  fullName: Mcma.Aws.Client.AwsEnvironmentVariables.AccessKey
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Mcma.Aws.Client.AwsEnvironmentVariables.SecretKey*
  commentId: Overload:Mcma.Aws.Client.AwsEnvironmentVariables.SecretKey
  name: SecretKey
  nameWithType: AwsEnvironmentVariables.SecretKey
  fullName: Mcma.Aws.Client.AwsEnvironmentVariables.SecretKey
- uid: Mcma.Aws.Client.AwsEnvironmentVariables.SessionToken*
  commentId: Overload:Mcma.Aws.Client.AwsEnvironmentVariables.SessionToken
  name: SessionToken
  nameWithType: AwsEnvironmentVariables.SessionToken
  fullName: Mcma.Aws.Client.AwsEnvironmentVariables.SessionToken
- uid: Mcma.Aws.Client.AwsEnvironmentVariables.Region*
  commentId: Overload:Mcma.Aws.Client.AwsEnvironmentVariables.Region
  name: Region
  nameWithType: AwsEnvironmentVariables.Region
  fullName: Mcma.Aws.Client.AwsEnvironmentVariables.Region
