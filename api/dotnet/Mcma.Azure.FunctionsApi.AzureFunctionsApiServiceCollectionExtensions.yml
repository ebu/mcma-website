### YamlMime:ManagedReference
items:
- uid: Mcma.Azure.FunctionsApi.AzureFunctionsApiServiceCollectionExtensions
  commentId: T:Mcma.Azure.FunctionsApi.AzureFunctionsApiServiceCollectionExtensions
  id: AzureFunctionsApiServiceCollectionExtensions
  parent: Mcma.Azure.FunctionsApi
  children:
  - Mcma.Azure.FunctionsApi.AzureFunctionsApiServiceCollectionExtensions.AddMcmaAzureFunctionApi(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Mcma.Api.McmaApiBuilder})
  langs:
  - csharp
  - vb
  name: AzureFunctionsApiServiceCollectionExtensions
  nameWithType: AzureFunctionsApiServiceCollectionExtensions
  fullName: Mcma.Azure.FunctionsApi.AzureFunctionsApiServiceCollectionExtensions
  type: Class
  source:
    remote:
      path: Azure/Mcma.Azure.FunctionsApi/AzureFunctionsApiServiceCollectionExtensions.cs
      branch: documentation
      repo: https://github.com/ebu/mcma-libraries-dotnet.git
    id: AzureFunctionsApiServiceCollectionExtensions
    path: ../mcma-libraries-dotnet/Azure/Mcma.Azure.FunctionsApi/AzureFunctionsApiServiceCollectionExtensions.cs
    startLine: 6
  assemblies:
  - Mcma.Azure.FunctionsApi
  namespace: Mcma.Azure.FunctionsApi
  syntax:
    content: 'public static class AzureFunctionsApiServiceCollectionExtensions : object'
    content.vb: >-
      Public Module AzureFunctionsApiServiceCollectionExtensions

          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Mcma.Azure.FunctionsApi.AzureFunctionsApiServiceCollectionExtensions.AddMcmaAzureFunctionApi(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Mcma.Api.McmaApiBuilder})
  commentId: M:Mcma.Azure.FunctionsApi.AzureFunctionsApiServiceCollectionExtensions.AddMcmaAzureFunctionApi(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Mcma.Api.McmaApiBuilder})
  id: AddMcmaAzureFunctionApi(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Mcma.Api.McmaApiBuilder})
  isExtensionMethod: true
  parent: Mcma.Azure.FunctionsApi.AzureFunctionsApiServiceCollectionExtensions
  langs:
  - csharp
  - vb
  name: AddMcmaAzureFunctionApi(IServiceCollection, Action<McmaApiBuilder>)
  nameWithType: AzureFunctionsApiServiceCollectionExtensions.AddMcmaAzureFunctionApi(IServiceCollection, Action<McmaApiBuilder>)
  fullName: Mcma.Azure.FunctionsApi.AzureFunctionsApiServiceCollectionExtensions.AddMcmaAzureFunctionApi(Microsoft.Extensions.DependencyInjection.IServiceCollection, System.Action<Mcma.Api.McmaApiBuilder>)
  type: Method
  source:
    remote:
      path: Azure/Mcma.Azure.FunctionsApi/AzureFunctionsApiServiceCollectionExtensions.cs
      branch: documentation
      repo: https://github.com/ebu/mcma-libraries-dotnet.git
    id: AddMcmaAzureFunctionApi
    path: ../mcma-libraries-dotnet/Azure/Mcma.Azure.FunctionsApi/AzureFunctionsApiServiceCollectionExtensions.cs
    startLine: 8
  assemblies:
  - Mcma.Azure.FunctionsApi
  namespace: Mcma.Azure.FunctionsApi
  syntax:
    content: public static IServiceCollection AddMcmaAzureFunctionApi(this IServiceCollection services, Action<McmaApiBuilder> build)
    parameters:
    - id: services
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
    - id: build
      type: System.Action{Mcma.Api.McmaApiBuilder}
    return:
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AddMcmaAzureFunctionApi(services As IServiceCollection, build As Action(Of McmaApiBuilder)) As IServiceCollection
  overload: Mcma.Azure.FunctionsApi.AzureFunctionsApiServiceCollectionExtensions.AddMcmaAzureFunctionApi*
  nameWithType.vb: AzureFunctionsApiServiceCollectionExtensions.AddMcmaAzureFunctionApi(IServiceCollection, Action(Of McmaApiBuilder))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Mcma.Azure.FunctionsApi.AzureFunctionsApiServiceCollectionExtensions.AddMcmaAzureFunctionApi(Microsoft.Extensions.DependencyInjection.IServiceCollection, System.Action(Of Mcma.Api.McmaApiBuilder))
  name.vb: AddMcmaAzureFunctionApi(IServiceCollection, Action(Of McmaApiBuilder))
references:
- uid: Mcma.Azure.FunctionsApi
  commentId: N:Mcma.Azure.FunctionsApi
  name: Mcma.Azure.FunctionsApi
  nameWithType: Mcma.Azure.FunctionsApi
  fullName: Mcma.Azure.FunctionsApi
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Mcma.Azure.FunctionsApi.AzureFunctionsApiServiceCollectionExtensions.AddMcmaAzureFunctionApi*
  commentId: Overload:Mcma.Azure.FunctionsApi.AzureFunctionsApiServiceCollectionExtensions.AddMcmaAzureFunctionApi
  name: AddMcmaAzureFunctionApi
  nameWithType: AzureFunctionsApiServiceCollectionExtensions.AddMcmaAzureFunctionApi
  fullName: Mcma.Azure.FunctionsApi.AzureFunctionsApiServiceCollectionExtensions.AddMcmaAzureFunctionApi
- uid: Microsoft.Extensions.DependencyInjection.IServiceCollection
  commentId: T:Microsoft.Extensions.DependencyInjection.IServiceCollection
  parent: Microsoft.Extensions.DependencyInjection
  isExternal: true
  name: IServiceCollection
  nameWithType: IServiceCollection
  fullName: Microsoft.Extensions.DependencyInjection.IServiceCollection
- uid: System.Action{Mcma.Api.McmaApiBuilder}
  commentId: T:System.Action{Mcma.Api.McmaApiBuilder}
  parent: System
  definition: System.Action`1
  name: Action<McmaApiBuilder>
  nameWithType: Action<McmaApiBuilder>
  fullName: System.Action<Mcma.Api.McmaApiBuilder>
  nameWithType.vb: Action(Of McmaApiBuilder)
  fullName.vb: System.Action(Of Mcma.Api.McmaApiBuilder)
  name.vb: Action(Of McmaApiBuilder)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mcma.Api.McmaApiBuilder
    name: McmaApiBuilder
    nameWithType: McmaApiBuilder
    fullName: Mcma.Api.McmaApiBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mcma.Api.McmaApiBuilder
    name: McmaApiBuilder
    nameWithType: McmaApiBuilder
    fullName: Mcma.Api.McmaApiBuilder
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.DependencyInjection
  commentId: N:Microsoft.Extensions.DependencyInjection
  isExternal: true
  name: Microsoft.Extensions.DependencyInjection
  nameWithType: Microsoft.Extensions.DependencyInjection
  fullName: Microsoft.Extensions.DependencyInjection
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
