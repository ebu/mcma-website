### YamlMime:ManagedReference
items:
- uid: Mcma.Azure.CosmosDb.CosmosDbServiceCollectionExtensions
  commentId: T:Mcma.Azure.CosmosDb.CosmosDbServiceCollectionExtensions
  id: CosmosDbServiceCollectionExtensions
  parent: Mcma.Azure.CosmosDb
  children:
  - Mcma.Azure.CosmosDb.CosmosDbServiceCollectionExtensions.AddMcmaCosmosDb(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Mcma.Azure.CosmosDb.CosmosDbTableOptions},System.Action{Mcma.Azure.CosmosDb.CosmosDbTableBuilder})
  langs:
  - csharp
  - vb
  name: CosmosDbServiceCollectionExtensions
  nameWithType: CosmosDbServiceCollectionExtensions
  fullName: Mcma.Azure.CosmosDb.CosmosDbServiceCollectionExtensions
  type: Class
  source:
    remote:
      path: Azure/Mcma.Azure.CosmosDb/CosmosDbServiceCollectionExtensions.cs
      branch: documentation
      repo: https://github.com/ebu/mcma-libraries-dotnet.git
    id: CosmosDbServiceCollectionExtensions
    path: ../mcma-libraries-dotnet/Azure/Mcma.Azure.CosmosDb/CosmosDbServiceCollectionExtensions.cs
    startLine: 9
  assemblies:
  - Mcma.Azure.CosmosDb
  namespace: Mcma.Azure.CosmosDb
  syntax:
    content: public static class CosmosDbServiceCollectionExtensions
    content.vb: Public Module CosmosDbServiceCollectionExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Mcma.Azure.CosmosDb.CosmosDbServiceCollectionExtensions.AddMcmaCosmosDb(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Mcma.Azure.CosmosDb.CosmosDbTableOptions},System.Action{Mcma.Azure.CosmosDb.CosmosDbTableBuilder})
  commentId: M:Mcma.Azure.CosmosDb.CosmosDbServiceCollectionExtensions.AddMcmaCosmosDb(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Mcma.Azure.CosmosDb.CosmosDbTableOptions},System.Action{Mcma.Azure.CosmosDb.CosmosDbTableBuilder})
  id: AddMcmaCosmosDb(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Mcma.Azure.CosmosDb.CosmosDbTableOptions},System.Action{Mcma.Azure.CosmosDb.CosmosDbTableBuilder})
  isExtensionMethod: true
  parent: Mcma.Azure.CosmosDb.CosmosDbServiceCollectionExtensions
  langs:
  - csharp
  - vb
  name: AddMcmaCosmosDb(IServiceCollection, Action<CosmosDbTableOptions>, Action<CosmosDbTableBuilder>)
  nameWithType: CosmosDbServiceCollectionExtensions.AddMcmaCosmosDb(IServiceCollection, Action<CosmosDbTableOptions>, Action<CosmosDbTableBuilder>)
  fullName: Mcma.Azure.CosmosDb.CosmosDbServiceCollectionExtensions.AddMcmaCosmosDb(Microsoft.Extensions.DependencyInjection.IServiceCollection, System.Action<Mcma.Azure.CosmosDb.CosmosDbTableOptions>, System.Action<Mcma.Azure.CosmosDb.CosmosDbTableBuilder>)
  type: Method
  source:
    remote:
      path: Azure/Mcma.Azure.CosmosDb/CosmosDbServiceCollectionExtensions.cs
      branch: documentation
      repo: https://github.com/ebu/mcma-libraries-dotnet.git
    id: AddMcmaCosmosDb
    path: ../mcma-libraries-dotnet/Azure/Mcma.Azure.CosmosDb/CosmosDbServiceCollectionExtensions.cs
    startLine: 11
  assemblies:
  - Mcma.Azure.CosmosDb
  namespace: Mcma.Azure.CosmosDb
  syntax:
    content: public static IServiceCollection AddMcmaCosmosDb(this IServiceCollection services, Action<CosmosDbTableOptions> configureOptions = null, Action<CosmosDbTableBuilder> build = null)
    parameters:
    - id: services
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
    - id: configureOptions
      type: System.Action{Mcma.Azure.CosmosDb.CosmosDbTableOptions}
    - id: build
      type: System.Action{Mcma.Azure.CosmosDb.CosmosDbTableBuilder}
    return:
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AddMcmaCosmosDb(services As IServiceCollection, configureOptions As Action(Of CosmosDbTableOptions) = Nothing, build As Action(Of CosmosDbTableBuilder) = Nothing) As IServiceCollection
  overload: Mcma.Azure.CosmosDb.CosmosDbServiceCollectionExtensions.AddMcmaCosmosDb*
  nameWithType.vb: CosmosDbServiceCollectionExtensions.AddMcmaCosmosDb(IServiceCollection, Action(Of CosmosDbTableOptions), Action(Of CosmosDbTableBuilder))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Mcma.Azure.CosmosDb.CosmosDbServiceCollectionExtensions.AddMcmaCosmosDb(Microsoft.Extensions.DependencyInjection.IServiceCollection, System.Action(Of Mcma.Azure.CosmosDb.CosmosDbTableOptions), System.Action(Of Mcma.Azure.CosmosDb.CosmosDbTableBuilder))
  name.vb: AddMcmaCosmosDb(IServiceCollection, Action(Of CosmosDbTableOptions), Action(Of CosmosDbTableBuilder))
references:
- uid: Mcma.Azure.CosmosDb
  commentId: N:Mcma.Azure.CosmosDb
  name: Mcma.Azure.CosmosDb
  nameWithType: Mcma.Azure.CosmosDb
  fullName: Mcma.Azure.CosmosDb
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Mcma.Azure.CosmosDb.CosmosDbServiceCollectionExtensions.AddMcmaCosmosDb*
  commentId: Overload:Mcma.Azure.CosmosDb.CosmosDbServiceCollectionExtensions.AddMcmaCosmosDb
  name: AddMcmaCosmosDb
  nameWithType: CosmosDbServiceCollectionExtensions.AddMcmaCosmosDb
  fullName: Mcma.Azure.CosmosDb.CosmosDbServiceCollectionExtensions.AddMcmaCosmosDb
- uid: Microsoft.Extensions.DependencyInjection.IServiceCollection
  commentId: T:Microsoft.Extensions.DependencyInjection.IServiceCollection
  parent: Microsoft.Extensions.DependencyInjection
  isExternal: true
  name: IServiceCollection
  nameWithType: IServiceCollection
  fullName: Microsoft.Extensions.DependencyInjection.IServiceCollection
- uid: System.Action{Mcma.Azure.CosmosDb.CosmosDbTableOptions}
  commentId: T:System.Action{Mcma.Azure.CosmosDb.CosmosDbTableOptions}
  parent: System
  definition: System.Action`1
  name: Action<CosmosDbTableOptions>
  nameWithType: Action<CosmosDbTableOptions>
  fullName: System.Action<Mcma.Azure.CosmosDb.CosmosDbTableOptions>
  nameWithType.vb: Action(Of CosmosDbTableOptions)
  fullName.vb: System.Action(Of Mcma.Azure.CosmosDb.CosmosDbTableOptions)
  name.vb: Action(Of CosmosDbTableOptions)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mcma.Azure.CosmosDb.CosmosDbTableOptions
    name: CosmosDbTableOptions
    nameWithType: CosmosDbTableOptions
    fullName: Mcma.Azure.CosmosDb.CosmosDbTableOptions
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mcma.Azure.CosmosDb.CosmosDbTableOptions
    name: CosmosDbTableOptions
    nameWithType: CosmosDbTableOptions
    fullName: Mcma.Azure.CosmosDb.CosmosDbTableOptions
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action{Mcma.Azure.CosmosDb.CosmosDbTableBuilder}
  commentId: T:System.Action{Mcma.Azure.CosmosDb.CosmosDbTableBuilder}
  parent: System
  definition: System.Action`1
  name: Action<CosmosDbTableBuilder>
  nameWithType: Action<CosmosDbTableBuilder>
  fullName: System.Action<Mcma.Azure.CosmosDb.CosmosDbTableBuilder>
  nameWithType.vb: Action(Of CosmosDbTableBuilder)
  fullName.vb: System.Action(Of Mcma.Azure.CosmosDb.CosmosDbTableBuilder)
  name.vb: Action(Of CosmosDbTableBuilder)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mcma.Azure.CosmosDb.CosmosDbTableBuilder
    name: CosmosDbTableBuilder
    nameWithType: CosmosDbTableBuilder
    fullName: Mcma.Azure.CosmosDb.CosmosDbTableBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mcma.Azure.CosmosDb.CosmosDbTableBuilder
    name: CosmosDbTableBuilder
    nameWithType: CosmosDbTableBuilder
    fullName: Mcma.Azure.CosmosDb.CosmosDbTableBuilder
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.DependencyInjection
  commentId: N:Microsoft.Extensions.DependencyInjection
  isExternal: true
  name: Microsoft.Extensions.DependencyInjection
  nameWithType: Microsoft.Extensions.DependencyInjection
  fullName: Microsoft.Extensions.DependencyInjection
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
