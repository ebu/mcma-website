### YamlMime:ManagedReference
items:
- uid: Mcma.Utility.McmaEnvironmentVariables
  commentId: T:Mcma.Utility.McmaEnvironmentVariables
  id: McmaEnvironmentVariables
  parent: Mcma.Utility
  children:
  - Mcma.Utility.McmaEnvironmentVariables.Get(System.String,System.Boolean)
  - Mcma.Utility.McmaEnvironmentVariables.Prefix
  langs:
  - csharp
  - vb
  name: McmaEnvironmentVariables
  nameWithType: McmaEnvironmentVariables
  fullName: Mcma.Utility.McmaEnvironmentVariables
  type: Class
  source:
    remote:
      path: Base/Mcma.Core/Utility/McmaEnvironmentVariables.cs
      branch: documentation
      repo: https://github.com/ebu/mcma-libraries-dotnet.git
    id: McmaEnvironmentVariables
    path: ../mcma-libraries-dotnet/Base/Mcma.Core/Utility/McmaEnvironmentVariables.cs
    startLine: 7
  assemblies:
  - Mcma.Core
  namespace: Mcma.Utility
  summary: "\nUtility for accessing MCMA-specific environment variables\n"
  example: []
  syntax:
    content: public static class McmaEnvironmentVariables
    content.vb: Public Module McmaEnvironmentVariables
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Mcma.Utility.McmaEnvironmentVariables.Prefix
  commentId: F:Mcma.Utility.McmaEnvironmentVariables.Prefix
  id: Prefix
  parent: Mcma.Utility.McmaEnvironmentVariables
  langs:
  - csharp
  - vb
  name: Prefix
  nameWithType: McmaEnvironmentVariables.Prefix
  fullName: Mcma.Utility.McmaEnvironmentVariables.Prefix
  type: Field
  source:
    remote:
      path: Base/Mcma.Core/Utility/McmaEnvironmentVariables.cs
      branch: documentation
      repo: https://github.com/ebu/mcma-libraries-dotnet.git
    id: Prefix
    path: ../mcma-libraries-dotnet/Base/Mcma.Core/Utility/McmaEnvironmentVariables.cs
    startLine: 12
  assemblies:
  - Mcma.Core
  namespace: Mcma.Utility
  summary: "\nThe prefix used for all MCMA environment variables\n"
  example: []
  syntax:
    content: public const string Prefix = "MCMA_"
    return:
      type: System.String
    content.vb: Public Const Prefix As String = "MCMA_"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Mcma.Utility.McmaEnvironmentVariables.Get(System.String,System.Boolean)
  commentId: M:Mcma.Utility.McmaEnvironmentVariables.Get(System.String,System.Boolean)
  id: Get(System.String,System.Boolean)
  parent: Mcma.Utility.McmaEnvironmentVariables
  langs:
  - csharp
  - vb
  name: Get(String, Boolean)
  nameWithType: McmaEnvironmentVariables.Get(String, Boolean)
  fullName: Mcma.Utility.McmaEnvironmentVariables.Get(System.String, System.Boolean)
  type: Method
  source:
    remote:
      path: Base/Mcma.Core/Utility/McmaEnvironmentVariables.cs
      branch: documentation
      repo: https://github.com/ebu/mcma-libraries-dotnet.git
    id: Get
    path: ../mcma-libraries-dotnet/Base/Mcma.Core/Utility/McmaEnvironmentVariables.cs
    startLine: 21
  assemblies:
  - Mcma.Core
  namespace: Mcma.Utility
  summary: "\nGets the value for an &quot;MCMA_&quot; prefixed environment variable\n"
  example: []
  syntax:
    content: public static string Get(string key, bool required = true)
    parameters:
    - id: key
      type: System.String
      description: The key for the environment variable. Will be prefixed with <xref href="Mcma.Utility.McmaEnvironmentVariables.Prefix" data-throw-if-not-resolved="false"></xref>.
    - id: required
      type: System.Boolean
      description: Flag indicating if an exception should be thrown if the environment variable is not found. Defaults to true.
    return:
      type: System.String
      description: The value of the environment variable, if found
    content.vb: Public Shared Function Get(key As String, required As Boolean = True) As String
  overload: Mcma.Utility.McmaEnvironmentVariables.Get*
  exceptions:
  - type: Mcma.McmaException
    commentId: T:Mcma.McmaException
    description: Thrown if <see cref="!:required"></see> is true and no environment variable with the given key is found.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Mcma.Utility
  commentId: N:Mcma.Utility
  name: Mcma.Utility
  nameWithType: Mcma.Utility
  fullName: Mcma.Utility
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Mcma.Utility.McmaEnvironmentVariables.Prefix
  commentId: F:Mcma.Utility.McmaEnvironmentVariables.Prefix
  isExternal: true
- uid: Mcma.McmaException
  commentId: T:Mcma.McmaException
  name: McmaException
  nameWithType: McmaException
  fullName: Mcma.McmaException
- uid: Mcma.Utility.McmaEnvironmentVariables.Get*
  commentId: Overload:Mcma.Utility.McmaEnvironmentVariables.Get
  name: Get
  nameWithType: McmaEnvironmentVariables.Get
  fullName: Mcma.Utility.McmaEnvironmentVariables.Get
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
